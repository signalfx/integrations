# This file was generated in the Smart Agent repo and copied here, DO NOT EDIT HERE.

circuit_breakers.<priority>.cx_open:
  brief: Whether the connection circuit breaker is closed (0) or open (1)
  custom: true
  description: Whether the connection circuit breaker is closed (0) or open (1)
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.cx_open

circuit_breakers.<priority>.cx_pool_open:
  brief: Whether the connection pool circuit breaker is closed (0) or open (1)
  custom: true
  description: Whether the connection pool circuit breaker is closed (0) or open (1)
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.cx_pool_open

circuit_breakers.<priority>.remaining_cx:
  brief: Number of remaining connections until the circuit breaker opens
  custom: true
  description: Number of remaining connections until the circuit breaker opens
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.remaining_cx

circuit_breakers.<priority>.remaining_pending:
  brief: Number of remaining pending requests until the circuit breaker opens
  custom: true
  description: Number of remaining pending requests until the circuit breaker opens
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.remaining_pending

circuit_breakers.<priority>.remaining_retries:
  brief: Number of remaining retries until the circuit breaker opens
  custom: true
  description: Number of remaining retries until the circuit breaker opens
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.remaining_retries

circuit_breakers.<priority>.remaining_rq:
  brief: Number of remaining requests until the circuit breaker opens
  custom: true
  description: Number of remaining requests until the circuit breaker opens
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.remaining_rq

circuit_breakers.<priority>.rq_open:
  brief: Whether the requests circuit breaker is closed (0) or open (1)
  custom: true
  description: Whether the requests circuit breaker is closed (0) or open (1)
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.rq_open

circuit_breakers.<priority>.rq_pending_open:
  brief: Whether the pending requests circuit breaker is closed (0) or open (1)
  custom: true
  description: Whether the pending requests circuit breaker is closed (0) or open
    (1)
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.rq_pending_open

circuit_breakers.<priority>.rq_retry_open:
  brief: Whether the retry circuit breaker is closed (0) or open (1)
  custom: true
  description: Whether the retry circuit breaker is closed (0) or open (1)
  metric_type: gauge
  monitor: appmesh
  title: circuit_breakers.<priority>.rq_retry_open

external.upstream_rq_<_>:
  brief: External origin specific HTTP response codes
  custom: true
  description: External origin specific HTTP response codes
  metric_type: cumulative
  monitor: appmesh
  title: external.upstream_rq_<_>

external.upstream_rq_<_xx>:
  brief: External origin aggregate HTTP response codes
  custom: true
  description: External origin aggregate HTTP response codes
  metric_type: cumulative
  monitor: appmesh
  title: external.upstream_rq_<_xx>

external.upstream_rq_completed:
  brief: Total external origin requests completed
  custom: true
  description: Total external origin requests completed
  metric_type: cumulative
  monitor: appmesh
  title: external.upstream_rq_completed

external.upstream_rq_time:
  brief: External origin request time milliseconds
  custom: true
  description: External origin request time milliseconds
  metric_type: gauge
  monitor: appmesh
  title: external.upstream_rq_time

internal.upstream_rq_<_>:
  brief: Internal origin specific HTTP response codes
  custom: true
  description: Internal origin specific HTTP response codes
  metric_type: cumulative
  monitor: appmesh
  title: internal.upstream_rq_<_>

internal.upstream_rq_<_xx>:
  brief: Internal origin aggregate HTTP response codes
  custom: true
  description: Internal origin aggregate HTTP response codes
  metric_type: cumulative
  monitor: appmesh
  title: internal.upstream_rq_<_xx>

internal.upstream_rq_completed:
  brief: Total internal origin requests completed
  custom: true
  description: Total internal origin requests completed
  metric_type: cumulative
  monitor: appmesh
  title: internal.upstream_rq_completed

internal.upstream_rq_time:
  brief: Internal origin request time milliseconds
  custom: true
  description: Internal origin request time milliseconds
  metric_type: gauge
  monitor: appmesh
  title: internal.upstream_rq_time

membership_change:
  brief: Total cluster membership changes
  custom: true
  description: Total cluster membership changes
  metric_type: cumulative
  monitor: appmesh
  title: membership_change

membership_degraded:
  brief: Current cluster degraded total
  custom: true
  description: Current cluster degraded total
  metric_type: gauge
  monitor: appmesh
  title: membership_degraded

membership_healthy:
  brief: Current cluster healthy total (inclusive of both health checking and outlier
    detection)
  custom: false
  description: Current cluster healthy total (inclusive of both health checking and
    outlier detection)
  metric_type: gauge
  monitor: appmesh
  title: membership_healthy

membership_total:
  brief: Current cluster membership total
  custom: false
  description: Current cluster membership total
  metric_type: gauge
  monitor: appmesh
  title: membership_total

upstream_cx_active:
  brief: Total active connections
  custom: true
  description: Total active connections
  metric_type: gauge
  monitor: appmesh
  title: upstream_cx_active

upstream_cx_close_notify:
  brief: Total connections closed via HTTP/1.1 connection close header or HTTP/2 GOAWAY
  custom: true
  description: Total connections closed via HTTP/1.1 connection close header or HTTP/2
    GOAWAY
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_close_notify

upstream_cx_connect_attempts_exceeded:
  brief: Total consecutive connection failures exceeding configured connection attempts
  custom: true
  description: Total consecutive connection failures exceeding configured connection
    attempts
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_connect_attempts_exceeded

upstream_cx_connect_fail:
  brief: Total connection failures
  custom: true
  description: Total connection failures
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_connect_fail

upstream_cx_connect_ms:
  brief: Connection establishment milliseconds
  custom: true
  description: Connection establishment milliseconds
  metric_type: gauge
  monitor: appmesh
  title: upstream_cx_connect_ms

upstream_cx_connect_timeout:
  brief: Total connection connect timeouts
  custom: true
  description: Total connection connect timeouts
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_connect_timeout

upstream_cx_destroy:
  brief: Total destroyed connections
  custom: true
  description: Total destroyed connections
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy

upstream_cx_destroy_local:
  brief: Total connections destroyed locally
  custom: true
  description: Total connections destroyed locally
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy_local

upstream_cx_destroy_local_with_active_rq:
  brief: Total connections destroyed locally with 1+ active request
  custom: true
  description: Total connections destroyed locally with 1+ active request
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy_local_with_active_rq

upstream_cx_destroy_remote:
  brief: Total connections destroyed remotely
  custom: true
  description: Total connections destroyed remotely
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy_remote

upstream_cx_destroy_remote_with_active_rq:
  brief: Total connections destroyed remotely with 1+ active request
  custom: true
  description: Total connections destroyed remotely with 1+ active request
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy_remote_with_active_rq

upstream_cx_destroy_with_active_rq:
  brief: Total connections destroyed with 1+ active request
  custom: true
  description: Total connections destroyed with 1+ active request
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_destroy_with_active_rq

upstream_cx_http1_total:
  brief: Total HTTP/1.1 connections
  custom: true
  description: Total HTTP/1.1 connections
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_http1_total

upstream_cx_http2_total:
  brief: Total HTTP/2 connections
  custom: true
  description: Total HTTP/2 connections
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_http2_total

upstream_cx_idle_timeout:
  brief: Total connection idle timeouts
  custom: true
  description: Total connection idle timeouts
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_idle_timeout

upstream_cx_length_ms:
  brief: Connection length milliseconds
  custom: true
  description: Connection length milliseconds
  metric_type: gauge
  monitor: appmesh
  title: upstream_cx_length_ms

upstream_cx_max_requests:
  brief: Total connections closed due to maximum requests
  custom: true
  description: Total connections closed due to maximum requests
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_max_requests

upstream_cx_none_healthy:
  brief: Total times connection not established due to no healthy hosts
  custom: true
  description: Total times connection not established due to no healthy hosts
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_none_healthy

upstream_cx_overflow:
  brief: "Total times that the cluster\u2019s connection circuit breaker overflowed"
  custom: true
  description: "Total times that the cluster\u2019s connection circuit breaker overflowed"
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_overflow

upstream_cx_pool_overflow:
  brief: "Total times that the cluster\u2019s connection pool circuit breaker overflowed"
  custom: true
  description: "Total times that the cluster\u2019s connection pool circuit breaker\
    \ overflowed"
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_pool_overflow

upstream_cx_protocol_error:
  brief: Total connection protocol errors
  custom: true
  description: Total connection protocol errors
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_protocol_error

upstream_cx_rx_bytes_buffered:
  brief: Received connection bytes currently buffered
  custom: true
  description: Received connection bytes currently buffered
  metric_type: gauge
  monitor: appmesh
  title: upstream_cx_rx_bytes_buffered

upstream_cx_rx_bytes_total:
  brief: Total received connection bytes
  custom: false
  description: Total received connection bytes
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_rx_bytes_total

upstream_cx_total:
  brief: Total connections
  custom: true
  description: Total connections
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_total

upstream_cx_tx_bytes_buffered:
  brief: Send connection bytes currently buffered
  custom: true
  description: Send connection bytes currently buffered
  metric_type: gauge
  monitor: appmesh
  title: upstream_cx_tx_bytes_buffered

upstream_cx_tx_bytes_total:
  brief: Total sent connection bytes
  custom: true
  description: Total sent connection bytes
  metric_type: cumulative
  monitor: appmesh
  title: upstream_cx_tx_bytes_total

upstream_rq_2xx:
  brief: Total number of HTTP response codes in the 200-299 range
  custom: true
  description: Total number of HTTP response codes in the 200-299 range
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_2xx

upstream_rq_3xx:
  brief: Total number of HTTP response codes in the 300-399 range
  custom: true
  description: Total number of HTTP response codes in the 300-399 range
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_3xx

upstream_rq_4xx:
  brief: Total number of HTTP response codes in the 400-499 range
  custom: false
  description: Total number of HTTP response codes in the 400-499 range
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_4xx

upstream_rq_5xx:
  brief: Total number of HTTP response codes in the 500-599 range
  custom: false
  description: Total number of HTTP response codes in the 500-599 range
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_5xx

upstream_rq_<___>:
  brief: Specific HTTP response codes (e.g., 201, 302, etc.)
  custom: true
  description: Specific HTTP response codes (e.g., 201, 302, etc.)
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_<___>

upstream_rq_active:
  brief: Total active requests
  custom: true
  description: Total active requests
  metric_type: gauge
  monitor: appmesh
  title: upstream_rq_active

upstream_rq_cancelled:
  brief: Total requests cancelled before obtaining a connection pool connection
  custom: true
  description: Total requests cancelled before obtaining a connection pool connection
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_cancelled

upstream_rq_completed:
  brief: Total upstream requests completed
  custom: false
  description: Total upstream requests completed
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_completed

upstream_rq_maintenance_mode:
  brief: Total requests that resulted in an immediate 503 due to maintenance mode
  custom: true
  description: Total requests that resulted in an immediate 503 due to maintenance
    mode
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_maintenance_mode

upstream_rq_pending_active:
  brief: Total active requests pending a connection pool connection
  custom: true
  description: Total active requests pending a connection pool connection
  metric_type: gauge
  monitor: appmesh
  title: upstream_rq_pending_active

upstream_rq_pending_failure_eject:
  brief: Total requests that were failed due to a connection pool connection failure
  custom: true
  description: Total requests that were failed due to a connection pool connection
    failure
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_pending_failure_eject

upstream_rq_pending_overflow:
  brief: Total requests that overflowed connection pool circuit breaking and were
    failed
  custom: true
  description: Total requests that overflowed connection pool circuit breaking and
    were failed
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_pending_overflow

upstream_rq_pending_total:
  brief: Total requests pending a connection pool connection
  custom: true
  description: Total requests pending a connection pool connection
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_pending_total

upstream_rq_per_try_timeout:
  brief: Total requests that hit the per try timeout
  custom: true
  description: Total requests that hit the per try timeout
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_per_try_timeout

upstream_rq_retry:
  brief: Total request retries
  custom: false
  description: Total request retries
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_retry

upstream_rq_retry_overflow:
  brief: Total requests not retried due to circuit breaking
  custom: true
  description: Total requests not retried due to circuit breaking
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_retry_overflow

upstream_rq_retry_success:
  brief: Total request retry successes
  custom: true
  description: Total request retry successes
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_retry_success

upstream_rq_rx_reset:
  brief: Total requests that were reset remotely
  custom: true
  description: Total requests that were reset remotely
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_rx_reset

upstream_rq_time:
  brief: Request time milliseconds
  custom: false
  description: Request time milliseconds
  metric_type: gauge
  monitor: appmesh
  title: upstream_rq_time

upstream_rq_timeout:
  brief: Total requests that timed out waiting for a response
  custom: true
  description: Total requests that timed out waiting for a response
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_timeout

upstream_rq_total:
  brief: Total requests
  custom: true
  description: Total requests
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_total

upstream_rq_tx_reset:
  brief: Total requests that were reset locally
  custom: true
  description: Total requests that were reset locally
  metric_type: cumulative
  monitor: appmesh
  title: upstream_rq_tx_reset


asp_net.application_restarts:
  brief: Count of ASP.NET application restarts
  custom: true
  description: Count of ASP.NET application restarts.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.application_restarts

asp_net.applications_running:
  brief: Number of running ASP.NET applications
  custom: true
  description: Number of running ASP.NET applications.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.applications_running

asp_net.requests_current:
  brief: Current number of ASP.NET requests
  custom: true
  description: Current number of ASP.NET requests.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.requests_current

asp_net.requests_queue:
  brief: Number of queued ASP.NET requests
  custom: true
  description: Number of queued ASP.NET requests.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.requests_queue

asp_net.requests_rejected:
  brief: Count of rejected ASP.NET requests
  custom: true
  description: Count of rejected ASP.NET requests.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.requests_rejected

asp_net.worker_process_restarts:
  brief: Count of ASP.NET worker process restarts
  custom: true
  description: Count of ASP.NET worker process restarts.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.worker_process_restarts

asp_net.worker_processes_running:
  brief: Number of running ASP.NET worker processes
  custom: true
  description: Number of running ASP.NET worker processes.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net.worker_processes_running

asp_net_applications.errors_during_execution:
  brief: Count of errors encountered by ASP.NET application durring execution
  custom: true
  description: Count of errors encountered by ASP.NET application durring execution.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.errors_during_execution

asp_net_applications.errors_total_sec:
  brief: Error rate per second for the given ASP.NET application
  custom: true
  description: Error rate per second for the given ASP.NET application.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.errors_total_sec

asp_net_applications.errors_unhandled_during_execution_sec:
  brief: Unhandled error rate per second countered while an ASP.NET application is
    running
  custom: true
  description: Unhandled error rate per second countered while an ASP.NET application
    is running.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.errors_unhandled_during_execution_sec

asp_net_applications.pipeline_instance_count:
  brief: Number of instances in the ASP.NET application pipeline
  custom: true
  description: Number of instances in the ASP.NET application pipeline.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.pipeline_instance_count

asp_net_applications.requests_failed:
  brief: Count of failed requests in the ASP.NET application
  custom: true
  description: Count of failed requests in the ASP.NET application
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.requests_failed

asp_net_applications.requests_sec:
  brief: Rate of requests in the ASP.NET application per second
  custom: true
  description: Rate of requests in the ASP.NET application per second.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.requests_sec

asp_net_applications.session_sql_server_connections_total:
  brief: Number of connections to microsoft sql server by an ASP.NET application
  custom: true
  description: Number of connections to microsoft sql server by an ASP.NET application.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.session_sql_server_connections_total

asp_net_applications.sessions_active:
  brief: Number of active sessions in the ASP.NET application
  custom: true
  description: Number of active sessions in the ASP.NET application.
  metric_type: gauge
  monitor: aspdotnet
  title: asp_net_applications.sessions_active


container_cpu_cfs_periods:
  brief: Total number of elapsed CFS enforcement intervals
  custom: true
  description: Total number of elapsed CFS enforcement intervals
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_cfs_periods

container_cpu_cfs_throttled_periods:
  brief: Total number of times tasks in the cgroup have been throttled
  custom: true
  description: Total number of times tasks in the cgroup have been throttled
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_cfs_throttled_periods

container_cpu_cfs_throttled_time:
  brief: Total time duration, in nanoseconds, for which tasks in the cgroup have been
    throttled
  custom: true
  description: Total time duration, in nanoseconds, for which tasks in the cgroup
    have been throttled
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_cfs_throttled_time

container_cpu_percent:
  brief: Cumulative cpu utilization as a percentage of the total host CPU available
  custom: false
  description: Cumulative cpu utilization as a percentage of the total host CPU available.  This
    metric is equivalent to `container_cpu_utilization` / <# of CPUs/cores on host>.
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_percent

container_cpu_system_seconds_total:
  brief: Cumulative system cpu time consumed in nanoseconds
  custom: true
  description: Cumulative system cpu time consumed in nanoseconds
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_system_seconds_total

container_cpu_usage_seconds_total:
  brief: Cumulative cpu time consumed per cpu in nanoseconds
  custom: true
  description: Cumulative cpu time consumed per cpu in nanoseconds
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_usage_seconds_total

container_cpu_user_seconds_total:
  brief: Cumulative user cpu time consumed in nanoseconds
  custom: true
  description: Cumulative user cpu time consumed in nanoseconds
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_user_seconds_total

container_cpu_utilization:
  brief: Cumulative cpu utilization in percentages
  custom: false
  description: 'Cumulative cpu utilization in percentages.  This is equivalent to
    "centicores", or hundreths of CPU cores consumed.  This metric is **NOT** normalized
    by the total # of cores on the system.'
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_utilization

container_cpu_utilization_per_core:
  brief: Cumulative cpu utilization in percentages per core
  custom: true
  description: Cumulative cpu utilization in percentages per core
  metric_type: cumulative
  monitor: cadvisor
  title: container_cpu_utilization_per_core

container_fs_io_current:
  brief: Number of I/Os currently in progress
  custom: true
  description: Number of I/Os currently in progress
  metric_type: gauge
  monitor: cadvisor
  title: container_fs_io_current

container_fs_io_time_seconds_total:
  brief: Cumulative count of seconds spent doing I/Os
  custom: true
  description: Cumulative count of seconds spent doing I/Os
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_io_time_seconds_total

container_fs_io_time_weighted_seconds_total:
  brief: Cumulative weighted I/O time in seconds
  custom: true
  description: Cumulative weighted I/O time in seconds
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_io_time_weighted_seconds_total

container_fs_limit_bytes:
  brief: Number of bytes that the container may occupy on this filesystem
  custom: true
  description: Number of bytes that the container may occupy on this filesystem
  metric_type: gauge
  monitor: cadvisor
  title: container_fs_limit_bytes

container_fs_read_seconds_total:
  brief: Cumulative count of seconds spent reading
  custom: false
  description: Cumulative count of seconds spent reading
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_read_seconds_total

container_fs_reads_merged_total:
  brief: Cumulative count of reads merged
  custom: true
  description: Cumulative count of reads merged
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_reads_merged_total

container_fs_reads_total:
  brief: Cumulative count of reads completed
  custom: false
  description: Cumulative count of reads completed
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_reads_total

container_fs_sector_reads_total:
  brief: Cumulative count of sector reads completed
  custom: true
  description: Cumulative count of sector reads completed
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_sector_reads_total

container_fs_sector_writes_total:
  brief: Cumulative count of sector writes completed
  custom: true
  description: Cumulative count of sector writes completed
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_sector_writes_total

container_fs_usage_bytes:
  brief: Number of bytes that are consumed by the container on this filesystem
  custom: false
  description: Number of bytes that are consumed by the container on this filesystem
  metric_type: gauge
  monitor: cadvisor
  title: container_fs_usage_bytes

container_fs_write_seconds_total:
  brief: Cumulative count of seconds spent writing
  custom: false
  description: Cumulative count of seconds spent writing
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_write_seconds_total

container_fs_writes_merged_total:
  brief: Cumulative count of writes merged
  custom: true
  description: Cumulative count of writes merged
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_writes_merged_total

container_fs_writes_total:
  brief: Cumulative count of writes completed
  custom: false
  description: Cumulative count of writes completed
  metric_type: cumulative
  monitor: cadvisor
  title: container_fs_writes_total

container_last_seen:
  brief: Last time a container was seen by the exporter
  custom: true
  description: Last time a container was seen by the exporter
  metric_type: gauge
  monitor: cadvisor
  title: container_last_seen

container_memory_failcnt:
  brief: Number of memory usage hits limits
  custom: true
  description: Number of memory usage hits limits
  metric_type: cumulative
  monitor: cadvisor
  title: container_memory_failcnt

container_memory_failures_total:
  brief: Cumulative count of memory allocation failures
  custom: false
  description: Cumulative count of memory allocation failures
  metric_type: cumulative
  monitor: cadvisor
  title: container_memory_failures_total

container_memory_rss:
  brief: Current RSS memory usage in bytes
  custom: true
  description: Current RSS memory usage in bytes
  metric_type: gauge
  monitor: cadvisor
  title: container_memory_rss

container_memory_usage_bytes:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: cadvisor
  title: container_memory_usage_bytes

container_memory_working_set_bytes:
  brief: Current working set in bytes
  custom: true
  description: Current working set in bytes
  metric_type: gauge
  monitor: cadvisor
  title: container_memory_working_set_bytes

container_spec_cpu_period:
  brief: The number of microseconds that the [CFS scheduler](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
    uses as a window when limiting container processes
  custom: false
  description: The number of microseconds that the [CFS scheduler](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
    uses as a window when limiting container processes
  metric_type: gauge
  monitor: cadvisor
  title: container_spec_cpu_period

container_spec_cpu_quota:
  brief: In CPU quota for the CFS process scheduler
  custom: false
  description: In CPU quota for the CFS process scheduler. In K8s this is equal to
    the containers's CPU limit as a fraction of 1 core and multiplied by the `container_spec_cpu_period`.  So
    if the CPU limit is `500m` (500 millicores) for a container and the `container_spec_cpu_period`
    is set to 100,000, this value will be 50,000.
  metric_type: gauge
  monitor: cadvisor
  title: container_spec_cpu_quota

container_spec_cpu_shares:
  brief: CPU share of the container
  custom: true
  description: CPU share of the container
  metric_type: gauge
  monitor: cadvisor
  title: container_spec_cpu_shares

container_spec_memory_limit_bytes:
  brief: Memory limit for the container
  custom: false
  description: Memory limit for the container.
  metric_type: gauge
  monitor: cadvisor
  title: container_spec_memory_limit_bytes

container_spec_memory_swap_limit_bytes:
  brief: Memory swap limit for the container
  custom: true
  description: Memory swap limit for the container.
  metric_type: gauge
  monitor: cadvisor
  title: container_spec_memory_swap_limit_bytes

container_start_time_seconds:
  brief: Start time of the container since unix epoch in seconds
  custom: true
  description: Start time of the container since unix epoch in seconds.
  metric_type: gauge
  monitor: cadvisor
  title: container_start_time_seconds

container_tasks_state:
  brief: Number of tasks in given state
  custom: true
  description: Number of tasks in given state
  metric_type: gauge
  monitor: cadvisor
  title: container_tasks_state

machine_cpu_cores:
  brief: Number of CPU cores on the node
  custom: false
  description: Number of CPU cores on the node.
  metric_type: gauge
  monitor: cadvisor
  title: machine_cpu_cores

machine_cpu_frequency_khz:
  brief: Node's CPU frequency
  custom: true
  description: Node's CPU frequency.
  metric_type: gauge
  monitor: cadvisor
  title: machine_cpu_frequency_khz

machine_memory_bytes:
  brief: Amount of memory installed on the node
  custom: false
  description: Amount of memory installed on the node.
  metric_type: gauge
  monitor: cadvisor
  title: machine_memory_bytes

pod_network_receive_bytes_total:
  brief: Cumulative count of bytes received
  custom: false
  description: Cumulative count of bytes received. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_receive_bytes_total

pod_network_receive_errors_total:
  brief: Cumulative count of errors encountered while receiving
  custom: false
  description: Cumulative count of errors encountered while receiving. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_receive_errors_total

pod_network_receive_packets_dropped_total:
  brief: Cumulative count of packets dropped while receiving
  custom: true
  description: Cumulative count of packets dropped while receiving. **Note that this
    metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_receive_packets_dropped_total

pod_network_receive_packets_total:
  brief: Cumulative count of packets received
  custom: true
  description: Cumulative count of packets received. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_receive_packets_total

pod_network_transmit_bytes_total:
  brief: Cumulative count of bytes transmitted
  custom: false
  description: Cumulative count of bytes transmitted. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_transmit_bytes_total

pod_network_transmit_errors_total:
  brief: Cumulative count of errors encountered while transmitting
  custom: false
  description: Cumulative count of errors encountered while transmitting. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_transmit_errors_total

pod_network_transmit_packets_dropped_total:
  brief: Cumulative count of packets dropped while transmitting
  custom: true
  description: Cumulative count of packets dropped while transmitting. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_transmit_packets_dropped_total

pod_network_transmit_packets_total:
  brief: Cumulative count of packets transmitted
  custom: true
  description: Cumulative count of packets transmitted. **Note that this metric is
    not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: cadvisor
  title: pod_network_transmit_packets_total


cgroup.cpu_cfs_period_us:
  brief: The period of time in microseconds for how regularly a cgroup's access to
    CPU resources should be reallocated
  custom: false
  description: The period of time in microseconds for how regularly a cgroup's access
    to CPU resources should be reallocated
  metric_type: gauge
  monitor: cgroups
  title: cgroup.cpu_cfs_period_us

cgroup.cpu_cfs_quota_us:
  brief: The total amount of time in microseconds for which all tasks in a cgroup
    can run during one period
  custom: false
  description: The total amount of time in microseconds for which all tasks in a cgroup
    can run during one period.  The period is in the metric `cgroup.cpu_cfs_period_us`.
  metric_type: gauge
  monitor: cgroups
  title: cgroup.cpu_cfs_quota_us

cgroup.cpu_shares:
  brief: The relative share of CPU that this cgroup gets
  custom: false
  description: The relative share of CPU that this cgroup gets.  This number is divided
    into the sum total of all cpu share values to determine the share any individual
    cgroup is entitled to.
  metric_type: gauge
  monitor: cgroups
  title: cgroup.cpu_shares

cgroup.cpu_stat_nr_periods:
  brief: Number of period intervals that have elapsed (the period length is in the
    metric `cgroup.cpu_cfs_period_us`)
  custom: true
  description: Number of period intervals that have elapsed (the period length is
    in the metric `cgroup.cpu_cfs_period_us`)
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpu_stat_nr_periods

cgroup.cpu_stat_nr_throttled:
  brief: Number of times tasks in a cgroup have been throttled
  custom: true
  description: Number of times tasks in a cgroup have been throttled
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpu_stat_nr_throttled

cgroup.cpu_stat_throttled_time:
  brief: The total time in nanoseconds for which tasks in a cgroup have been throttled
  custom: false
  description: The total time in nanoseconds for which tasks in a cgroup have been
    throttled
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpu_stat_throttled_time

cgroup.cpuacct_usage_ns:
  brief: Total time in nanoseconds spent using any CPU by tasks in this cgroup
  custom: false
  description: Total time in nanoseconds spent using any CPU by tasks in this cgroup
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_ns

cgroup.cpuacct_usage_ns_per_cpu:
  brief: Total time in nanoseconds spent using a specific CPU (core) by tasks in this
    cgroup
  custom: true
  description: Total time in nanoseconds spent using a specific CPU (core) by tasks
    in this cgroup.  This metric will have the `cpu` dimension that specifies the
    specific cpu/core.
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_ns_per_cpu

cgroup.cpuacct_usage_system_ns:
  brief: Total time in nanoseconds spent in system (kernel) mode on any CPU by tasks
    in this cgroup
  custom: true
  description: Total time in nanoseconds spent in system (kernel) mode on any CPU
    by tasks in this cgroup
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_system_ns

cgroup.cpuacct_usage_system_ns_per_cpu:
  brief: Total time in nanoseconds spent in system (kernel) mode on a specific CPU
    (core) by tasks in this cgroup
  custom: true
  description: Total time in nanoseconds spent in system (kernel) mode on a specific
    CPU (core) by tasks in this cgroup.  This metric will have the `cpu` dimension
    that specifies the specific cpu/core.
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_system_ns_per_cpu

cgroup.cpuacct_usage_user_ns:
  brief: Total time in nanoseconds spent in user mode on any CPU by tasks in this
    cgroup
  custom: true
  description: Total time in nanoseconds spent in user mode on any CPU by tasks in
    this cgroup
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_user_ns

cgroup.cpuacct_usage_user_ns_per_cpu:
  brief: Total time in nanoseconds spent in user mode on a specific CPU (core) by
    tasks in this cgroup
  custom: true
  description: Total time in nanoseconds spent in user mode on a specific CPU (core)
    by tasks in this cgroup.  This metric will have the `cpu` dimension that specifies
    the specific cpu/core.
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.cpuacct_usage_user_ns_per_cpu

cgroup.memory_failcnt:
  brief: The number of times that the memory limit has reached the `limit_in_bytes`
    (reported in metric `cgroup.memory_limit_in_bytes`)
  custom: false
  description: The number of times that the memory limit has reached the `limit_in_bytes`
    (reported in metric `cgroup.memory_limit_in_bytes`).
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_failcnt

cgroup.memory_limit_in_bytes:
  brief: The maximum amount of user memory (including file cache)
  custom: false
  description: The maximum amount of user memory (including file cache).  A value
    of `9223372036854771712` (the max 64-bit int aligned to the nearest memory page)
    indicates no limit and is the default.
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_limit_in_bytes

cgroup.memory_max_usage_in_bytes:
  brief: The maximum memory used by processes in the cgroup (in bytes)
  custom: true
  description: The maximum memory used by processes in the cgroup (in bytes)
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_max_usage_in_bytes

cgroup.memory_stat_active_anon:
  brief: Bytes of anonymous and swap cache memory on active LRU list
  custom: true
  description: Bytes of anonymous and swap cache memory on active LRU list
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_active_anon

cgroup.memory_stat_active_file:
  brief: Bytes of file-backed memory on active LRU list
  custom: true
  description: Bytes of file-backed memory on active LRU list
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_active_file

cgroup.memory_stat_cache:
  brief: Page cache, including tmpfs (shmem), in bytes
  custom: false
  description: Page cache, including tmpfs (shmem), in bytes
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_cache

cgroup.memory_stat_dirty:
  brief: Bytes that are waiting to get written back to the disk
  custom: true
  description: Bytes that are waiting to get written back to the disk
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_dirty

cgroup.memory_stat_hierarchical_memory_limit:
  brief: Bytes of memory limit with regard to hierarchy under which the memory cgroup
    is
  custom: true
  description: Bytes of memory limit with regard to hierarchy under which the memory
    cgroup is
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_hierarchical_memory_limit

cgroup.memory_stat_inactive_anon:
  brief: Bytes of anonymous and swap cache memory on inactive LRU list
  custom: true
  description: Bytes of anonymous and swap cache memory on inactive LRU list
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_inactive_anon

cgroup.memory_stat_inactive_file:
  brief: Bytes of file-backed memory on inactive LRU list
  custom: true
  description: Bytes of file-backed memory on inactive LRU list
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_inactive_file

cgroup.memory_stat_mapped_file:
  brief: Bytes of mapped file (includes tmpfs/shmem)
  custom: true
  description: Bytes of mapped file (includes tmpfs/shmem)
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_mapped_file

cgroup.memory_stat_pgfault:
  brief: Total number of page faults incurred
  custom: true
  description: Total number of page faults incurred
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_pgfault

cgroup.memory_stat_pgmajfault:
  brief: Number of major page faults incurred
  custom: true
  description: Number of major page faults incurred
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_pgmajfault

cgroup.memory_stat_pgpgin:
  brief: Number of charging events to the memory cgroup
  custom: true
  description: Number of charging events to the memory cgroup. The charging event
    happens each time a page is accounted as either mapped anon page(RSS) or cache
    page(Page Cache) to the cgroup.
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_pgpgin

cgroup.memory_stat_pgpgout:
  brief: Number of uncharging events to the memory cgroup
  custom: true
  description: Number of uncharging events to the memory cgroup. The uncharging event
    happens each time a page is unaccounted from the cgroup.
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_pgpgout

cgroup.memory_stat_rss:
  brief: Anonymous and swap cache, not including tmpfs (shmem), in bytes
  custom: false
  description: Anonymous and swap cache, not including tmpfs (shmem), in bytes
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_rss

cgroup.memory_stat_rss_huge:
  brief: Bytes of anonymous transparent hugepages
  custom: true
  description: Bytes of anonymous transparent hugepages
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_rss_huge

cgroup.memory_stat_shmem:
  brief: Bytes of shared memory
  custom: true
  description: Bytes of shared memory
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_shmem

cgroup.memory_stat_total_active_anon:
  brief: The equivalent of `cgroup.memory_stat_active_anon` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_active_anon` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_active_anon

cgroup.memory_stat_total_active_file:
  brief: The equivalent of `cgroup.memory_stat_active_file` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_active_file` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_active_file

cgroup.memory_stat_total_cache:
  brief: The equivalent of `cgroup.memory_stat_cache` that also includes the sum total
    of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_cache` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_cache

cgroup.memory_stat_total_dirty:
  brief: The equivalent of `cgroup.memory_stat_dirty` that also includes the sum total
    of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_dirty` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_dirty

cgroup.memory_stat_total_inactive_anon:
  brief: The equivalent of `cgroup.memory_stat_inactive_anon` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_inactive_anon` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_inactive_anon

cgroup.memory_stat_total_inactive_file:
  brief: The equivalent of `cgroup.memory_stat_inactive_file` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_inactive_file` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_inactive_file

cgroup.memory_stat_total_mapped_file:
  brief: The equivalent of `cgroup.memory_stat_mapped_file` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_mapped_file` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_mapped_file

cgroup.memory_stat_total_pgfault:
  brief: The equivalent of `cgroup.memory_stat_pgfault` that also includes the sum
    total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_pgfault` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_total_pgfault

cgroup.memory_stat_total_pgmajfault:
  brief: The equivalent of `cgroup.memory_stat_pgmajfault` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_pgmajfault` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_total_pgmajfault

cgroup.memory_stat_total_pgpgin:
  brief: The equivalent of `cgroup.memory_stat_pgpgin` that also includes the sum
    total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_pgpgin` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_total_pgpgin

cgroup.memory_stat_total_pgpgout:
  brief: The equivalent of `cgroup.memory_stat_pgpgout` that also includes the sum
    total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_pgpgout` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: cumulative
  monitor: cgroups
  title: cgroup.memory_stat_total_pgpgout

cgroup.memory_stat_total_rss:
  brief: The equivalent of `cgroup.memory_stat_rss` that also includes the sum total
    of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_rss` that also includes the sum
    total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_rss

cgroup.memory_stat_total_rss_huge:
  brief: The equivalent of `cgroup.memory_stat_rss_huge` that also includes the sum
    total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_rss_huge` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_rss_huge

cgroup.memory_stat_total_shmem:
  brief: The equivalent of `cgroup.memory_stat_shmem` that also includes the sum total
    of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_shmem` that also includes the
    sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_shmem

cgroup.memory_stat_total_unevictable:
  brief: The equivalent of `cgroup.memory_stat_unevictable` that also includes the
    sum total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_unevictable` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_unevictable

cgroup.memory_stat_total_writeback:
  brief: The equivalent of `cgroup.memory_stat_writeback` that also includes the sum
    total of that metric for all descendant cgroups
  custom: true
  description: The equivalent of `cgroup.memory_stat_writeback` that also includes
    the sum total of that metric for all descendant cgroups
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_total_writeback

cgroup.memory_stat_unevictable:
  brief: Bytes of memory that cannot be reclaimed (mlocked, etc)
  custom: true
  description: Bytes of memory that cannot be reclaimed (mlocked, etc).
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_unevictable

cgroup.memory_stat_writeback:
  brief: Bytes of file/anon cache that are queued for syncing to disk
  custom: true
  description: Bytes of file/anon cache that are queued for syncing to disk
  metric_type: gauge
  monitor: cgroups
  title: cgroup.memory_stat_writeback


auctioneer.AuctioneerFetchStatesDuration:
  brief: Time in nanoseconds that the auctioneer took to fetch state from all the
    cells when running its auction
  custom: false
  description: Time in nanoseconds that the auctioneer took to fetch state from all
    the cells when running its auction. Emitted every 30 seconds during each auction.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.AuctioneerFetchStatesDuration

auctioneer.AuctioneerLRPAuctionsFailed:
  brief: Cumulative number of LRP instances that the auctioneer failed to place on
    Diego cells
  custom: false
  description: Cumulative number of LRP instances that the auctioneer failed to place
    on Diego cells. Emitted every 30 seconds during each auction.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.AuctioneerLRPAuctionsFailed

auctioneer.AuctioneerLRPAuctionsStarted:
  brief: Cumulative number of LRP instances that the auctioneer successfully placed
    on Diego cells
  custom: false
  description: Cumulative number of LRP instances that the auctioneer successfully
    placed on Diego cells. Emitted every 30 seconds during each auction.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.AuctioneerLRPAuctionsStarted

auctioneer.AuctioneerTaskAuctionsFailed:
  brief: Cumulative number of Tasks that the auctioneer failed to place on Diego cells
  custom: false
  description: Cumulative number of Tasks that the auctioneer failed to place on Diego
    cells. Emitted every 30 seconds during each auction.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.AuctioneerTaskAuctionsFailed

auctioneer.AuctioneerTaskAuctionsStarted:
  brief: Cumulative number of Tasks that the auctioneer successfully placed on Diego
    cells
  custom: true
  description: Cumulative number of Tasks that the auctioneer successfully placed
    on Diego cells. Emitted every 30 seconds during each auction.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.AuctioneerTaskAuctionsStarted

auctioneer.LockHeld.v1-locks-auctioneer_lock:
  brief: 'Whether an auctioneer holds the auctioneer lock: 1 means the lock is held,
    and 0 means the lock was lost'
  custom: true
  description: 'Whether an auctioneer holds the auctioneer lock: 1 means the lock
    is held, and 0 means the lock was lost. Emitted every 30 seconds by the active
    auctioneer.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.LockHeld.v1-locks-auctioneer_lock

auctioneer.LockHeldDuration.v1-locks-auctioneer_lock:
  brief: Time in nanoseconds that the active auctioneer has held the auctioneer lock
  custom: true
  description: Time in nanoseconds that the active auctioneer has held the auctioneer
    lock. Emitted every 30 seconds by the active auctioneer.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.LockHeldDuration.v1-locks-auctioneer_lock

auctioneer.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.lastGCPauseTimeNS

auctioneer.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.numBytesAllocated

auctioneer.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.numBytesAllocatedHeap

auctioneer.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.numBytesAllocatedStack

auctioneer.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.numFrees

auctioneer.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.memoryStats.numMallocs

auctioneer.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.numCPUS

auctioneer.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: auctioneer.numGoRoutines

bbs.BBSMasterElected:
  brief: Emitted once when the BBS is elected as master
  custom: true
  description: Emitted once when the BBS is elected as master.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.BBSMasterElected

bbs.ConvergenceLRPDuration:
  brief: Time in nanoseconds that the BBS took to run its LRP convergence pass
  custom: false
  description: Time in nanoseconds that the BBS took to run its LRP convergence pass.
    Emitted every 30 seconds when LRP convergence runs.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceLRPDuration

bbs.ConvergenceLRPPreProcessingActualLRPsDeleted:
  brief: Cumulative number of times the BBS has detected and deleted a malformed ActualLRP
    in its LRP convergence pass
  custom: true
  description: Cumulative number of times the BBS has detected and deleted a malformed
    ActualLRP in its LRP convergence pass. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceLRPPreProcessingActualLRPsDeleted

bbs.ConvergenceLRPPreProcessingMalformedRunInfos:
  brief: Cumulative number of times the BBS has detected a malformed DesiredLRP RunInfo
    in its LRP convergence pass
  custom: true
  description: Cumulative number of times the BBS has detected a malformed DesiredLRP
    RunInfo in its LRP convergence pass. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceLRPPreProcessingMalformedRunInfos

bbs.ConvergenceLRPPreProcessingMalformedSchedulingInfos:
  brief: Cumulative number of times the BBS has detected a malformed DesiredLRP SchedulingInfo
    in its LRP convergence pass
  custom: true
  description: Cumulative number of times the BBS has detected a malformed DesiredLRP
    SchedulingInfo in its LRP convergence pass. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceLRPPreProcessingMalformedSchedulingInfos

bbs.ConvergenceLRPRuns:
  brief: Cumulative number of times BBS has run its LRP convergence pass
  custom: true
  description: Cumulative number of times BBS has run its LRP convergence pass. Emitted
    every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceLRPRuns

bbs.ConvergenceTaskDuration:
  brief: Time in nanoseconds that the BBS took to run its Task convergence pass
  custom: true
  description: Time in nanoseconds that the BBS took to run its Task convergence pass.
    Emitted every 30 seconds when Task convergence runs.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceTaskDuration

bbs.ConvergenceTaskRuns:
  brief: Cumulative number of times the BBS has run its Task convergence pass
  custom: true
  description: Cumulative number of times the BBS has run its Task convergence pass.
    Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceTaskRuns

bbs.ConvergenceTasksKicked:
  brief: Cumulative number of times the BBS has updated a Task during its Task convergence
    pass
  custom: true
  description: Cumulative number of times the BBS has updated a Task during its Task
    convergence pass. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceTasksKicked

bbs.ConvergenceTasksPruned:
  brief: Cumulative number of times the BBS has deleted a malformed Task during its
    Task convergence pass
  custom: true
  description: Cumulative number of times the BBS has deleted a malformed Task during
    its Task convergence pass. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ConvergenceTasksPruned

bbs.CrashedActualLRPs:
  brief: Total number of LRP instances that have crashed
  custom: false
  description: Total number of LRP instances that have crashed. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.CrashedActualLRPs

bbs.CrashingDesiredLRPs:
  brief: Total number of DesiredLRPs that have at least one crashed instance
  custom: true
  description: Total number of DesiredLRPs that have at least one crashed instance.
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.CrashingDesiredLRPs

bbs.Domain.cf-apps:
  brief: "Whether the \u2018cf-apps\u2019 domain is up-to-date, so that CF apps from\
    \ CC have been synchronized with DesiredLRPs for Diego to run"
  custom: false
  description: "Whether the \u2018cf-apps\u2019 domain is up-to-date, so that CF apps\
    \ from CC have been synchronized with DesiredLRPs for Diego to run. 1 means the\
    \ domain is up-to-date, no data means it is not. Emitted every 30 seconds."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.Domain.cf-apps

bbs.Domain.cf-tasks:
  brief: "Whether the \u2018cf-tasks\u2019 domain is up-to-date, so that CF tasks\
    \ from CC have been synchronized with tasks for Diego to run"
  custom: true
  description: "Whether the \u2018cf-tasks\u2019 domain is up-to-date, so that CF\
    \ tasks from CC have been synchronized with tasks for Diego to run. 1 means the\
    \ domain is up-to-date, no data means it is not. Emitted every 30 seconds."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.Domain.cf-tasks

bbs.ETCDLeader:
  brief: Index of the leader node in the etcd cluster
  custom: true
  description: Index of the leader node in the etcd cluster. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDLeader

bbs.ETCDRaftTerm:
  brief: Raft term of the etcd cluster
  custom: true
  description: Raft term of the etcd cluster. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDRaftTerm

bbs.ETCDReceivedBandwidthRate:
  brief: Number of bytes per second received by the follower etcd node
  custom: true
  description: Number of bytes per second received by the follower etcd node. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDReceivedBandwidthRate

bbs.ETCDReceivedRequestRate:
  brief: Number of requests per second received by the follower etcd node
  custom: true
  description: Number of requests per second received by the follower etcd node. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDReceivedRequestRate

bbs.ETCDSentBandwidthRate:
  brief: Number of bytes per second sent by the leader etcd node
  custom: true
  description: Number of bytes per second sent by the leader etcd node. Emitted every
    30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDSentBandwidthRate

bbs.ETCDSentRequestRate:
  brief: Number of requests per second sent by the leader etcd node
  custom: true
  description: Number of requests per second sent by the leader etcd node. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDSentRequestRate

bbs.ETCDWatchers:
  brief: Number of watches set against the etcd cluster
  custom: true
  description: Number of watches set against the etcd cluster. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.ETCDWatchers

bbs.LRPsClaimed:
  brief: Total number of LRP instances that have been claimed by some cell
  custom: true
  description: Total number of LRP instances that have been claimed by some cell.
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsClaimed

bbs.LRPsDesired:
  brief: Total number of LRP instances desired across all LRPs
  custom: true
  description: Total number of LRP instances desired across all LRPs. Emitted periodically.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsDesired

bbs.LRPsExtra:
  brief: Total number of LRP instances that are no longer desired but still have a
    BBS record
  custom: false
  description: Total number of LRP instances that are no longer desired but still
    have a BBS record. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsExtra

bbs.LRPsMissing:
  brief: Total number of LRP instances that are desired but have no record in the
    BBS
  custom: false
  description: Total number of LRP instances that are desired but have no record in
    the BBS. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsMissing

bbs.LRPsRunning:
  brief: Total number of LRP instances that are running on cells
  custom: false
  description: Total number of LRP instances that are running on cells. Emitted every
    30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsRunning

bbs.LRPsUnclaimed:
  brief: Total number of LRP instances that have not yet been claimed by a cell
  custom: true
  description: Total number of LRP instances that have not yet been claimed by a cell.
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LRPsUnclaimed

bbs.LockHeld.v1-locks-bbs_lock:
  brief: 'Whether a BBS holds the BBS lock: 1 means the lock is held, and 0 means
    the lock was lost'
  custom: true
  description: 'Whether a BBS holds the BBS lock: 1 means the lock is held, and 0
    means the lock was lost. Emitted every 30 seconds by the active BBS server.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LockHeld.v1-locks-bbs_lock

bbs.LockHeldDuration.v1-locks-bbs_lock:
  brief: Time in nanoseconds that the active BBS has held the BBS lock
  custom: true
  description: Time in nanoseconds that the active BBS has held the BBS lock. Emitted
    every 30 seconds by the active BBS server.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.LockHeldDuration.v1-locks-bbs_lock

bbs.MetricsReportingDuration:
  brief: Time in nanoseconds that the BBS took to emit metrics about etcd
  custom: true
  description: Time in nanoseconds that the BBS took to emit metrics about etcd. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.MetricsReportingDuration

bbs.MigrationDuration:
  brief: Time in nanoseconds that the BBS took to run migrations against its persistence
    store
  custom: true
  description: Time in nanoseconds that the BBS took to run migrations against its
    persistence store. Emitted each time a BBS becomes the active master.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.MigrationDuration

bbs.RequestCount:
  brief: Cumulative number of requests the BBS has handled through its API
  custom: true
  description: Cumulative number of requests the BBS has handled through its API.
    Emitted for each BBS request.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.RequestCount

bbs.RequestLatency:
  brief: Time in nanoseconds that the BBS took to handle requests to its API endpoints
  custom: false
  description: Time in nanoseconds that the BBS took to handle requests to its API
    endpoints. Emitted when the BBS API handles requests.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.RequestLatency

bbs.TasksCompleted:
  brief: Total number of Tasks that have completed
  custom: true
  description: Total number of Tasks that have completed. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.TasksCompleted

bbs.TasksPending:
  brief: Total number of Tasks that have not yet been placed on a cell
  custom: true
  description: Total number of Tasks that have not yet been placed on a cell. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.TasksPending

bbs.TasksResolving:
  brief: Total number of Tasks locked for deletion
  custom: true
  description: Total number of Tasks locked for deletion. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.TasksResolving

bbs.TasksRunning:
  brief: Total number of Tasks running on cells
  custom: true
  description: Total number of Tasks running on cells. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.TasksRunning

bbs.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.lastGCPauseTimeNS

bbs.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.numBytesAllocated

bbs.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.numBytesAllocatedHeap

bbs.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.numBytesAllocatedStack

bbs.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.numFrees

bbs.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.memoryStats.numMallocs

bbs.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.numCPUS

bbs.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bbs.numGoRoutines

bosh-system-metrics-forwarder.system.cpu.sys:
  brief: CPU load consumed by the kernel
  custom: false
  description: CPU load consumed by the kernel.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.cpu.sys

bosh-system-metrics-forwarder.system.cpu.user:
  brief: CPU load consumed by userspace
  custom: false
  description: CPU load consumed by userspace.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.cpu.user

bosh-system-metrics-forwarder.system.cpu.wait:
  brief: Time CPU spent waiting for IO
  custom: false
  description: Time CPU spent waiting for IO.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.cpu.wait

bosh-system-metrics-forwarder.system.disk.ephemeral.percent:
  brief: Percentage of the ephemeral disk used
  custom: false
  description: Percentage of the ephemeral disk used.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.disk.ephemeral.percent

bosh-system-metrics-forwarder.system.disk.system.percent:
  brief: Percentage of the system disk used
  custom: false
  description: Percentage of the system disk used.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.disk.system.percent

bosh-system-metrics-forwarder.system.healthy:
  brief: Overall status of system health
  custom: false
  description: Overall status of system health.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.healthy

bosh-system-metrics-forwarder.system.mem.percent:
  brief: Percentage of RAM used
  custom: false
  description: Percentage of RAM used.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.mem.percent

bosh-system-metrics-forwarder.system.swap.percent:
  brief: Percentage of swap space used
  custom: false
  description: Percentage of swap space used.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: bosh-system-metrics-forwarder.system.swap.percent

cc.failed_job_count.VM_NAME-VM_INDEX:
  brief: Number of failed jobs in the <VM_NAME>-<VM_INDEX> queue
  custom: true
  description: Number of failed jobs in the <VM_NAME>-<VM_INDEX> queue. This is the
    number of delayed jobs where the failed at column is populated with the time of
    the most recently failed attempt at the job. The failed job count is not specific
    to the jobs run by the Cloud Controller worker. By default, Cloud Controller deletes
    failed jobs after 31 days. Emitted every 30 seconds per VM.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.failed_job_count.VM_NAME-VM_INDEX

cc.failed_job_count.cc-generic:
  brief: Number of failed jobs in the cc-generic queue
  custom: true
  description: Number of failed jobs in the cc-generic queue. By default, Cloud Controller
    deletes failed jobs after 31 days. Emitted every 30 seconds per VM.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.failed_job_count.cc-generic

cc.failed_job_count.total:
  brief: Number of failed jobs in all queues
  custom: true
  description: Number of failed jobs in all queues. By default, Cloud Controller deletes
    failed jobs after 31 days. Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.failed_job_count.total

cc.http_status.1XX:
  brief: Number of HTTP response status codes of type 1xx (informational)
  custom: true
  description: Number of HTTP response status codes of type 1xx (informational). This
    resets when the Cloud Controller process is restarted and is incremented at the
    end of each request cycle.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.http_status.1XX

cc.http_status.2XX:
  brief: Number of HTTP response status codes of type 2xx (success)
  custom: true
  description: Number of HTTP response status codes of type 2xx (success). This resets
    when the Cloud Controller process is restarted and is incremented at the end of
    each request cycle. Emitted for each Cloud Controller request.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.http_status.2XX

cc.http_status.3XX:
  brief: Number of HTTP response status codes of type 3xx (redirection)
  custom: true
  description: Number of HTTP response status codes of type 3xx (redirection). This
    resets when the Cloud Controller process is restarted and is incremented at the
    end of each request cycle. Emitted for each Cloud Controller request.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.http_status.3XX

cc.http_status.4XX:
  brief: Number of HTTP response status codes of type 4xx (client error)
  custom: true
  description: Number of HTTP response status codes of type 4xx (client error). This
    resets when the Cloud Controller process is restarted and is incremented at the
    end of each request cycle. Emitted for each Cloud Controller request.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.http_status.4XX

cc.http_status.5XX:
  brief: Number of HTTP response status codes of type 5xx (server error)
  custom: true
  description: Number of HTTP response status codes of type 5xx (server error). This
    resets when the Cloud Controller process is restarted and is incremented at the
    end of each request cycle.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.http_status.5XX

cc.job_queue_length.cc-VM_NAME-VM_INDEX:
  brief: Number of background jobs in the <VM_NAME>-<VM_INDEX> queue that have yet
    to run for the first time
  custom: true
  description: Number of background jobs in the <VM_NAME>-<VM_INDEX> queue that have
    yet to run for the first time. Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.job_queue_length.cc-VM_NAME-VM_INDEX

cc.job_queue_length.cc-generic:
  brief: Number of background jobs in the cc-generic queue that have yet to run for
    the first time
  custom: true
  description: Number of background jobs in the cc-generic queue that have yet to
    run for the first time. Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.job_queue_length.cc-generic

cc.job_queue_length.total:
  brief: Total number of background jobs in the queues that have yet to run for the
    first time
  custom: true
  description: Total number of background jobs in the queues that have yet to run
    for the first time. Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.job_queue_length.total

cc.log_count.all:
  brief: Total number of log messages, sum of messages of all severity levels
  custom: true
  description: Total number of log messages, sum of messages of all severity levels.
    The count resets when the Cloud Controller process is restarted. Emitted every
    30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.all

cc.log_count.debug:
  brief: "Number of log messages of severity \u201Cdebug.\u201D The count resets when\
    \ the Cloud Controller process is restarted"
  custom: true
  description: "Number of log messages of severity \u201Cdebug.\u201D The count resets\
    \ when the Cloud Controller process is restarted. Emitted every 30 seconds per\
    \ VM."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.debug

cc.log_count.debug1:
  brief: Not used
  custom: true
  description: Not used.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.debug1

cc.log_count.debug2:
  brief: "Number of log messages of severity \u201Cdebug2.\u201D The count resets\
    \ when the Cloud Controller process is restarted"
  custom: true
  description: "Number of log messages of severity \u201Cdebug2.\u201D The count resets\
    \ when the Cloud Controller process is restarted. Emitted every 30 seconds per\
    \ VM."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.debug2

cc.log_count.error:
  brief: Number of error log messages
  custom: false
  description: Number of error log messages.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.error

cc.log_count.fatal:
  brief: Number of fatal log messages
  custom: false
  description: Number of fatal log messages.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.fatal

cc.log_count.info:
  brief: "Number of log messages of severity \u201Cinfo.\u201D Examples of info messages\
    \ are droplet created, copying package, uploading package, access denied due to\
    \ insufficient scope, job logging, blobstore actions, staging requests, and app\
    \ running requests"
  custom: true
  description: "Number of log messages of severity \u201Cinfo.\u201D Examples of info\
    \ messages are droplet created, copying package, uploading package, access denied\
    \ due to insufficient scope, job logging, blobstore actions, staging requests,\
    \ and app running requests. The count resets when the Cloud Controller process\
    \ is restarted. Emitted every 30 seconds per VM."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.info

cc.log_count.off:
  brief: "Number of log messages of severity \u201Coff.\u201D The count resets when\
    \ the Cloud Controller process is restarted"
  custom: true
  description: "Number of log messages of severity \u201Coff.\u201D The count resets\
    \ when the Cloud Controller process is restarted. Emitted every 30 seconds per\
    \ VM."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.off

cc.log_count.warn:
  brief: Number of warn log messages
  custom: false
  description: Number of warn log messages.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.log_count.warn

cc.requests.completed:
  brief: Number of Cloud Controller API requests completed
  custom: false
  description: Number of Cloud Controller API requests completed.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.requests.completed

cc.requests.outstanding:
  brief: Number of Cloud Controller requests made but not completed
  custom: false
  description: Number of Cloud Controller requests made but not completed.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: cc.requests.outstanding

cc.tasks_running.count:
  brief: Number of tasks currently running
  custom: false
  description: Number of tasks currently running.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.tasks_running.count

cc.tasks_running.memory_in_mb:
  brief: Memory being consumed by all currently running tasks
  custom: true
  description: Memory being consumed by all currently running tasks. Emitted every
    30 seconds per VM. This metric is only seen in version 3 of the Cloud Foundry
    API.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.tasks_running.memory_in_mb

cc.thread_info.event_machine.connection_count:
  brief: Number of open connections to event machine
  custom: true
  description: Number of open connections to event machine. Emitted every 30 seconds
    per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.event_machine.connection_count

cc.thread_info.event_machine.resultqueue.num_waiting:
  brief: Number of scheduled tasks in the result
  custom: true
  description: Number of scheduled tasks in the result. Emitted every 30 seconds per
    VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.event_machine.resultqueue.num_waiting

cc.thread_info.event_machine.resultqueue.size:
  brief: Number of unscheduled tasks in the result
  custom: true
  description: Number of unscheduled tasks in the result. Emitted every 30 seconds
    per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.event_machine.resultqueue.size

cc.thread_info.event_machine.threadqueue.num_waiting:
  brief: Number of scheduled tasks in the threadqueue
  custom: true
  description: Number of scheduled tasks in the threadqueue. Emitted every 30 seconds
    per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.event_machine.threadqueue.num_waiting

cc.thread_info.event_machine.threadqueue.size:
  brief: Number of unscheduled tasks in the threadqueue
  custom: true
  description: Number of unscheduled tasks in the threadqueue. Emitted every 30 seconds
    per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.event_machine.threadqueue.size

cc.thread_info.thread_count:
  brief: Total number of threads that are either runnable or stopped
  custom: true
  description: Total number of threads that are either runnable or stopped. Emitted
    every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.thread_info.thread_count

cc.total_users:
  brief: Total number of users ever created, including inactive users
  custom: true
  description: Total number of users ever created, including inactive users. Emitted
    every 10 minutes per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.total_users

cc.vitals.cpu:
  brief: Percentage of CPU used by the Cloud Controller process
  custom: true
  description: Percentage of CPU used by the Cloud Controller process. Emitted every
    30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.cpu

cc.vitals.cpu_load_avg:
  brief: System CPU load averaged over the last 1 minute according to the OS
  custom: true
  description: System CPU load averaged over the last 1 minute according to the OS.
    Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.cpu_load_avg

cc.vitals.mem_bytes:
  brief: The RSS bytes (resident set size) or real memory of the Cloud Controller
    process
  custom: true
  description: The RSS bytes (resident set size) or real memory of the Cloud Controller
    process. Emitted every 30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.mem_bytes

cc.vitals.mem_free_bytes:
  brief: Total memory available according to the OS
  custom: true
  description: Total memory available according to the OS. Emitted every 30 seconds
    per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.mem_free_bytes

cc.vitals.mem_used_bytes:
  brief: Total memory used (active + wired) according to the OS
  custom: true
  description: Total memory used (active + wired) according to the OS. Emitted every
    30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.mem_used_bytes

cc.vitals.num_cores:
  brief: The number of CPUs of a host machine
  custom: true
  description: The number of CPUs of a host machine. Emitted every 30 seconds per
    VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.num_cores

cc.vitals.uptime:
  brief: The uptime of the Cloud Controller process in seconds
  custom: true
  description: The uptime of the Cloud Controller process in seconds. Emitted every
    30 seconds per VM.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc.vitals.uptime

cc_uploader.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.lastGCPauseTimeNS

cc_uploader.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.numBytesAllocated

cc_uploader.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.numBytesAllocatedHeap

cc_uploader.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.numBytesAllocatedStack

cc_uploader.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.numFrees

cc_uploader.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.memoryStats.numMallocs

cc_uploader.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.numCPUS

cc_uploader.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: cc_uploader.numGoRoutines

container.cpu_percentage:
  brief: Percentage of CPU used by this container
  custom: true
  description: Percentage of CPU used by this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: container.cpu_percentage

container.disk_bytes:
  brief: Number of bytes of disk used by this container
  custom: true
  description: Number of bytes of disk used by this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: container.disk_bytes

container.disk_bytes_quota:
  brief: Number of bytes of disk allowed for this container
  custom: true
  description: Number of bytes of disk allowed for this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: container.disk_bytes_quota

container.memory_bytes:
  brief: Number of bytes of RAM used by this container
  custom: true
  description: Number of bytes of RAM used by this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: container.memory_bytes

container.memory_bytes_quota:
  brief: Number of bytes of RAM allocated to this container
  custom: true
  description: Number of bytes of RAM allocated to this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: container.memory_bytes_quota

etcd.CompareAndDeleteFail:
  brief: CompareAndDeleteFail operation count
  custom: true
  description: CompareAndDeleteFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CompareAndDeleteFail

etcd.CompareAndDeleteSuccess:
  brief: CompareAndDeleteSuccess operation countEmitted every 30 seconds
  custom: true
  description: CompareAndDeleteSuccess operation countEmitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CompareAndDeleteSuccess

etcd.CompareAndSwapFail:
  brief: CompareAndSwapFail operation count
  custom: true
  description: CompareAndSwapFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CompareAndSwapFail

etcd.CompareAndSwapSuccess:
  brief: CompareAndSwapSuccess operation count
  custom: true
  description: CompareAndSwapSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CompareAndSwapSuccess

etcd.CreateFail:
  brief: CreateFail operation count
  custom: true
  description: CreateFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CreateFail

etcd.CreateSuccess:
  brief: CreateSuccess operation count
  custom: true
  description: CreateSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.CreateSuccess

etcd.DeleteFail:
  brief: DeleteFail operation count
  custom: true
  description: DeleteFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.DeleteFail

etcd.DeleteSuccess:
  brief: DeleteSuccess operation count
  custom: true
  description: DeleteSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.DeleteSuccess

etcd.EtcdIndex:
  brief: X-Etcd-Index value from the /stats/store endpoint
  custom: true
  description: X-Etcd-Index value from the /stats/store endpoint. Emitted every 30
    seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.EtcdIndex

etcd.ExpireCount:
  brief: ExpireCount operation count
  custom: true
  description: ExpireCount operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.ExpireCount

etcd.Followers:
  brief: Number of etcd followers
  custom: true
  description: Number of etcd followers. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.Followers

etcd.GetsFail:
  brief: GetsFail operation count
  custom: true
  description: GetsFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.GetsFail

etcd.GetsSuccess:
  brief: GetsSuccess operation count
  custom: true
  description: GetsSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.GetsSuccess

etcd.IsLeader:
  brief: 1 if the current server is the leader, 0 if it is a follower
  custom: true
  description: 1 if the current server is the leader, 0 if it is a follower. Emitted
    every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.IsLeader

etcd.Latency:
  brief: Current latency in milliseconds from leader to a specific follower
  custom: true
  description: Current latency in milliseconds from leader to a specific follower.
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.Latency

etcd.RaftIndex:
  brief: X-Raft-Index value from the /stats/store endpoint
  custom: true
  description: X-Raft-Index value from the /stats/store endpoint. Emitted every 30
    seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.RaftIndex

etcd.RaftTerm:
  brief: X-Raft-Term value from the /stats/store endpoint
  custom: true
  description: X-Raft-Term value from the /stats/store endpoint. Emitted every 30
    seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.RaftTerm

etcd.ReceivedAppendRequests:
  brief: Number of append requests this node has processed
  custom: true
  description: Number of append requests this node has processed. Emitted every 30
    seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.ReceivedAppendRequests

etcd.ReceivingBandwidthRate:
  brief: Number of bytes per second this node is receiving (follower only)
  custom: true
  description: Number of bytes per second this node is receiving (follower only).
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.ReceivingBandwidthRate

etcd.ReceivingRequestRate:
  brief: Number of requests per second this node is receiving (follower only)
  custom: true
  description: Number of requests per second this node is receiving (follower only).
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.ReceivingRequestRate

etcd.SendingBandwidthRate:
  brief: Number of bytes per second this node is sending (leader only)
  custom: true
  description: Number of bytes per second this node is sending (leader only). This
    value is undefined on single member clusters. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.SendingBandwidthRate

etcd.SendingRequestRate:
  brief: Number of requests per second this node is sending (leader only)
  custom: true
  description: Number of requests per second this node is sending (leader only). This
    value is undefined on single member clusters. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.SendingRequestRate

etcd.SentAppendRequests:
  brief: Number of requests that this node has sent
  custom: true
  description: Number of requests that this node has sent. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.SentAppendRequests

etcd.SetsFail:
  brief: SetsFail operation count
  custom: true
  description: SetsFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.SetsFail

etcd.SetsSuccess:
  brief: SetsSuccess operation count
  custom: true
  description: SetsSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.SetsSuccess

etcd.UpdateFail:
  brief: UpdateFail operation count
  custom: true
  description: UpdateFail operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.UpdateFail

etcd.UpdateSuccess:
  brief: UpdateSuccess operation count
  custom: true
  description: UpdateSuccess operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.UpdateSuccess

etcd.Watchers:
  brief: Watchers operation count
  custom: true
  description: Watchers operation count. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: etcd.Watchers

file_server.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.lastGCPauseTimeNS

file_server.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.numBytesAllocated

file_server.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.numBytesAllocatedHeap

file_server.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.numBytesAllocatedStack

file_server.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.numFrees

file_server.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.memoryStats.numMallocs

file_server.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.numCPUS

file_server.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: file_server.numGoRoutines

garden_linux.BackingStores:
  brief: Number of container backing store files
  custom: true
  description: Number of container backing store files. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.BackingStores

garden_linux.DepotDirs:
  brief: Number of directories in the Garden depot
  custom: true
  description: Number of directories in the Garden depot. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.DepotDirs

garden_linux.LoopDevices:
  brief: Number of attached loop devices
  custom: true
  description: Number of attached loop devices. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.LoopDevices

garden_linux.MetricsReporting:
  brief: How long it took to emit the BackingStores, DepotDirs, and LoopDevices metrics
  custom: true
  description: How long it took to emit the BackingStores, DepotDirs, and LoopDevices
    metrics. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.MetricsReporting

garden_linux.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.lastGCPauseTimeNS

garden_linux.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.numBytesAllocated

garden_linux.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.numBytesAllocatedHeap

garden_linux.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.numBytesAllocatedStack

garden_linux.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.numFrees

garden_linux.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.memoryStats.numMallocs

garden_linux.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.numCPUS

garden_linux.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: garden_linux.numGoRoutines

gorouter.backend_exhausted_conns:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: gorouter.backend_exhausted_conns

gorouter.bad_gateways:
  brief: Number of bad gateway events
  custom: false
  description: Number of bad gateway events.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: gorouter.bad_gateways

gorouter.responses:
  brief: Number of router responses
  custom: false
  description: Number of router responses.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: gorouter.responses

gorouter.total_requests:
  brief: Number of router requests received
  custom: false
  description: Number of router requests received
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: gorouter.total_requests

gorouter.total_routes:
  brief: Number of registered routes
  custom: false
  description: Number of registered routes
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: gorouter.total_routes

nsync_bulker.DesiredLRPSyncDuration:
  brief: Time in nanoseconds that the nsync-bulker took to synchronize CF apps and
    Diego DesiredLRPs
  custom: true
  description: Time in nanoseconds that the nsync-bulker took to synchronize CF apps
    and Diego DesiredLRPs. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.DesiredLRPSyncDuration

nsync_bulker.LRPsDesired:
  brief: Cumulative number of LRPs desired through the nsync API
  custom: true
  description: Cumulative number of LRPs desired through the nsync API. Emitted on
    each request desiring a new LRP, every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.LRPsDesired

nsync_bulker.LockHeld.v1-locks-nsync_bulker_lock:
  brief: 'Whether an nsync-bulker holds the nsync-bulker lock: 1 means the lock is
    held, and 0 means the lock was lost'
  custom: true
  description: 'Whether an nsync-bulker holds the nsync-bulker lock: 1 means the lock
    is held, and 0 means the lock was lost. Emitted every 30 seconds by the active
    nsync-bulker.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.LockHeld.v1-locks-nsync_bulker_lock

nsync_bulker.LockHeldDuration.v1-locks-nsync_bulker_lock:
  brief: Time in nanoseconds that the active nsync-bulker has held the convergence
    lock
  custom: true
  description: Time in nanoseconds that the active nsync-bulker has held the convergence
    lock. Emitted every 30 seconds by the active nsync-bulker.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.LockHeldDuration.v1-locks-nsync_bulker_lock

nsync_bulker.NsyncInvalidDesiredLRPsFound:
  brief: Number of invalid DesiredLRPs found during nsync-bulker periodic synchronization
  custom: true
  description: Number of invalid DesiredLRPs found during nsync-bulker periodic synchronization.
    Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.NsyncInvalidDesiredLRPsFound

nsync_bulker.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.lastGCPauseTimeNS

nsync_bulker.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.numBytesAllocated

nsync_bulker.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.numBytesAllocatedHeap

nsync_bulker.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.numBytesAllocatedStack

nsync_bulker.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.numFrees

nsync_bulker.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.memoryStats.numMallocs

nsync_bulker.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.numCPUS

nsync_bulker.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_bulker.numGoRoutines

nsync_listener.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.lastGCPauseTimeNS

nsync_listener.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.numBytesAllocated

nsync_listener.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.numBytesAllocatedHeap

nsync_listener.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.numBytesAllocatedStack

nsync_listener.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.numFrees

nsync_listener.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.memoryStats.numMallocs

nsync_listener.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.numCPUS

nsync_listener.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: nsync_listener.numGoRoutines

rep.CM:
  brief: Emitted every 30 seconds
  custom: true
  description: Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CM

rep.CapacityRemainingContainers:
  brief: Remaining number of containers this cell can host
  custom: false
  description: Remaining number of containers this cell can host. Emitted every 60
    seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityRemainingContainers

rep.CapacityRemainingDisk:
  brief: Amount of disk available to allocate in the cell, in megabytes
  custom: false
  description: Amount of disk available to allocate in the cell, in megabytes.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityRemainingDisk

rep.CapacityRemainingMemory:
  brief: Amount of memory available to allocate in the cell, in megabytes
  custom: false
  description: Amount of memory available to allocate in the cell, in megabytes.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityRemainingMemory

rep.CapacityTotalContainers:
  brief: Total number of containers this cell can host
  custom: false
  description: Total number of containers this cell can host. Emitted every 60 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityTotalContainers

rep.CapacityTotalDisk:
  brief: Total amount of disk in a cell, in megabytes
  custom: false
  description: Total amount of disk in a cell, in megabytes.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityTotalDisk

rep.CapacityTotalMemory:
  brief: Total amount of memory in a cell, in megabytes
  custom: false
  description: Total amount of memory in a cell, in megabytes.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.CapacityTotalMemory

rep.ContainerCount:
  brief: Number of Diego containers currently running
  custom: false
  description: Number of Diego containers currently running.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.ContainerCount

rep.GardenContainerCreationDuration:
  brief: Time in nanoseconds that the rep Garden backend took to create a container
  custom: true
  description: Time in nanoseconds that the rep Garden backend took to create a container.
    Emitted after every successful container creation.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.GardenContainerCreationDuration

rep.LogMessage:
  brief: Emitted every 30 seconds
  custom: true
  description: Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.LogMessage

rep.RepBulkSyncDuration:
  brief: Time in nanoseconds that the cell rep took to synchronize the ActualLRPs
    it has claimed with its actual garden containers
  custom: false
  description: Time in nanoseconds that the cell rep took to synchronize the ActualLRPs
    it has claimed with its actual garden containers. Emitted every 30 seconds by
    each rep.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.RepBulkSyncDuration

rep.UnhealthyCell:
  brief: Number of unhealthy Diego cells
  custom: false
  description: Number of unhealthy Diego cells
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.UnhealthyCell

rep.absolute_entitlement:
  brief: The total number of nanoseconds the container is entitled to spend using
    CPU
  custom: true
  description: The total number of nanoseconds the container is entitled to spend
    using CPU
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: rep.absolute_entitlement

rep.absolute_usage:
  brief: The total number of nanoseconds the container has used CPU
  custom: true
  description: The total number of nanoseconds the container has used CPU
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: rep.absolute_usage

rep.container_age:
  brief: The total number of nanoseconds the Diego-managed container has been alive
  custom: true
  description: The total number of nanoseconds the Diego-managed container has been
    alive
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: rep.container_age

rep.cpu:
  brief: Percentage of time container spent using CPU
  custom: false
  description: Percentage of time container spent using CPU.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.cpu

rep.disk:
  brief: Disk space (bytes) in use by this container
  custom: false
  description: Disk space (bytes) in use by this container.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.disk

rep.disk_quota:
  brief: User requested disk quota (bytes) set on the DesiredLRP for this container
  custom: false
  description: User requested disk quota (bytes) set on the DesiredLRP for this container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.disk_quota

rep.logSenderTotalMessagesRead:
  brief: Count of application log messages sent by Diego Executor
  custom: true
  description: Count of application log messages sent by Diego Executor. Emitted every
    30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: rep.logSenderTotalMessagesRead

rep.memory:
  brief: Memory in use by this container (bytes)
  custom: false
  description: 'Memory in use by this container (bytes). If the per-instance proxy
    is

    enabled, memory usage is scaled set based on the additional memory

    allocation for the proxy.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memory

rep.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.lastGCPauseTimeNS

rep.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.numBytesAllocated

rep.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.numBytesAllocatedHeap

rep.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.numBytesAllocatedStack

rep.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.numFrees

rep.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memoryStats.numMallocs

rep.memory_quota:
  brief: User requested memory quota (bytes) set on the DesiredLRP for this container
  custom: false
  description: User requested memory quota (bytes) set on the DesiredLRP for this
    container
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.memory_quota

rep.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.numCPUS

rep.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: rep.numGoRoutines

route_emitter.LockHeld.v1-locks-route_emitter_lock:
  brief: 'Whether a route-emitter holds the route-emitter lock: 1 means the lock is
    held, and 0 means the lock was lost'
  custom: true
  description: 'Whether a route-emitter holds the route-emitter lock: 1 means the
    lock is held, and 0 means the lock was lost. Emitted every 30 seconds by the active
    route-emitter.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.LockHeld.v1-locks-route_emitter_lock

route_emitter.LockHeldDuration.v1-locks-route_emitter_lock:
  brief: Time in nanoseconds that the active route-emitter has held the route-emitter
    lock
  custom: true
  description: Time in nanoseconds that the active route-emitter has held the route-emitter
    lock. Emitted every 30 seconds by the active route-emitter.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.LockHeldDuration.v1-locks-route_emitter_lock

route_emitter.MessagesEmitted:
  brief: The cumulative number of registration messages that this process has sent
  custom: true
  description: The cumulative number of registration messages that this process has
    sent. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.MessagesEmitted

route_emitter.RouteEmitterSyncDuration:
  brief: Time in nanoseconds that the active route-emitter took to perform its synchronization
    pass
  custom: false
  description: Time in nanoseconds that the active route-emitter took to perform its
    synchronization pass. Emitted every 60 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.RouteEmitterSyncDuration

route_emitter.RoutesRegistered:
  brief: Cumulative number of route registrations emitted from the route-emitter as
    it reacts to changes to LRPs
  custom: true
  description: Cumulative number of route registrations emitted from the route-emitter
    as it reacts to changes to LRPs. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.RoutesRegistered

route_emitter.RoutesSynced:
  brief: Cumulative number of route registrations emitted from the route-emitter during
    its periodic route-table synchronization
  custom: true
  description: Cumulative number of route registrations emitted from the route-emitter
    during its periodic route-table synchronization. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.RoutesSynced

route_emitter.RoutesTotal:
  brief: "Number of routes in the route-emitter\u2019s routing table"
  custom: true
  description: "Number of routes in the route-emitter\u2019s routing table. Emitted\
    \ every 30 seconds."
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.RoutesTotal

route_emitter.RoutesUnregistered:
  brief: Cumulative number of route unregistrations emitted from the route-emitter
    as it reacts to changes to LRPs
  custom: true
  description: Cumulative number of route unregistrations emitted from the route-emitter
    as it reacts to changes to LRPs. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.RoutesUnregistered

route_emitter.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.lastGCPauseTimeNS

route_emitter.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.numBytesAllocated

route_emitter.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.numBytesAllocatedHeap

route_emitter.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.numBytesAllocatedStack

route_emitter.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.numFrees

route_emitter.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.memoryStats.numMallocs

route_emitter.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.numCPUS

route_emitter.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: route_emitter.numGoRoutines

ssh_proxy.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.lastGCPauseTimeNS

ssh_proxy.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.numBytesAllocated

ssh_proxy.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.numBytesAllocatedHeap

ssh_proxy.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.numBytesAllocatedStack

ssh_proxy.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.numFrees

ssh_proxy.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.memoryStats.numMallocs

ssh_proxy.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.numCPUS

ssh_proxy.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process .
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: ssh_proxy.numGoRoutines

stager.StagingRequestFailedDuration:
  brief: Time in nanoseconds that the failed staging task took to run
  custom: true
  description: Time in nanoseconds that the failed staging task took to run. Emitted
    each time a staging task fails.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.StagingRequestFailedDuration

stager.StagingRequestSucceededDuration:
  brief: Time in nanoseconds that the successful staging task took to run
  custom: true
  description: Time in nanoseconds that the successful staging task took to run. Emitted
    each time a staging task completes successfully.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.StagingRequestSucceededDuration

stager.StagingRequestsFailed:
  brief: Cumulative number of failed staging tasks handled by each stager
  custom: true
  description: Cumulative number of failed staging tasks handled by each stager. Emitted
    every time a staging task fails.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.StagingRequestsFailed

stager.StagingRequestsSucceeded:
  brief: Cumulative number of successful staging tasks handled by each stager
  custom: true
  description: Cumulative number of successful staging tasks handled by each stager.
    Emitted every time a staging task completes successfully.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.StagingRequestsSucceeded

stager.StagingStartRequestsReceived:
  brief: Cumulative number of requests to start a staging task
  custom: true
  description: Cumulative number of requests to start a staging task. Emitted by a
    stager each time it handles a request.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.StagingStartRequestsReceived

stager.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.lastGCPauseTimeNS

stager.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.numBytesAllocated

stager.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.numBytesAllocatedHeap

stager.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.numBytesAllocatedStack

stager.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.numFrees

stager.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.memoryStats.numMallocs

stager.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.numCPUS

stager.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: stager.numGoRoutines

syslog_drain_binder.memoryStats.lastGCPauseTimeNS:
  brief: Duration of the last Garbage Collector pause in nanoseconds
  custom: true
  description: Duration of the last Garbage Collector pause in nanoseconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.lastGCPauseTimeNS

syslog_drain_binder.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.numBytesAllocated

syslog_drain_binder.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.numBytesAllocatedHeap

syslog_drain_binder.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.numBytesAllocatedStack

syslog_drain_binder.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.numFrees

syslog_drain_binder.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.memoryStats.numMallocs

syslog_drain_binder.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.numCPUS

syslog_drain_binder.numGoRoutines:
  brief: Instantaneous number of active goroutines in the Doppler process
  custom: true
  description: Instantaneous number of active goroutines in the Doppler process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.numGoRoutines

syslog_drain_binder.pollCount:
  brief: Number of times the syslog drain binder has polled the cloud controller for
    syslog drain bindings
  custom: true
  description: Number of times the syslog drain binder has polled the cloud controller
    for syslog drain bindings. Emitted every 30 seconds.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.pollCount

syslog_drain_binder.totalDrains:
  brief: Number of syslog drains returned by cloud controller
  custom: true
  description: Number of syslog drains returned by cloud controller. Emitted every
    30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: syslog_drain_binder.totalDrains

system_metrics_agent.system_cpu_core_idle:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_core_idle

system_metrics_agent.system_cpu_core_sys:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_core_sys

system_metrics_agent.system_cpu_core_user:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_core_user

system_metrics_agent.system_cpu_core_wait:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_core_wait

system_metrics_agent.system_cpu_idle:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_idle

system_metrics_agent.system_cpu_sys:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_sys

system_metrics_agent.system_cpu_user:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_user

system_metrics_agent.system_cpu_wait:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_cpu_wait

system_metrics_agent.system_disk_ephemeral_inode_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_inode_percent

system_metrics_agent.system_disk_ephemeral_io_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_io_time

system_metrics_agent.system_disk_ephemeral_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_percent

system_metrics_agent.system_disk_ephemeral_read_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_read_bytes

system_metrics_agent.system_disk_ephemeral_read_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_read_time

system_metrics_agent.system_disk_ephemeral_write_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_write_bytes

system_metrics_agent.system_disk_ephemeral_write_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_ephemeral_write_time

system_metrics_agent.system_disk_persistent_inode_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_inode_percent

system_metrics_agent.system_disk_persistent_io_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_io_time

system_metrics_agent.system_disk_persistent_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_percent

system_metrics_agent.system_disk_persistent_read_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_read_bytes

system_metrics_agent.system_disk_persistent_read_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_read_time

system_metrics_agent.system_disk_persistent_write_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_write_bytes

system_metrics_agent.system_disk_persistent_write_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_persistent_write_time

system_metrics_agent.system_disk_system_inode_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_inode_percent

system_metrics_agent.system_disk_system_io_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_io_time

system_metrics_agent.system_disk_system_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_percent

system_metrics_agent.system_disk_system_read_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_read_bytes

system_metrics_agent.system_disk_system_read_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_read_time

system_metrics_agent.system_disk_system_write_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_write_bytes

system_metrics_agent.system_disk_system_write_time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_disk_system_write_time

system_metrics_agent.system_healthy:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_healthy

system_metrics_agent.system_load_15m:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_load_15m

system_metrics_agent.system_load_1m:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_load_1m

system_metrics_agent.system_load_5m:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_load_5m

system_metrics_agent.system_mem_kb:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_mem_kb

system_metrics_agent.system_mem_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_mem_percent

system_metrics_agent.system_network_bytes_received:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_bytes_received

system_metrics_agent.system_network_bytes_sent:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_bytes_sent

system_metrics_agent.system_network_drop_in:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_drop_in

system_metrics_agent.system_network_drop_out:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_drop_out

system_metrics_agent.system_network_error_in:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_error_in

system_metrics_agent.system_network_error_out:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_error_out

system_metrics_agent.system_network_ip_forwarding:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_ip_forwarding

system_metrics_agent.system_network_packets_received:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_packets_received

system_metrics_agent.system_network_packets_sent:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_packets_sent

system_metrics_agent.system_network_tcp_active_opens:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_tcp_active_opens

system_metrics_agent.system_network_tcp_curr_estab:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_tcp_curr_estab

system_metrics_agent.system_network_tcp_retrans_segs:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_tcp_retrans_segs

system_metrics_agent.system_network_udp_in_errors:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_udp_in_errors

system_metrics_agent.system_network_udp_lite_in_errors:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_udp_lite_in_errors

system_metrics_agent.system_network_udp_no_ports:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_network_udp_no_ports

system_metrics_agent.system_swap_kb:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_swap_kb

system_metrics_agent.system_swap_percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: system_metrics_agent.system_swap_percent

tps_listener.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.lastGCPauseTimeNS

tps_listener.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.numBytesAllocated

tps_listener.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.numBytesAllocatedHeap

tps_listener.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.numBytesAllocatedStack

tps_listener.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.numFrees

tps_listener.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.memoryStats.numMallocs

tps_listener.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.numCPUS

tps_listener.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_listener.numGoRoutines

tps_watcher.LockHeld.v1-locks-tps_watcher_lock:
  brief: 'Whether a tps-watcher holds the tps-watcher lock: 1 means the lock is held,
    and 0 means the lock was lost'
  custom: true
  description: 'Whether a tps-watcher holds the tps-watcher lock: 1 means the lock
    is held, and 0 means the lock was lost. Emitted every 30 seconds by the active
    tps-watcher.'
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.LockHeld.v1-locks-tps_watcher_lock

tps_watcher.LockHeldDuration.v1-locks-tps_watcher_lock:
  brief: Time in nanoseconds that the active tps-watcher has held the convergence
    lock
  custom: true
  description: Time in nanoseconds that the active tps-watcher has held the convergence
    lock. Emitted every 30 seconds by the active tps-watcher.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.LockHeldDuration.v1-locks-tps_watcher_lock

tps_watcher.memoryStats.lastGCPauseTimeNS:
  brief: Duration in nanoseconds of the last garbage collector pause
  custom: true
  description: Duration in nanoseconds of the last garbage collector pause.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.lastGCPauseTimeNS

tps_watcher.memoryStats.numBytesAllocated:
  brief: Instantaneous count of bytes allocated and still in use
  custom: true
  description: Instantaneous count of bytes allocated and still in use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.numBytesAllocated

tps_watcher.memoryStats.numBytesAllocatedHeap:
  brief: Instantaneous count of bytes allocated on the main heap and still in use
  custom: true
  description: Instantaneous count of bytes allocated on the main heap and still in
    use.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.numBytesAllocatedHeap

tps_watcher.memoryStats.numBytesAllocatedStack:
  brief: Instantaneous count of bytes used by the stack allocator
  custom: true
  description: Instantaneous count of bytes used by the stack allocator.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.numBytesAllocatedStack

tps_watcher.memoryStats.numFrees:
  brief: Lifetime number of memory deallocations
  custom: true
  description: Lifetime number of memory deallocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.numFrees

tps_watcher.memoryStats.numMallocs:
  brief: Lifetime number of memory allocations
  custom: true
  description: Lifetime number of memory allocations.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.memoryStats.numMallocs

tps_watcher.numCPUS:
  brief: Number of CPUs on the machine
  custom: true
  description: Number of CPUs on the machine. Emitted every 30 seconds.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.numCPUS

tps_watcher.numGoRoutines:
  brief: Instantaneous number of active goroutines in the process
  custom: true
  description: Instantaneous number of active goroutines in the process.
  metric_type: gauge
  monitor: cloudfoundry-firehose-nozzle
  title: tps_watcher.numGoRoutines

uaa.audit_service.client_authentication_count:
  brief: Number of client authentication attempts
  custom: true
  description: Number of client authentication attempts.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.client_authentication_count

uaa.audit_service.client_authentication_failure_count:
  brief: Number of failed client authentication attempts
  custom: false
  description: Number of failed client authentication attempts.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.client_authentication_failure_count

uaa.audit_service.principal_authentication_failure_count:
  brief: Number of failed principal authentication attempts
  custom: false
  description: Number of failed principal authentication attempts.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.principal_authentication_failure_count

uaa.audit_service.principal_not_found_count:
  brief: Number of times a non-user was not found
  custom: false
  description: Number of times a non-user was not found.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.principal_not_found_count

uaa.audit_service.user_authentication_count:
  brief: Number of times a user has successfully authenticated
  custom: true
  description: Number of times a user has successfully authenticated.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.user_authentication_count

uaa.audit_service.user_authentication_failure_count:
  brief: Number of failed user authentication attempts
  custom: false
  description: Number of failed user authentication attempts.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.user_authentication_failure_count

uaa.audit_service.user_not_found_count:
  brief: Number of times a user was not found
  custom: false
  description: Number of times a user was not found.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.user_not_found_count

uaa.audit_service.user_password_changes:
  brief: Number of times a user password has changed
  custom: true
  description: Number of times a user password has changed.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.user_password_changes

uaa.audit_service.user_password_failures:
  brief: Number of times a user password change has failed
  custom: false
  description: Number of times a user password change has failed.
  metric_type: cumulative
  monitor: cloudfoundry-firehose-nozzle
  title: uaa.audit_service.user_password_failures


cpufreq.<N>:
  brief: The processor frequency in Hertz for the <N>th processor on the system
  custom: true
  description: The processor frequency in Hertz for the <N>th processor on the system.
  metric_type: gauge
  monitor: collectd/cpufreq
  title: cpufreq.<N>


df_complex.free:
  brief: Measures free disk space in bytes on this file system
  custom: false
  description: Measures free disk space in bytes on this file system.
  metric_type: gauge
  monitor: collectd/df
  title: df_complex.free

df_complex.reserved:
  brief: Measures disk space in bytes reserved for the super-user on this file system
  custom: true
  description: Measures disk space in bytes reserved for the super-user on this file
    system.
  metric_type: gauge
  monitor: collectd/df
  title: df_complex.reserved

df_complex.used:
  brief: Measures used disk space in bytes on this file system
  custom: false
  description: Measures used disk space in bytes on this file system.
  metric_type: gauge
  monitor: collectd/df
  title: df_complex.used

df_inodes.free:
  brief: Measures free inodes in the file system
  custom: true
  description: Measures free inodes in the file system.  Inodes are structures used
    by Unix filesystems to store metadata about files.
  metric_type: gauge
  monitor: collectd/df
  title: df_inodes.free

df_inodes.reserved:
  brief: Measures inodes reserved for the super user in the file system
  custom: true
  description: Measures inodes reserved for the super user in the file system.  Inodes
    are structures used by Unix filesystems to store metadata about files.
  metric_type: gauge
  monitor: collectd/df
  title: df_inodes.reserved

df_inodes.used:
  brief: Measures used inodes in the file system
  custom: true
  description: Measures used inodes in the file system.  Inodes are structures used
    by Unix filesystems to store metadata about files.
  metric_type: gauge
  monitor: collectd/df
  title: df_inodes.used

percent_bytes.free:
  brief: Measures free disk space as a percentage of total disk space on this file
    system
  custom: true
  description: Measures free disk space as a percentage of total disk space on this
    file system.
  metric_type: gauge
  monitor: collectd/df
  title: percent_bytes.free

percent_bytes.reserved:
  brief: Measures disk space reserved for the super-user as a percentage of total
    disk space of this file system
  custom: true
  description: Measures disk space reserved for the super-user as a percentage of
    total disk space of this file system.
  metric_type: gauge
  monitor: collectd/df
  title: percent_bytes.reserved

percent_bytes.used:
  brief: Measures used disk space as a percentage of total disk space of this file
    system
  custom: true
  description: Measures used disk space as a percentage of total disk space of this
    file system.
  metric_type: gauge
  monitor: collectd/df
  title: percent_bytes.used

percent_inodes.free:
  brief: Measures free inodes as a percentage of total inodes in the file system
  custom: true
  description: Measures free inodes as a percentage of total inodes in the file system.  Inodes
    are structures used by file systems to store information about files (other than
    its content).
  metric_type: gauge
  monitor: collectd/df
  title: percent_inodes.free

percent_inodes.reserved:
  brief: Measures inodes reserved for the super-user as a percentage of total inodes
    in the file system
  custom: true
  description: Measures inodes reserved for the super-user as a percentage of total
    inodes in the file system.  Inodes are structures used by file systems to store
    information about files (other than its content).
  metric_type: gauge
  monitor: collectd/df
  title: percent_inodes.reserved

percent_inodes.used:
  brief: Measures used inodes as a percentage of total inodes in the file system
  custom: true
  description: Measures used inodes as a percentage of total inodes in the file system.  Inodes
    are structures used by file systems to store information about files (other than
    its content).
  metric_type: gauge
  monitor: collectd/df
  title: percent_inodes.used


disk_io_time.io_time:
  brief: Amount of time spent doing IO in ms
  custom: true
  description: Amount of time spent doing IO in ms
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_io_time.io_time

disk_io_time.weighted_io_time:
  brief: Amount of time spent doing IO in ms multiplied by the queue length
  custom: true
  description: Amount of time spent doing IO in ms multiplied by the queue length
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_io_time.weighted_io_time

disk_merged.read:
  brief: The number of disk reads merged into single physical disk access operations
  custom: true
  description: The number of disk reads merged into single physical disk access operations.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_merged.read

disk_merged.write:
  brief: The number of disk writes merged into single physical disk access operations
  custom: true
  description: The number of disk writes merged into single physical disk access operations.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_merged.write

disk_octets.read:
  brief: The number of bytes (octets) read from a disk
  custom: true
  description: The number of bytes (octets) read from a disk.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_octets.read

disk_octets.write:
  brief: The number of bytes (octets) written to a disk
  custom: true
  description: The number of bytes (octets) written to a disk.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_octets.write

disk_ops.read:
  brief: The number of disk read operations
  custom: false
  description: The number of disk read operations.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_ops.read

disk_ops.write:
  brief: The number of disk write operations
  custom: false
  description: The number of disk write operations.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_ops.write

disk_time.read:
  brief: The average amount of time it took to do a read operation
  custom: true
  description: The average amount of time it took to do a read operation.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_time.read

disk_time.write:
  brief: The average amount of time it took to do a write operation
  custom: true
  description: The average amount of time it took to do a write operation.
  metric_type: cumulative
  monitor: collectd/disk
  title: disk_time.write

pending_operations:
  brief: Number of pending operations
  custom: true
  description: Number of pending operations
  metric_type: gauge
  monitor: collectd/disk
  title: pending_operations


bytes.indices.primaries.merges.total-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: bytes.indices.primaries.merges.total-size

bytes.indices.total.merges.total-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: bytes.indices.total.merges.total-size

counter.http.total_open:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.http.total_open

counter.indices.cache.field.eviction:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.field.eviction

counter.indices.cache.filter.cache-count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.filter.cache-count

counter.indices.cache.filter.evictions:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.filter.evictions

counter.indices.cache.filter.hit-count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.filter.hit-count

counter.indices.cache.filter.miss-count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.filter.miss-count

counter.indices.cache.filter.total-count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.cache.filter.total-count

counter.indices.flush.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.flush.time

counter.indices.flush.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.flush.total

counter.indices.get.exists-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.exists-time

counter.indices.get.exists-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.exists-total

counter.indices.get.missing-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.missing-time

counter.indices.get.missing-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.missing-total

counter.indices.get.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.time

counter.indices.get.total:
  brief: The total number of get requests since node startup
  custom: false
  description: The total number of get requests since node startup
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.get.total

counter.indices.indexing.delete-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.indexing.delete-time

counter.indices.indexing.delete-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.indexing.delete-total

counter.indices.indexing.index-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.indexing.index-time

counter.indices.indexing.index-total:
  brief: The total number of index requests since node startup
  custom: false
  description: The total number of index requests since node startup
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.indexing.index-total

counter.indices.merges.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.merges.time

counter.indices.merges.total:
  brief: Total number of merges since node startup
  custom: false
  description: Total number of merges since node startup
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.merges.total

counter.indices.merges.total-size:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.merges.total-size

counter.indices.primaries.fielddata.evictions:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.fielddata.evictions

counter.indices.primaries.flush.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.flush.total

counter.indices.primaries.flush.total-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.flush.total-time

counter.indices.primaries.get.exists-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.get.exists-time

counter.indices.primaries.get.exists-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.get.exists-total

counter.indices.primaries.get.missing-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.get.missing-time

counter.indices.primaries.get.missing-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.get.missing-total

counter.indices.primaries.get.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.get.time

counter.indices.primaries.indexing.delete-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.indexing.delete-time

counter.indices.primaries.indexing.delete-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.indexing.delete-total

counter.indices.primaries.indexing.index-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.indexing.index-time

counter.indices.primaries.indexing.index-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.indexing.index-total

counter.indices.primaries.merges.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.merges.total

counter.indices.primaries.merges.total-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.merges.total-docs

counter.indices.primaries.merges.total-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.merges.total-time

counter.indices.primaries.refresh.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.refresh.total

counter.indices.primaries.refresh.total-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.refresh.total-time

counter.indices.primaries.search.fetch-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.search.fetch-time

counter.indices.primaries.search.fetch-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.search.fetch-total

counter.indices.primaries.search.query-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.search.query-time

counter.indices.primaries.search.query-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.search.query-total

counter.indices.primaries.segments.count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.segments.count

counter.indices.primaries.translog.operations:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.translog.operations

counter.indices.primaries.warmer.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.warmer.total

counter.indices.primaries.warmer.total.primaries.warmer.total-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.primaries.warmer.total.primaries.warmer.total-time

counter.indices.refresh.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.refresh.time

counter.indices.refresh.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.refresh.total

counter.indices.search.fetch-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.fetch-time

counter.indices.search.fetch-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.fetch-total

counter.indices.search.query-time:
  brief: Total time spent in search queries (milliseconds)
  custom: false
  description: Total time spent in search queries (milliseconds)
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.query-time

counter.indices.search.query-total:
  brief: The total number of search requests since node startup
  custom: false
  description: The total number of search requests since node startup
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.query-total

counter.indices.search.scroll-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.scroll-time

counter.indices.search.scroll.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.search.scroll.total

counter.indices.total.fielddata.evictions:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.fielddata.evictions

counter.indices.total.flush.periodic:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.flush.periodic

counter.indices.total.get.exists-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.exists-time

counter.indices.total.get.exists-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.exists-total

counter.indices.total.get.missing-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.missing-time

counter.indices.total.get.missing-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.missing-total

counter.indices.total.get.time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.time

counter.indices.total.get.total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.get.total

counter.indices.total.indexing.delete-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.indexing.delete-time

counter.indices.total.indexing.delete-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.indexing.delete-total

counter.indices.total.indexing.index-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.indexing.index-time

counter.indices.total.indexing.index-total:
  brief: The total number of index requests per cluster
  custom: false
  description: The total number of index requests per cluster
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.indexing.index-total

counter.indices.total.merges.total:
  brief: Total number of merges per cluster
  custom: false
  description: Total number of merges per cluster
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.merges.total

counter.indices.total.merges.total-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.merges.total-docs

counter.indices.total.merges.total-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.merges.total-time

counter.indices.total.search.fetch-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.search.fetch-total

counter.indices.total.search.query-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.search.query-time

counter.indices.total.search.query-total:
  brief: The total number of search requests per cluster
  custom: false
  description: The total number of search requests per cluster
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.search.query-total

counter.indices.total.translog.earliest_last_modified_age:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.translog.earliest_last_modified_age

counter.indices.total.translog.uncommitted_operations:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.translog.uncommitted_operations

counter.indices.total.translog.uncommitted_size_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.indices.total.translog.uncommitted_size_in_bytes

counter.jvm.gc.count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.jvm.gc.count

counter.jvm.gc.old-count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.jvm.gc.old-count

counter.jvm.gc.old-time:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.jvm.gc.old-time

counter.jvm.gc.time:
  brief: Total garbage collection time (milliseconds)
  custom: false
  description: Total garbage collection time (milliseconds)
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.jvm.gc.time

counter.jvm.uptime:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.jvm.uptime

counter.thread_pool.completed:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.thread_pool.completed

counter.thread_pool.rejected:
  brief: Number of rejected thread pool requests
  custom: false
  description: Number of rejected thread pool requests
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.thread_pool.rejected

counter.transport.rx.count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.transport.rx.count

counter.transport.rx.size:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.transport.rx.size

counter.transport.tx.count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.transport.tx.count

counter.transport.tx.size:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/elasticsearch
  title: counter.transport.tx.size

gauge.cluster.active-primary-shards:
  brief: The number of active primary shards
  custom: false
  description: The number of active primary shards
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.active-primary-shards

gauge.cluster.active-shards:
  brief: The number of active shards
  custom: false
  description: The number of active shards
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.active-shards

gauge.cluster.initializing-shards:
  brief: The number of currently initializing shards
  custom: true
  description: The number of currently initializing shards
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.initializing-shards

gauge.cluster.number-of-data_nodes:
  brief: The current number of data nodes in the cluster
  custom: false
  description: The current number of data nodes in the cluster
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.number-of-data_nodes

gauge.cluster.number-of-nodes:
  brief: Total number of nodes in the cluster
  custom: false
  description: Total number of nodes in the cluster
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.number-of-nodes

gauge.cluster.relocating-shards:
  brief: The number of shards that are currently being relocated
  custom: false
  description: The number of shards that are currently being relocated
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.relocating-shards

gauge.cluster.status:
  brief: The health status of the cluster
  custom: true
  description: The health status of the cluster
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.status

gauge.cluster.unassigned-shards:
  brief: The number of shards that are currently unassigned
  custom: false
  description: The number of shards that are currently unassigned
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.cluster.unassigned-shards

gauge.http.current_open:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.http.current_open

gauge.indices.cache.field.size:
  brief: Field data size (bytes)
  custom: false
  description: Field data size (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.cache.field.size

gauge.indices.cache.filter.size:
  brief: Filter cache size (bytes)
  custom: false
  description: Filter cache size (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.cache.filter.size

gauge.indices.docs.count:
  brief: Number of documents on this node
  custom: false
  description: Number of documents on this node
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.docs.count

gauge.indices.docs.deleted:
  brief: Number of deleted documents on this node
  custom: false
  description: Number of deleted documents on this node
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.docs.deleted

gauge.indices.get.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.get.current

gauge.indices.indexing.delete-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.indexing.delete-current

gauge.indices.indexing.index-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.indexing.index-current

gauge.indices.merges.current:
  brief: Number of active merges
  custom: false
  description: Number of active merges
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.merges.current

gauge.indices.merges.current-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.merges.current-docs

gauge.indices.merges.current-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.merges.current-size

gauge.indices.merges.total-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.merges.total-docs

gauge.indices.primaries.completion.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.completion.size

gauge.indices.primaries.docs.count:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.docs.count

gauge.indices.primaries.docs.deleted:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.docs.deleted

gauge.indices.primaries.fielddata.memory-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.fielddata.memory-size

gauge.indices.primaries.flush.periodic:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.flush.periodic

gauge.indices.primaries.get.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.get.current

gauge.indices.primaries.indexing.delete-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.indexing.delete-current

gauge.indices.primaries.indexing.index-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.indexing.index-current

gauge.indices.primaries.merges.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.merges.current

gauge.indices.primaries.merges.current-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.merges.current-docs

gauge.indices.primaries.merges.current-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.merges.current-size

gauge.indices.primaries.search.fetch-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.search.fetch-current

gauge.indices.primaries.search.open-contexts:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.search.open-contexts

gauge.indices.primaries.search.query-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.search.query-current

gauge.indices.primaries.segments.index-writer-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.segments.index-writer-memory

gauge.indices.primaries.segments.memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.segments.memory

gauge.indices.primaries.segments.version-map-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.segments.version-map-memory

gauge.indices.primaries.store.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.store.size

gauge.indices.primaries.translog.earliest_last_modified_age:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.translog.earliest_last_modified_age

gauge.indices.primaries.translog.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.translog.size

gauge.indices.primaries.translog.uncommitted_operations:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.translog.uncommitted_operations

gauge.indices.primaries.translog.uncommitted_size_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.translog.uncommitted_size_in_bytes

gauge.indices.primaries.warmer.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.primaries.warmer.current

gauge.indices.search.fetch-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.search.fetch-current

gauge.indices.search.open-contexts:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.search.open-contexts

gauge.indices.search.query-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.search.query-current

gauge.indices.search.scroll.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.search.scroll.current

gauge.indices.segments.count:
  brief: Number of segments on this node
  custom: false
  description: Number of segments on this node
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.segments.count

gauge.indices.segments.index-writer-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.segments.index-writer-size

gauge.indices.segments.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.segments.size

gauge.indices.store.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.store.size

gauge.indices.total.docs.count:
  brief: Number of documents in the cluster
  custom: false
  description: Number of documents in the cluster
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.docs.count

gauge.indices.total.docs.deleted:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.docs.deleted

gauge.indices.total.fielddata.memory-size:
  brief: Field data size (bytes)
  custom: false
  description: Field data size (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.fielddata.memory-size

gauge.indices.total.filter-cache.memory-size:
  brief: Filter cache size (bytes)
  custom: false
  description: Filter cache size (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.filter-cache.memory-size

gauge.indices.total.get.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.get.current

gauge.indices.total.indexing.delete-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.indexing.delete-current

gauge.indices.total.indexing.index-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.indexing.index-current

gauge.indices.total.merges.current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.merges.current

gauge.indices.total.merges.current-docs:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.merges.current-docs

gauge.indices.total.merges.current-size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.merges.current-size

gauge.indices.total.search.open-contexts:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.search.open-contexts

gauge.indices.total.search.query-current:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.search.query-current

gauge.indices.total.store.size:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.total.store.size

gauge.indices.translog.uncommitted_operations:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.translog.uncommitted_operations

gauge.indices.translog.uncommitted_size_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.indices.translog.uncommitted_size_in_bytes

gauge.jvm.mem.heap-committed:
  brief: Total heap committed by the process (bytes)
  custom: false
  description: Total heap committed by the process (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.heap-committed

gauge.jvm.mem.heap-used:
  brief: Total heap used (bytes)
  custom: false
  description: Total heap used (bytes)
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.heap-used

gauge.jvm.mem.non-heap-committed:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.non-heap-committed

gauge.jvm.mem.non-heap-used:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.non-heap-used

gauge.jvm.mem.pools.old.max_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.pools.old.max_in_bytes

gauge.jvm.mem.pools.old.used_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.pools.old.used_in_bytes

gauge.jvm.mem.pools.young.max_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.pools.young.max_in_bytes

gauge.jvm.mem.pools.young.used_in_bytes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.mem.pools.young.used_in_bytes

gauge.jvm.threads.count:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.threads.count

gauge.jvm.threads.peak:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.jvm.threads.peak

gauge.process.cpu.percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.process.cpu.percent

gauge.process.open_file_descriptors:
  brief: Number of currently open file descriptors
  custom: false
  description: Number of currently open file descriptors
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.process.open_file_descriptors

gauge.thread_pool.active:
  brief: Number of active threads
  custom: true
  description: Number of active threads
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.thread_pool.active

gauge.thread_pool.largest:
  brief: Highest active threads in thread pool
  custom: true
  description: Highest active threads in thread pool
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.thread_pool.largest

gauge.thread_pool.queue:
  brief: Number of Tasks in thread pool
  custom: true
  description: Number of Tasks in thread pool
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.thread_pool.queue

gauge.thread_pool.threads:
  brief: Number of Threads in thread pool
  custom: true
  description: Number of Threads in thread pool
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.thread_pool.threads

gauge.transport.server_open:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: gauge.transport.server_open

percent.jvm.mem.heap-used-percent:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/elasticsearch
  title: percent.jvm.mem.heap-used-percent


counter.hadoop-datanode-blocks-read:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-datanode-blocks-read

counter.hadoop-datanode-blocks-written:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-datanode-blocks-written

counter.hadoop-datanode-bytes-read:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-datanode-bytes-read

counter.hadoop-datanode-bytes-written:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-datanode-bytes-written

counter.hadoop-namenode-files-total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-files-total

counter.hadoop-namenode-gc-count:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-gc-count

counter.hadoop-namenode-gc-time:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-gc-time

counter.hadoop-namenode-rpc-total-calls:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-rpc-total-calls

counter.hadoop-namenode-total-load:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-total-load

counter.hadoop-namenode-volume-failures:
  brief: ''
  custom: false
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-namenode-volume-failures

counter.hadoop-nodeManager-containers-failed:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-nodeManager-containers-failed

counter.hadoop-nodeManager-containers-launched:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: counter.hadoop-nodeManager-containers-launched

gauge.hadoop-datanode-fs-capacity:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-fs-capacity

gauge.hadoop-datanode-fs-dfs-remaining:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-fs-dfs-remaining

gauge.hadoop-datanode-fs-dfs-used:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-fs-dfs-used

gauge.hadoop-datanode-info-xceiver:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-info-xceiver

gauge.hadoop-datanode-jvm-heap-used:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-jvm-heap-used

gauge.hadoop-datanode-jvm-non-heap-used:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-jvm-non-heap-used

gauge.hadoop-datanode-rpc-call-queue-length:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-rpc-call-queue-length

gauge.hadoop-datanode-rpc-open-connections:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-rpc-open-connections

gauge.hadoop-datanode-rpc-processing-avg:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-rpc-processing-avg

gauge.hadoop-datanode-rpc-queue-time-avg:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-datanode-rpc-queue-time-avg

gauge.hadoop-namenode-blocks-with-corrupt-replicas:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-blocks-with-corrupt-replicas

gauge.hadoop-namenode-capacity-remaining:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-capacity-remaining

gauge.hadoop-namenode-capacity-total:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-capacity-total

gauge.hadoop-namenode-capacity-used:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-capacity-used

gauge.hadoop-namenode-corrupt-blocks:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-corrupt-blocks

gauge.hadoop-namenode-current-heap-used:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-current-heap-used

gauge.hadoop-namenode-dead-datanodes:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-dead-datanodes

gauge.hadoop-namenode-dfs-free:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-dfs-free

gauge.hadoop-namenode-live-datanodes:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-live-datanodes

gauge.hadoop-namenode-max-heap:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-max-heap

gauge.hadoop-namenode-missing-blocks:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-missing-blocks

gauge.hadoop-namenode-percent-dfs-used:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-percent-dfs-used

gauge.hadoop-namenode-percent-remaining:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-percent-remaining

gauge.hadoop-namenode-rpc-avg-process-time:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-rpc-avg-process-time

gauge.hadoop-namenode-rpc-avg-queue:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-rpc-avg-queue

gauge.hadoop-namenode-stale-datanodes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-stale-datanodes

gauge.hadoop-namenode-under-replicated-blocks:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-namenode-under-replicated-blocks

gauge.hadoop-nodeManager-allocated-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-nodeManager-allocated-memory

gauge.hadoop-nodeManager-allocated-vcores:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-nodeManager-allocated-vcores

gauge.hadoop-nodeManager-available-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-nodeManager-available-memory

gauge.hadoop-nodeManager-available-vcores:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-nodeManager-available-vcores

gauge.hadoop-resourceManager-active-apps:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-active-apps

gauge.hadoop-resourceManager-active-nms:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-active-nms

gauge.hadoop-resourceManager-active-users:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-active-users

gauge.hadoop-resourceManager-allocated-containers:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-allocated-containers

gauge.hadoop-resourceManager-allocated-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-allocated-memory

gauge.hadoop-resourceManager-allocated-vcores:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-allocated-vcores

gauge.hadoop-resourceManager-available-memory:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-available-memory

gauge.hadoop-resourceManager-available-vcores:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-available-vcores

gauge.hadoop-resourceManager-heap-max:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-heap-max

gauge.hadoop-resourceManager-heap-used:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.hadoop-resourceManager-heap-used

gauge.jvm.threads.count:
  brief: Number of JVM threads
  custom: false
  description: Number of JVM threads
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.jvm.threads.count

gauge.loaded_classes:
  brief: Number of classes loaded in the JVM
  custom: false
  description: Number of classes loaded in the JVM
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: gauge.loaded_classes

invocations:
  brief: Total number of garbage collection events
  custom: false
  description: Total number of garbage collection events
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: invocations

jmx_memory.committed:
  brief: Amount of memory guaranteed to be available in bytes
  custom: false
  description: Amount of memory guaranteed to be available in bytes
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: jmx_memory.committed

jmx_memory.init:
  brief: Amount of initial memory at startup in bytes
  custom: false
  description: Amount of initial memory at startup in bytes
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: jmx_memory.init

jmx_memory.max:
  brief: Maximum amount of memory that can be used in bytes
  custom: false
  description: Maximum amount of memory that can be used in bytes
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: jmx_memory.max

jmx_memory.used:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: collectd/hadoopjmx
  title: jmx_memory.used

total_time_in_ms.collection_time:
  brief: Amount of time spent garbage collecting in milliseconds
  custom: false
  description: Amount of time spent garbage collecting in milliseconds
  metric_type: cumulative
  monitor: collectd/hadoopjmx
  title: total_time_in_ms.collection_time


if_dropped.rx:
  brief: Count of received packets dropped by the interface
  custom: true
  description: Count of received packets dropped by the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_dropped.rx

if_dropped.tx:
  brief: Count of transmitted packets dropped by the interface
  custom: true
  description: Count of transmitted packets dropped by the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_dropped.tx

if_errors.rx:
  brief: Count of receive errors on the interface
  custom: false
  description: Count of receive errors on the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_errors.rx

if_errors.tx:
  brief: Count of transmit errors on the interface
  custom: false
  description: Count of transmit errors on the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_errors.tx

if_octets.rx:
  brief: Count of bytes (octets) received on the interface
  custom: false
  description: Count of bytes (octets) received on the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_octets.rx

if_octets.tx:
  brief: Count of bytes (octets) transmitted by the interface
  custom: false
  description: Count of bytes (octets) transmitted by the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_octets.tx

if_packets.rx:
  brief: Count of packets received on the interface
  custom: true
  description: Count of packets received on the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_packets.rx

if_packets.tx:
  brief: Count of packets transmitted by the interface
  custom: true
  description: Count of packets transmitted by the interface
  metric_type: cumulative
  monitor: collectd/interface
  title: if_packets.tx


gauge.jvm.threads.count:
  brief: Number of JVM threads
  custom: false
  description: Number of JVM threads
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.jvm.threads.count

gauge.kafka.consumer.bytes-consumed-rate:
  brief: Average number of bytes consumed per second
  custom: false
  description: Average number of bytes consumed per second. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.kafka.consumer.bytes-consumed-rate

gauge.kafka.consumer.fetch-rate:
  brief: Number of records consumed per second
  custom: false
  description: Number of records consumed per second.
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.kafka.consumer.fetch-rate

gauge.kafka.consumer.fetch-size-avg:
  brief: Average number of bytes fetched per request
  custom: false
  description: Average number of bytes fetched per request. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.kafka.consumer.fetch-size-avg

gauge.kafka.consumer.records-consumed-rate:
  brief: Average number of records consumed per second
  custom: false
  description: Average number of records consumed per second. This metric has either
    client-id dimension or, both client-id and topic dimensions. The former is an
    aggregate across all topics of the latter.
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.kafka.consumer.records-consumed-rate

gauge.kafka.consumer.records-lag-max:
  brief: Maximum lag in of records for any partition in this window
  custom: false
  description: Maximum lag in of records for any partition in this window. An increasing
    value over time is your best indication that the consumer group is not keeping
    up with the producers.
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.kafka.consumer.records-lag-max

gauge.loaded_classes:
  brief: Number of classes loaded in the JVM
  custom: false
  description: Number of classes loaded in the JVM
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: gauge.loaded_classes

invocations:
  brief: Total number of garbage collection events
  custom: false
  description: Total number of garbage collection events
  metric_type: cumulative
  monitor: collectd/kafka_consumer
  title: invocations

jmx_memory.committed:
  brief: Amount of memory guaranteed to be available in bytes
  custom: false
  description: Amount of memory guaranteed to be available in bytes
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: jmx_memory.committed

jmx_memory.init:
  brief: Amount of initial memory at startup in bytes
  custom: false
  description: Amount of initial memory at startup in bytes
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: jmx_memory.init

jmx_memory.max:
  brief: Maximum amount of memory that can be used in bytes
  custom: false
  description: Maximum amount of memory that can be used in bytes
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: jmx_memory.max

jmx_memory.used:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: collectd/kafka_consumer
  title: jmx_memory.used

total_time_in_ms.collection_time:
  brief: Amount of time spent garbage collecting in milliseconds
  custom: false
  description: Amount of time spent garbage collecting in milliseconds
  metric_type: cumulative
  monitor: collectd/kafka_consumer
  title: total_time_in_ms.collection_time


gauge.jvm.threads.count:
  brief: Number of JVM threads
  custom: false
  description: Number of JVM threads
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.jvm.threads.count

gauge.kafka.producer.byte-rate:
  brief: Average number of bytes sent per second for a topic
  custom: false
  description: Average number of bytes sent per second for a topic. This metric has
    client-id and topic dimensions.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.byte-rate

gauge.kafka.producer.compression-rate:
  brief: Average compression rate of record batches for a topic
  custom: false
  description: Average compression rate of record batches for a topic. This metric
    has client-id and topic dimensions.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.compression-rate

gauge.kafka.producer.io-wait-time-ns-avg:
  brief: Average length of time the I/O thread spent waiting for a socket ready for
    reads or writes in nanoseconds
  custom: false
  description: Average length of time the I/O thread spent waiting for a socket ready
    for reads or writes in nanoseconds. This metric has client-id dimension.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.io-wait-time-ns-avg

gauge.kafka.producer.outgoing-byte-rate:
  brief: Average number of outgoing bytes sent per second to all servers
  custom: false
  description: Average number of outgoing bytes sent per second to all servers. This
    metric has client-id dimension.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.outgoing-byte-rate

gauge.kafka.producer.record-error-rate:
  brief: Average per-second number of record sends that resulted in errors for a topic
  custom: false
  description: Average per-second number of record sends that resulted in errors for
    a topic. This metric has client-id and topic dimensions.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.record-error-rate

gauge.kafka.producer.record-retry-rate:
  brief: Average per-second number of retried record sends for a topic
  custom: false
  description: Average per-second number of retried record sends for a topic. This
    metric has client-id and topic dimensions.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.record-retry-rate

gauge.kafka.producer.record-send-rate:
  brief: Average number of records sent per second for a topic
  custom: false
  description: Average number of records sent per second for a topic. This metric
    has client-id and topic dimensions.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.record-send-rate

gauge.kafka.producer.request-latency-avg:
  brief: Average request latency in ms. Time it takes on average for the producer
    to get responses from the broker
  custom: false
  description: Average request latency in ms. Time it takes on average for the producer
    to get responses from the broker. This metric has client-id dimension.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.request-latency-avg

gauge.kafka.producer.request-rate:
  brief: Average number of requests sent per second
  custom: false
  description: Average number of requests sent per second. This metric has client-id
    dimension.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.request-rate

gauge.kafka.producer.response-rate:
  brief: Average number of responses received per second
  custom: false
  description: Average number of responses received per second. This metric has client-id
    dimension.
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.kafka.producer.response-rate

gauge.loaded_classes:
  brief: Number of classes loaded in the JVM
  custom: false
  description: Number of classes loaded in the JVM
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: gauge.loaded_classes

invocations:
  brief: Total number of garbage collection events
  custom: false
  description: Total number of garbage collection events
  metric_type: cumulative
  monitor: collectd/kafka_producer
  title: invocations

jmx_memory.committed:
  brief: Amount of memory guaranteed to be available in bytes
  custom: false
  description: Amount of memory guaranteed to be available in bytes
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: jmx_memory.committed

jmx_memory.init:
  brief: Amount of initial memory at startup in bytes
  custom: false
  description: Amount of initial memory at startup in bytes
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: jmx_memory.init

jmx_memory.max:
  brief: Maximum amount of memory that can be used in bytes
  custom: false
  description: Maximum amount of memory that can be used in bytes
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: jmx_memory.max

jmx_memory.used:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: collectd/kafka_producer
  title: jmx_memory.used

total_time_in_ms.collection_time:
  brief: Amount of time spent garbage collecting in milliseconds
  custom: false
  description: Amount of time spent garbage collecting in milliseconds
  metric_type: cumulative
  monitor: collectd/kafka_producer
  title: total_time_in_ms.collection_time


load.longterm:
  brief: Average CPU load for the whole system over the last 15 minutes
  custom: false
  description: Average CPU load for the whole system over the last 15 minutes
  metric_type: gauge
  monitor: collectd/load
  title: load.longterm

load.midterm:
  brief: Average CPU load for the whole system over the last five minutes
  custom: false
  description: Average CPU load for the whole system over the last five minutes
  metric_type: gauge
  monitor: collectd/load
  title: load.midterm

load.shortterm:
  brief: Average CPU load for the whole system over the last one minute
  custom: false
  description: Average CPU load for the whole system over the last one minute
  metric_type: gauge
  monitor: collectd/load
  title: load.shortterm


memory.buffered:
  brief: Bytes of memory used for buffering I/O
  custom: false
  description: Bytes of memory used for buffering I/O
  metric_type: gauge
  monitor: collectd/memory
  title: memory.buffered

memory.cached:
  brief: Bytes of memory used for disk caching
  custom: false
  description: Bytes of memory used for disk caching
  metric_type: gauge
  monitor: collectd/memory
  title: memory.cached

memory.free:
  brief: Bytes of memory available for use
  custom: false
  description: Bytes of memory available for use
  metric_type: gauge
  monitor: collectd/memory
  title: memory.free

memory.slab_recl:
  brief: Bytes of memory, used for SLAB-allocation of kernel objects, that can be
    reclaimed
  custom: false
  description: Bytes of memory, used for SLAB-allocation of kernel objects, that can
    be reclaimed.
  metric_type: gauge
  monitor: collectd/memory
  title: memory.slab_recl

memory.slab_unrecl:
  brief: Bytes of memory, used for SLAB-allocation of kernel objects, that can't be
    reclaimed
  custom: false
  description: Bytes of memory, used for SLAB-allocation of kernel objects, that can't
    be reclaimed
  metric_type: gauge
  monitor: collectd/memory
  title: memory.slab_unrecl

memory.used:
  brief: Bytes of memory in use by the system
  custom: false
  description: Bytes of memory in use by the system.
  metric_type: gauge
  monitor: collectd/memory
  title: memory.used


cache_ratio.opcache_statistics-opcache_hit_rate:
  brief: Hits / (Hits + Miss)
  custom: false
  description: Hits / (Hits + Miss).
  metric_type: gauge
  monitor: collectd/opcache
  title: cache_ratio.opcache_statistics-opcache_hit_rate

cache_result.opcache_statistics-hits:
  brief: Number of successful reads
  custom: false
  description: Number of successful reads.
  metric_type: cumulative
  monitor: collectd/opcache
  title: cache_result.opcache_statistics-hits

cache_result.opcache_statistics-misses:
  brief: Number of unsuccessful reads
  custom: false
  description: Number of unsuccessful reads.
  metric_type: cumulative
  monitor: collectd/opcache
  title: cache_result.opcache_statistics-misses

cache_size.memory_usage-free_memory:
  brief: Amount of memory free
  custom: false
  description: Amount of memory free.
  metric_type: gauge
  monitor: collectd/opcache
  title: cache_size.memory_usage-free_memory

cache_size.memory_usage-used_memory:
  brief: Amount of memory used
  custom: false
  description: Amount of memory used.
  metric_type: gauge
  monitor: collectd/opcache
  title: cache_size.memory_usage-used_memory

files.opcache_statistics-max_cached_keys:
  brief: Maximum number of keys
  custom: false
  description: Maximum number of keys.
  metric_type: gauge
  monitor: collectd/opcache
  title: files.opcache_statistics-max_cached_keys

files.opcache_statistics-num_cached_keys:
  brief: Number of keys in cache
  custom: false
  description: Number of keys in cache.
  metric_type: gauge
  monitor: collectd/opcache
  title: files.opcache_statistics-num_cached_keys

files.opcache_statistics-num_cached_scripts:
  brief: Number of cached scripts
  custom: false
  description: Number of cached scripts.
  metric_type: gauge
  monitor: collectd/opcache
  title: files.opcache_statistics-num_cached_scripts


phpfpm_processes.active:
  brief: Total number of active processes
  custom: false
  description: Total number of active processes.
  metric_type: gauge
  monitor: collectd/php-fpm
  title: phpfpm_processes.active

phpfpm_processes.idle:
  brief: Total number of idle processes
  custom: false
  description: Total number of idle processes.
  metric_type: gauge
  monitor: collectd/php-fpm
  title: phpfpm_processes.idle

phpfpm_processes.max_reached:
  brief: The number of times the process limit has been reached
  custom: false
  description: The number of times the process limit has been reached.
  metric_type: counter
  monitor: collectd/php-fpm
  title: phpfpm_processes.max_reached

phpfpm_requests.accepted:
  brief: Total number of accepted requests
  custom: false
  description: Total number of accepted requests.
  metric_type: counter
  monitor: collectd/php-fpm
  title: phpfpm_requests.accepted

phpfpm_requests.slow:
  brief: Total number of slow requests
  custom: false
  description: Total number of slow requests.
  metric_type: counter
  monitor: collectd/php-fpm
  title: phpfpm_requests.slow


pg_blks.heap_hit:
  brief: Number of buffer hits
  custom: false
  description: Number of buffer hits
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.heap_hit

pg_blks.heap_read:
  brief: Number of disk blocks read
  custom: false
  description: Number of disk blocks read
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.heap_read

pg_blks.idx_hit:
  brief: Number of index buffer hits
  custom: false
  description: Number of index buffer hits
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.idx_hit

pg_blks.idx_read:
  brief: Number of index blocks read
  custom: false
  description: Number of index blocks read
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.idx_read

pg_blks.tidx_hit:
  brief: Number of TOAST index buffer hits
  custom: true
  description: Number of TOAST index buffer hits
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.tidx_hit

pg_blks.tidx_read:
  brief: Number of TOAST index blocks read
  custom: true
  description: Number of TOAST index blocks read
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.tidx_read

pg_blks.toast_hit:
  brief: Number of TOAST buffer hits
  custom: true
  description: Number of TOAST buffer hits
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.toast_hit

pg_blks.toast_read:
  brief: Number of disk blocks read
  custom: true
  description: Number of disk blocks read
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_blks.toast_read

pg_db_size:
  brief: Size of the database on disk, in bytes
  custom: false
  description: Size of the database on disk, in bytes
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_db_size

pg_n_tup_c.del:
  brief: Number of delete operations
  custom: false
  description: Number of delete operations
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_c.del

pg_n_tup_c.hot_upd:
  brief: Number of update operations not requiring index update
  custom: true
  description: Number of update operations not requiring index update
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_c.hot_upd

pg_n_tup_c.ins:
  brief: Number of insert operations
  custom: false
  description: Number of insert operations
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_c.ins

pg_n_tup_c.upd:
  brief: Number of update operations
  custom: false
  description: Number of update operations
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_c.upd

pg_n_tup_g.dead:
  brief: Number of dead rows in the database
  custom: true
  description: Number of dead rows in the database
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_g.dead

pg_n_tup_g.live:
  brief: Number of live rows in the database
  custom: false
  description: Number of live rows in the database
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_n_tup_g.live

pg_numbackends:
  brief: Number of server processes
  custom: false
  description: Number of server processes
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_numbackends

pg_scan.idx:
  brief: Number of index scans
  custom: false
  description: Number of index scans
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_scan.idx

pg_scan.idx_tup_fetch:
  brief: Number of rows read from index scans
  custom: false
  description: Number of rows read from index scans
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_scan.idx_tup_fetch

pg_scan.seq:
  brief: Number of sequential scans
  custom: false
  description: Number of sequential scans
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_scan.seq

pg_scan.seq_tup_read:
  brief: Number of rows read from sequential scans
  custom: false
  description: Number of rows read from sequential scans
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_scan.seq_tup_read

pg_xact.commit:
  brief: Number of commits
  custom: false
  description: Number of commits
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_xact.commit

pg_xact.num_deadlocks:
  brief: Number of deadlocks detected by the database
  custom: true
  description: Number of deadlocks detected by the database
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_xact.num_deadlocks

pg_xact.rollback:
  brief: Number of rollbacks
  custom: false
  description: Number of rollbacks
  metric_type: gauge
  monitor: collectd/postgresql
  title: pg_xact.rollback


disk_octets.read:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: disk_octets.read

disk_octets.write:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: disk_octets.write

fork_rate:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: fork_rate

io_octets.rx:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: io_octets.rx

io_octets.tx:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: io_octets.tx

io_ops.read:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: io_ops.read

io_ops.write:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: io_ops.write

ps_code:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_code

ps_count.processes:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_count.processes

ps_count.threads:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_count.threads

ps_cputime.syst:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: ps_cputime.syst

ps_cputime.user:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: ps_cputime.user

ps_data:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_data

ps_pagefaults.majflt:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: ps_pagefaults.majflt

ps_pagefaults.minflt:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: collectd/processes
  title: ps_pagefaults.minflt

ps_rss:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_rss

ps_stacksize:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_stacksize

ps_state.blocked:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.blocked

ps_state.paging:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.paging

ps_state.running:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.running

ps_state.sleeping:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.sleeping

ps_state.stopped:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.stopped

ps_state.zombies:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_state.zombies

ps_vm:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: collectd/processes
  title: ps_vm


protocol_counter.ActiveOpens:
  brief: The number of times TCP connections transitioned from the CLOSED state to
    the SYN-SENT state
  custom: false
  description: The number of times TCP connections transitioned from the CLOSED state
    to the SYN-SENT state.
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.ActiveOpens

protocol_counter.CurrEstab:
  brief: The number of TCP connections currently in either ESTABLISHED or CLOSE-WAIT
    state
  custom: true
  description: The number of TCP connections currently in either ESTABLISHED or CLOSE-WAIT
    state.
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.CurrEstab

protocol_counter.DelayedACKs:
  brief: The number of acknowledgements delayed by TCP Delayed Acknowledgement
  custom: true
  description: The number of acknowledgements delayed by TCP Delayed Acknowledgement
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.DelayedACKs

protocol_counter.InDestUnreachs:
  brief: The number of ICMP Destination Unreachable messages received
  custom: true
  description: The number of ICMP Destination Unreachable messages received
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.InDestUnreachs

protocol_counter.OutSegs:
  brief: The total number of segments that have been sent, including those on current
    connections but excluding those containing only retransmitted octets
  custom: true
  description: The total number of segments that have been sent, including those on
    current connections but excluding those containing only retransmitted octets.
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.OutSegs

protocol_counter.PassiveOpens:
  brief: The number of times that a server opened a connection, due to receiving a
    TCP SYN packet
  custom: true
  description: The number of times that a server opened a connection, due to receiving
    a TCP SYN packet.
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.PassiveOpens

protocol_counter.RetransSegs:
  brief: The total number of segments retransmitted
  custom: true
  description: The total number of segments retransmitted
  metric_type: cumulative
  monitor: collectd/protocols
  title: protocol_counter.RetransSegs


cpu.utilization:
  brief: Percent of CPU used on this host
  custom: false
  description: Percent of CPU used on this host.
  metric_type: gauge
  monitor: collectd/signalfx-metadata
  title: cpu.utilization

cpu.utilization_per_core:
  brief: Percent of CPU used on each core
  custom: true
  description: Percent of CPU used on each core. `perCoreCPUUtil` config must be set
    to true.
  metric_type: gauge
  monitor: collectd/signalfx-metadata
  title: cpu.utilization_per_core

disk.summary_utilization:
  brief: Percent of disk space utilized on all volumes on this host
  custom: false
  description: Percent of disk space utilized on all volumes on this host.
  metric_type: gauge
  monitor: collectd/signalfx-metadata
  title: disk.summary_utilization

disk.utilization:
  brief: Percent of disk used on this volume
  custom: false
  description: Percent of disk used on this volume.
  metric_type: gauge
  monitor: collectd/signalfx-metadata
  title: disk.utilization

disk_ops.total:
  brief: Total number of disk read and write operations on this host
  custom: false
  description: Total number of disk read and write operations on this host.
  metric_type: cumulative
  monitor: collectd/signalfx-metadata
  title: disk_ops.total

memory.utilization:
  brief: Percent of memory in use on this host
  custom: false
  description: Percent of memory in use on this host.
  metric_type: gauge
  monitor: collectd/signalfx-metadata
  title: memory.utilization

network.total:
  brief: Total amount of inbound and outbound network traffic on this host, in bytes
  custom: false
  description: Total amount of inbound and outbound network traffic on this host,
    in bytes.
  metric_type: cumulative
  monitor: collectd/signalfx-metadata
  title: network.total


gauge.active_state.activating:
  brief: Indicates that the systemd unit/service has previously been inactive but
    is currently in the process of entering an active state
  custom: true
  description: Indicates that the systemd unit/service has previously been inactive
    but is currently in the process of entering an active state
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.activating

gauge.active_state.active:
  brief: Indicates that the systemd unit/service is active
  custom: true
  description: Indicates that the systemd unit/service is active
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.active

gauge.active_state.deactivating:
  brief: Indicates that the systemd unit/service is currently in the process of deactivation
  custom: true
  description: Indicates that the systemd unit/service is currently in the process
    of deactivation
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.deactivating

gauge.active_state.failed:
  brief: Indicates that the systemd unit/service is inactive the previous run was
    not successful
  custom: true
  description: Indicates that the systemd unit/service is inactive the previous run
    was not successful
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.failed

gauge.active_state.inactive:
  brief: Indicates that the systemd unit/service is inactive and the previous run
    was successful or no previous run has taken place yet
  custom: true
  description: Indicates that the systemd unit/service is inactive and the previous
    run was successful or no previous run has taken place yet
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.inactive

gauge.active_state.reloading:
  brief: Indicates that the systemd unit/service is active and currently reloading
    its configuration
  custom: true
  description: Indicates that the systemd unit/service is active and currently reloading
    its configuration
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.active_state.reloading

gauge.load_state.error:
  brief: Indicates that the systemd unit/service configuration failed to load
  custom: true
  description: Indicates that the systemd unit/service configuration failed to load
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.load_state.error

gauge.load_state.loaded:
  brief: Indicates that the systemd unit/service configuration was loaded and parsed
    successfully
  custom: true
  description: Indicates that the systemd unit/service configuration was loaded and
    parsed successfully
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.load_state.loaded

gauge.load_state.masked:
  brief: Indicates that the systemd unit/service is currently masked out (i.e
  custom: true
  description: Indicates that the systemd unit/service is currently masked out (i.e.
    symlinked to /dev/null etc)
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.load_state.masked

gauge.load_state.not-found:
  brief: Indicates that the systemd unit/service configuration was not found
  custom: true
  description: Indicates that the systemd unit/service configuration was not found
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.load_state.not-found

gauge.substate.dead:
  brief: Indicates that the systemd unit/service died
  custom: true
  description: Indicates that the systemd unit/service died
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.substate.dead

gauge.substate.exited:
  brief: Indicates that the systemd unit/service exited
  custom: true
  description: Indicates that the systemd unit/service exited
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.substate.exited

gauge.substate.failed:
  brief: Indicates that the systemd unit/service failed
  custom: true
  description: Indicates that the systemd unit/service failed
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.substate.failed

gauge.substate.running:
  brief: Indicates that the systemd unit/service is running
  custom: false
  description: Indicates that the systemd unit/service is running
  metric_type: gauge
  monitor: collectd/systemd
  title: gauge.substate.running


counter.tomcat.GlobalRequestProcessor.bytesReceived:
  brief: Bytes per second received by all request processors
  custom: false
  description: Bytes per second received by all request processors.
  metric_type: cumulative
  monitor: collectd/tomcat
  title: counter.tomcat.GlobalRequestProcessor.bytesReceived

counter.tomcat.GlobalRequestProcessor.bytesSent:
  brief: Bytes per second sent by all the request processors
  custom: false
  description: Bytes per second sent by all the request processors.
  metric_type: cumulative
  monitor: collectd/tomcat
  title: counter.tomcat.GlobalRequestProcessor.bytesSent

counter.tomcat.GlobalRequestProcessor.errorCount:
  brief: The number of errors generated by server requests
  custom: false
  description: The number of errors generated by server requests.
  metric_type: cumulative
  monitor: collectd/tomcat
  title: counter.tomcat.GlobalRequestProcessor.errorCount

counter.tomcat.GlobalRequestProcessor.processingTime:
  brief: The longest time it takes to process a single incoming request, in milliseconds
  custom: false
  description: The longest time it takes to process a single incoming request, in
    milliseconds.
  metric_type: cumulative
  monitor: collectd/tomcat
  title: counter.tomcat.GlobalRequestProcessor.processingTime

counter.tomcat.GlobalRequestProcessor.requestCount:
  brief: The number of requests across all connectors
  custom: false
  description: The number of requests across all connectors.
  metric_type: cumulative
  monitor: collectd/tomcat
  title: counter.tomcat.GlobalRequestProcessor.requestCount

gauge.jvm.threads.count:
  brief: Number of JVM threads
  custom: false
  description: Number of JVM threads
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.jvm.threads.count

gauge.loaded_classes:
  brief: Number of classes loaded in the JVM
  custom: false
  description: Number of classes loaded in the JVM
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.loaded_classes

gauge.tomcat.GlobalRequestProcessor.maxTime:
  brief: The total time to process all incoming requests, in milliseconds
  custom: false
  description: The total time to process all incoming requests, in milliseconds.
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.tomcat.GlobalRequestProcessor.maxTime

gauge.tomcat.ThreadPool.currentThreadsBusy:
  brief: The number of threads currently processing requests
  custom: false
  description: The number of threads currently processing requests.
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.tomcat.ThreadPool.currentThreadsBusy

gauge.tomcat.ThreadPool.maxThreads:
  brief: "The maximum number of threads to be created by the \nconnector and made\
    \ available for requests"
  custom: false
  description: "The maximum number of threads to be created by the \nconnector and\
    \ made available for requests."
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.tomcat.ThreadPool.maxThreads

gauge.tomcat.UtilityExecutor.activeCount:
  brief: The number of active threads in the thread pool
  custom: true
  description: The number of active threads in the thread pool.
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.tomcat.UtilityExecutor.activeCount

gauge.tomcat.UtilityExecutor.maximumPoolSize:
  brief: The maximum number of threads available in the thread pool
  custom: true
  description: The maximum number of threads available in the thread pool.
  metric_type: gauge
  monitor: collectd/tomcat
  title: gauge.tomcat.UtilityExecutor.maximumPoolSize

invocations:
  brief: Total number of garbage collection events
  custom: false
  description: Total number of garbage collection events
  metric_type: cumulative
  monitor: collectd/tomcat
  title: invocations

jmx_memory.committed:
  brief: Amount of memory guaranteed to be available in bytes
  custom: false
  description: Amount of memory guaranteed to be available in bytes
  metric_type: gauge
  monitor: collectd/tomcat
  title: jmx_memory.committed

jmx_memory.init:
  brief: Amount of initial memory at startup in bytes
  custom: false
  description: Amount of initial memory at startup in bytes
  metric_type: gauge
  monitor: collectd/tomcat
  title: jmx_memory.init

jmx_memory.max:
  brief: Maximum amount of memory that can be used in bytes
  custom: false
  description: Maximum amount of memory that can be used in bytes
  metric_type: gauge
  monitor: collectd/tomcat
  title: jmx_memory.max

jmx_memory.used:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: collectd/tomcat
  title: jmx_memory.used

total_time_in_ms.collection_time:
  brief: Amount of time spent garbage collecting in milliseconds
  custom: false
  description: Amount of time spent garbage collecting in milliseconds
  metric_type: cumulative
  monitor: collectd/tomcat
  title: total_time_in_ms.collection_time


uptime:
  brief: Seconds since system boot
  custom: false
  description: Seconds since system boot
  metric_type: gauge
  monitor: collectd/uptime
  title: uptime


vmpage_faults.majflt:
  brief: Number of major page faults on the system
  custom: true
  description: Number of major page faults on the system
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_faults.majflt

vmpage_faults.minflt:
  brief: Number of minor page faults on the system
  custom: true
  description: Number of minor page faults on the system
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_faults.minflt

vmpage_io.memory.in:
  brief: Page Ins for Memory
  custom: true
  description: Page Ins for Memory
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_io.memory.in

vmpage_io.memory.out:
  brief: Page Outs for Memory
  custom: true
  description: Page Outs for Memory
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_io.memory.out

vmpage_io.swap.in:
  brief: Page Ins for Swap
  custom: false
  description: Page Ins for Swap
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_io.swap.in

vmpage_io.swap.out:
  brief: Page Outs for Swap
  custom: false
  description: Page Outs for Swap
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_io.swap.out

vmpage_number.free_pages:
  brief: Number of free memory pages
  custom: true
  description: Number of free memory pages
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_number.free_pages

vmpage_number.mapped:
  brief: Number of mapped pages
  custom: true
  description: Number of mapped pages
  metric_type: cumulative
  monitor: collectd/vmem
  title: vmpage_number.mapped

vmpage_number.shmem_pmdmapped:
  brief: The amount of shared (shmem/tmpfs) memory backed by huge pages
  custom: true
  description: The amount of shared (shmem/tmpfs) memory backed by huge pages
  metric_type: gauge
  monitor: collectd/vmem
  title: vmpage_number.shmem_pmdmapped


coredns_build_info:
  brief: A metric with a constant '1' value labeled by version, revision, and goversion
    from which CoreDNS was built
  custom: true
  description: A metric with a constant '1' value labeled by version, revision, and
    goversion from which CoreDNS was built.
  metric_type: gauge
  monitor: coredns
  title: coredns_build_info

coredns_cache_hits_total:
  brief: The count of cache misses
  custom: true
  description: The count of cache misses.
  metric_type: cumulative
  monitor: coredns
  title: coredns_cache_hits_total

coredns_cache_misses_total:
  brief: The count of cache misses
  custom: true
  description: The count of cache misses.
  metric_type: cumulative
  monitor: coredns
  title: coredns_cache_misses_total

coredns_cache_size:
  brief: Size of DNS cache
  custom: false
  description: Size of DNS cache.
  metric_type: cumulative
  monitor: coredns
  title: coredns_cache_size

coredns_dns_request_count_total:
  brief: Counter of DNS requests made per zone, protocol and family
  custom: false
  description: Counter of DNS requests made per zone, protocol and family.
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_count_total

coredns_dns_request_duration_seconds:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (sum)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_duration_seconds

coredns_dns_request_duration_seconds_bucket:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (bucket)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_duration_seconds_bucket

coredns_dns_request_duration_seconds_count:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (count)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_duration_seconds_count

coredns_dns_request_size_bytes:
  brief: Size of the EDNS0 UDP buffer in bytes (64K for TCP)
  custom: false
  description: Size of the EDNS0 UDP buffer in bytes (64K for TCP). (sum)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_size_bytes

coredns_dns_request_size_bytes_bucket:
  brief: Size of the EDNS0 UDP buffer in bytes (64K for TCP)
  custom: true
  description: Size of the EDNS0 UDP buffer in bytes (64K for TCP). (bucket)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_size_bytes_bucket

coredns_dns_request_size_bytes_count:
  brief: Size of the EDNS0 UDP buffer in bytes (64K for TCP)
  custom: true
  description: Size of the EDNS0 UDP buffer in bytes (64K for TCP). (count)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_size_bytes_count

coredns_dns_request_type_count_total:
  brief: Counter of DNS requests per type, per zone
  custom: false
  description: Counter of DNS requests per type, per zone.
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_request_type_count_total

coredns_dns_response_rcode_count_total:
  brief: Counter of response status codes
  custom: false
  description: Counter of response status codes.
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_response_rcode_count_total

coredns_dns_response_size_bytes:
  brief: Size of the returned response in bytes
  custom: true
  description: Size of the returned response in bytes. (sum)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_response_size_bytes

coredns_dns_response_size_bytes_bucket:
  brief: Size of the returned response in bytes
  custom: true
  description: Size of the returned response in bytes. (bucket)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_response_size_bytes_bucket

coredns_dns_response_size_bytes_count:
  brief: Size of the returned response in bytes
  custom: true
  description: Size of the returned response in bytes. (count)
  metric_type: cumulative
  monitor: coredns
  title: coredns_dns_response_size_bytes_count

coredns_health_request_duration_seconds:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (sum)
  metric_type: cumulative
  monitor: coredns
  title: coredns_health_request_duration_seconds

coredns_health_request_duration_seconds_bucket:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (bucket)
  metric_type: cumulative
  monitor: coredns
  title: coredns_health_request_duration_seconds_bucket

coredns_health_request_duration_seconds_count:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (count)
  metric_type: cumulative
  monitor: coredns
  title: coredns_health_request_duration_seconds_count

coredns_panic_count_total:
  brief: A metrics that counts the number of panics
  custom: true
  description: A metrics that counts the number of panics.
  metric_type: cumulative
  monitor: coredns
  title: coredns_panic_count_total

coredns_proxy_request_count_total:
  brief: Counter of requests made per protocol, proxy protocol, family and upstream
  custom: true
  description: Counter of requests made per protocol, proxy protocol, family and upstream.
  metric_type: cumulative
  monitor: coredns
  title: coredns_proxy_request_count_total

coredns_proxy_request_duration_seconds:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (sum)
  metric_type: cumulative
  monitor: coredns
  title: coredns_proxy_request_duration_seconds

coredns_proxy_request_duration_seconds_bucket:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (bucket)
  metric_type: cumulative
  monitor: coredns
  title: coredns_proxy_request_duration_seconds_bucket

coredns_proxy_request_duration_seconds_count:
  brief: Histogram of the time (in seconds) each request took
  custom: true
  description: Histogram of the time (in seconds) each request took. (count)
  metric_type: cumulative
  monitor: coredns
  title: coredns_proxy_request_duration_seconds_count

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: coredns
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: coredns
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_quantile:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (quantized)
  metric_type: gauge
  monitor: coredns
  title: go_gc_duration_seconds_quantile

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: coredns
  title: go_goroutines

go_memstats_alloc_bytes:
  brief: Number of bytes allocated and still in use
  custom: true
  description: Number of bytes allocated and still in use.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: coredns
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: coredns
  title: go_memstats_frees_total

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes_total:
  brief: Total number of heap bytes released to OS
  custom: true
  description: Total number of heap bytes released to OS.
  metric_type: cumulative
  monitor: coredns
  title: go_memstats_heap_released_bytes_total

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: coredns
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: coredns
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained by system
  custom: true
  description: Number of bytes obtained by system. Sum of all system allocations.
  metric_type: gauge
  monitor: coredns
  title: go_memstats_sys_bytes

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds.
  metric_type: cumulative
  monitor: coredns
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: coredns
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: coredns
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: coredns
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: coredns
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: coredns
  title: process_virtual_memory_bytes


cpu.idle:
  brief: CPU time spent not in any other state
  custom: false
  description: CPU time spent not in any other state. In order to get a percentage
    this value must be compared against the sum of all CPU states.
  metric_type: cumulative
  monitor: cpu
  title: cpu.idle

cpu.interrupt:
  brief: CPU time spent while servicing hardware interrupts
  custom: true
  description: CPU time spent while servicing hardware interrupts. A hardware interrupt
    happens at the physical layer. When this occurs, the CPU will stop whatever else
    it is doing and service the interrupt. This metric measures how many jiffies were
    spent handling these interrupts. In order to get a percentage this value must
    be compared against the sum of all CPU states. A sustained high value for this
    metric may be caused by faulty hardware such as a broken peripheral.
  metric_type: cumulative
  monitor: cpu
  title: cpu.interrupt

cpu.nice:
  brief: CPU time spent in userspace running 'nice'-ed processes
  custom: true
  description: 'CPU time spent in userspace running ''nice''-ed processes. In order
    to get a percentage this value must be compared against the sum of all CPU states.
    A sustained high value for this metric may be caused by: 1) The server not having
    enough CPU capacity for a process, 2) A programming error which causes a process
    to use an unexpected amount of CPU'
  metric_type: cumulative
  monitor: cpu
  title: cpu.nice

cpu.num_processors:
  brief: The number of logical processors on the host
  custom: false
  description: The number of logical processors on the host.
  metric_type: gauge
  monitor: cpu
  title: cpu.num_processors

cpu.softirq:
  brief: CPU time spent while servicing software interrupts
  custom: true
  description: CPU time spent while servicing software interrupts. Unlike a hardware
    interrupt, a software interrupt happens at the sofware layer. Usually it is a
    userspace program requesting a service of the kernel. This metric measures how
    many jiffies were spent by the CPU handling these interrupts. In order to get
    a percentage this value must be compared against the sum of all CPU states. A
    sustained high value for this metric may be caused by a programming error which
    causes a process to unexpectedly request too many services from the kernel.
  metric_type: cumulative
  monitor: cpu
  title: cpu.softirq

cpu.steal:
  brief: CPU time spent waiting for a hypervisor to service requests from other virtual
    machines
  custom: true
  description: 'CPU time spent waiting for a hypervisor to service requests from other
    virtual machines. This metric is only present on virtual machines. This metric
    records how much time this virtual machine had to wait to have the hypervisor
    kernel service a request. In order to get a percentage this value must be compared
    against the sum of all CPU states. A sustained high value for this metric may
    be caused by: 1) Another VM on the same hypervisor using too many resources, or
    2) An underpowered hypervisor'
  metric_type: cumulative
  monitor: cpu
  title: cpu.steal

cpu.system:
  brief: CPU time spent running in the kernel
  custom: true
  description: 'CPU time spent running in the kernel. This value reflects how often
    processes are calling into the kernel for services (e.g to log to the console).
    In order to get a percentage this value must be compared against the sum of all
    CPU states. A sustained high value for this metric may be caused by: 1) A process
    that needs to be re-written to use kernel resources more efficiently, or 2) A
    userspace driver that is broken'
  metric_type: cumulative
  monitor: cpu
  title: cpu.system

cpu.user:
  brief: CPU time spent running in userspace
  custom: true
  description: 'CPU time spent running in userspace. In order to get a percentage
    this value must be compared against the sum of all CPU states. If this value is
    high: 1) A process requires more CPU to run than is available on the server, or
    2) There is an application programming error which is causing the CPU to be used
    unexpectedly.'
  metric_type: cumulative
  monitor: cpu
  title: cpu.user

cpu.utilization:
  brief: Percent of CPU used on this host
  custom: false
  description: Percent of CPU used on this host.
  metric_type: gauge
  monitor: cpu
  title: cpu.utilization

cpu.utilization_per_core:
  brief: Percent of CPU used on each core
  custom: true
  description: Percent of CPU used on each core
  metric_type: gauge
  monitor: cpu
  title: cpu.utilization_per_core

cpu.wait:
  brief: Amount of total CPU time spent idle while waiting for an I/O operation to
    complete
  custom: true
  description: 'Amount of total CPU time spent idle while waiting for an I/O operation
    to complete. In order to get a percentage this value must be compared against
    the sum of all CPU states. A high value for a sustained period may be caused by:
    1) A slow hardware device that is taking too long to service requests, or 2) Too
    many requests being sent to an I/O device'
  metric_type: cumulative
  monitor: cpu
  title: cpu.wait


disk_merged.read:
  brief: (Linux Only) The number of disk reads merged into single physical disk access
    operations
  custom: true
  description: (Linux Only) The number of disk reads merged into single physical disk
    access operations.
  metric_type: cumulative
  monitor: disk-io
  title: disk_merged.read

disk_merged.write:
  brief: (Linux Only) The number of disk writes merged into single physical disk access
    operations
  custom: true
  description: (Linux Only) The number of disk writes merged into single physical
    disk access operations.
  metric_type: cumulative
  monitor: disk-io
  title: disk_merged.write

disk_octets.avg_read:
  brief: (Windows Only) The average number of octets (bytes) read
  custom: true
  description: (Windows Only) The average number of octets (bytes) read.
  metric_type: gauge
  monitor: disk-io
  title: disk_octets.avg_read

disk_octets.avg_write:
  brief: (Windows Only) The average number of octets (bytes) written
  custom: true
  description: (Windows Only) The average number of octets (bytes) written.
  metric_type: gauge
  monitor: disk-io
  title: disk_octets.avg_write

disk_octets.read:
  brief: (Linux Only) The number of bytes (octets) read from a disk
  custom: true
  description: (Linux Only) The number of bytes (octets) read from a disk.
  metric_type: cumulative
  monitor: disk-io
  title: disk_octets.read

disk_octets.write:
  brief: (Linux Only) The number of bytes (octets) written to a disk
  custom: true
  description: (Linux Only) The number of bytes (octets) written to a disk.
  metric_type: cumulative
  monitor: disk-io
  title: disk_octets.write

disk_ops.avg_read:
  brief: (Windows Only) The average disk read queue length
  custom: false
  description: (Windows Only) The average disk read queue length.
  metric_type: gauge
  monitor: disk-io
  title: disk_ops.avg_read

disk_ops.avg_write:
  brief: (Windows Only) The average disk write queue length
  custom: false
  description: (Windows Only) The average disk write queue length.
  metric_type: gauge
  monitor: disk-io
  title: disk_ops.avg_write

disk_ops.pending:
  brief: Number of pending operations
  custom: true
  description: Number of pending operations
  metric_type: gauge
  monitor: disk-io
  title: disk_ops.pending

disk_ops.read:
  brief: (Linux Only) The number of disk read operations
  custom: false
  description: (Linux Only) The number of disk read operations.
  metric_type: cumulative
  monitor: disk-io
  title: disk_ops.read

disk_ops.total:
  brief: (Linux Only) The number of both read and write disk operations across all
    disks in the last reporting interval
  custom: false
  description: (Linux Only) The number of both read and write disk operations across
    all disks in the last reporting interval.
  metric_type: gauge
  monitor: disk-io
  title: disk_ops.total

disk_ops.write:
  brief: (Linux Only) The number of disk write operations
  custom: false
  description: (Linux Only) The number of disk write operations.
  metric_type: cumulative
  monitor: disk-io
  title: disk_ops.write

disk_time.avg_read:
  brief: (Windows Only) The average time spent reading from the disk
  custom: true
  description: (Windows Only) The average time spent reading from the disk.
  metric_type: gauge
  monitor: disk-io
  title: disk_time.avg_read

disk_time.avg_write:
  brief: (Windows Only) The average time spent writing to the disk
  custom: true
  description: (Windows Only) The average time spent writing to the disk
  metric_type: gauge
  monitor: disk-io
  title: disk_time.avg_write

disk_time.read:
  brief: (Linux Only) The average amount of time it took to do a read operation
  custom: true
  description: (Linux Only) The average amount of time it took to do a read operation.
  metric_type: cumulative
  monitor: disk-io
  title: disk_time.read

disk_time.write:
  brief: (Linux Only) The average amount of time it took to do a write operation
  custom: true
  description: (Linux Only) The average amount of time it took to do a write operation.
  metric_type: cumulative
  monitor: disk-io
  title: disk_time.write


net_clr_exceptions.num_exceps_thrown_sec:
  brief: The number of exceptions thrown by .NET applications
  custom: true
  description: The number of exceptions thrown by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_exceptions.num_exceps_thrown_sec

net_clr_locksandthreads.contention_rate_sec:
  brief: The rate of thread of thread contention per second for .NET applications
  custom: true
  description: The rate of thread of thread contention per second for .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_locksandthreads.contention_rate_sec

net_clr_locksandthreads.current_queue_length:
  brief: The current thread queue length for .NET applications
  custom: true
  description: The current thread queue length for .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_locksandthreads.current_queue_length

net_clr_locksandthreads.num_of_current_logical_threads:
  brief: The number of current logical threads for .NET applications
  custom: true
  description: The number of current logical threads for .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_locksandthreads.num_of_current_logical_threads

net_clr_locksandthreads.num_of_current_physical_threads:
  brief: The number of current physical threads for .NET applications
  custom: true
  description: The number of current physical threads for .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_locksandthreads.num_of_current_physical_threads

net_clr_memory.num_bytes_in_all_heaps:
  brief: The number of bytes in all heaps for .NET applications
  custom: true
  description: The number of bytes in all heaps for .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.num_bytes_in_all_heaps

net_clr_memory.num_gc_handles:
  brief: The number of garbage collection handles held by .NET applications
  custom: true
  description: The number of garbage collection handles held by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.num_gc_handles

net_clr_memory.num_of_pinned_objects:
  brief: The number of objects pinned in memory by .NET applications
  custom: true
  description: The number of objects pinned in memory by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.num_of_pinned_objects

net_clr_memory.num_total_committed_bytes:
  brief: The total number of bytes committed to memory by .NET applications
  custom: true
  description: The total number of bytes committed to memory by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.num_total_committed_bytes

net_clr_memory.num_total_reserved_bytes:
  brief: The total number of bytes reserved by .NET applications
  custom: true
  description: The total number of bytes reserved by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.num_total_reserved_bytes

net_clr_memory.pct_time_in_gc:
  brief: The percentage of time spent garbage collecting by .NET applications
  custom: true
  description: The percentage of time spent garbage collecting by .NET applications.
  metric_type: gauge
  monitor: dotnet
  title: net_clr_memory.pct_time_in_gc


blkio.io_service_bytes_recursive.async:
  brief: Volume, in bytes, of asynchronous block I/O
  custom: true
  description: Volume, in bytes, of asynchronous block I/O
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_service_bytes_recursive.async

blkio.io_service_bytes_recursive.read:
  brief: Volume, in bytes, of reads from block devices
  custom: false
  description: Volume, in bytes, of reads from block devices
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_service_bytes_recursive.read

blkio.io_service_bytes_recursive.sync:
  brief: Volume, in bytes, of synchronous block I/O
  custom: true
  description: Volume, in bytes, of synchronous block I/O
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_service_bytes_recursive.sync

blkio.io_service_bytes_recursive.total:
  brief: Total volume, in bytes, of all block I/O
  custom: true
  description: Total volume, in bytes, of all block I/O
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_service_bytes_recursive.total

blkio.io_service_bytes_recursive.write:
  brief: Volume, in bytes, of writes to block devices
  custom: false
  description: Volume, in bytes, of writes to block devices
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_service_bytes_recursive.write

blkio.io_serviced_recursive.async:
  brief: Number of asynchronous block I/O requests
  custom: true
  description: Number of asynchronous block I/O requests
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_serviced_recursive.async

blkio.io_serviced_recursive.read:
  brief: Number of reads requests from block devices
  custom: true
  description: Number of reads requests from block devices
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_serviced_recursive.read

blkio.io_serviced_recursive.sync:
  brief: Number of synchronous block I/O requests
  custom: true
  description: Number of synchronous block I/O requests
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_serviced_recursive.sync

blkio.io_serviced_recursive.total:
  brief: Total number of block I/O requests
  custom: true
  description: Total number of block I/O requests
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_serviced_recursive.total

blkio.io_serviced_recursive.write:
  brief: Number of write requests to block devices
  custom: true
  description: Number of write requests to block devices
  metric_type: cumulative
  monitor: ecs-metadata
  title: blkio.io_serviced_recursive.write

cpu.limit:
  brief: CPU usage limit of the container, in ECS vCPU units
  custom: true
  description: CPU usage limit of the container, in ECS vCPU units
  metric_type: gauge
  monitor: ecs-metadata
  title: cpu.limit

cpu.percent:
  brief: Percentage of host CPU resources used by the container
  custom: true
  description: Percentage of host CPU resources used by the container
  metric_type: gauge
  monitor: ecs-metadata
  title: cpu.percent

cpu.percpu.usage:
  brief: Jiffies of CPU time spent by the container, per CPU core
  custom: true
  description: Jiffies of CPU time spent by the container, per CPU core
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.percpu.usage

cpu.throttling_data.periods:
  brief: Number of periods
  custom: true
  description: Number of periods
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.throttling_data.periods

cpu.throttling_data.throttled_periods:
  brief: Number of periods throttled
  custom: true
  description: Number of periods throttled
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.throttling_data.throttled_periods

cpu.throttling_data.throttled_time:
  brief: Throttling time in nano seconds
  custom: true
  description: Throttling time in nano seconds
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.throttling_data.throttled_time

cpu.usage.kernelmode:
  brief: Jiffies of CPU time spent in kernel mode by the container
  custom: true
  description: Jiffies of CPU time spent in kernel mode by the container
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.usage.kernelmode

cpu.usage.system:
  brief: Jiffies of CPU time used by the system
  custom: false
  description: Jiffies of CPU time used by the system
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.usage.system

cpu.usage.total:
  brief: Jiffies of CPU time used by the container
  custom: false
  description: Jiffies of CPU time used by the container
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.usage.total

cpu.usage.usermode:
  brief: Jiffies of CPU time spent in user mode by the container
  custom: true
  description: Jiffies of CPU time spent in user mode by the container
  metric_type: cumulative
  monitor: ecs-metadata
  title: cpu.usage.usermode

memory.percent:
  brief: Percent of memory (0-100) used by the container relative to its limit (excludes
    page cache usage)
  custom: true
  description: Percent of memory (0-100) used by the container relative to its limit
    (excludes page cache usage)
  metric_type: gauge
  monitor: ecs-metadata
  title: memory.percent

memory.stats.swap:
  brief: Bytes of swap memory used by container
  custom: true
  description: Bytes of swap memory used by container
  metric_type: gauge
  monitor: ecs-metadata
  title: memory.stats.swap

memory.usage.limit:
  brief: Memory usage limit of the container, in bytes
  custom: false
  description: Memory usage limit of the container, in bytes
  metric_type: gauge
  monitor: ecs-metadata
  title: memory.usage.limit

memory.usage.max:
  brief: Maximum measured memory usage of the container, in bytes
  custom: true
  description: Maximum measured memory usage of the container, in bytes
  metric_type: gauge
  monitor: ecs-metadata
  title: memory.usage.max

memory.usage.total:
  brief: Bytes of memory used by the container
  custom: false
  description: Bytes of memory used by the container
  metric_type: gauge
  monitor: ecs-metadata
  title: memory.usage.total

network.usage.rx_bytes:
  brief: Bytes received by the container via its network interface
  custom: false
  description: Bytes received by the container via its network interface
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.rx_bytes

network.usage.rx_dropped:
  brief: Number of inbound network packets dropped by the container
  custom: true
  description: Number of inbound network packets dropped by the container
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.rx_dropped

network.usage.rx_errors:
  brief: Errors receiving network packets
  custom: true
  description: Errors receiving network packets
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.rx_errors

network.usage.rx_packets:
  brief: Network packets received by the container via its network interface
  custom: true
  description: Network packets received by the container via its network interface
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.rx_packets

network.usage.tx_bytes:
  brief: Bytes sent by the container via its network interface
  custom: false
  description: Bytes sent by the container via its network interface
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.tx_bytes

network.usage.tx_dropped:
  brief: Number of outbound network packets dropped by the container
  custom: true
  description: Number of outbound network packets dropped by the container
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.tx_dropped

network.usage.tx_errors:
  brief: Errors sending network packets
  custom: true
  description: Errors sending network packets
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.tx_errors

network.usage.tx_packets:
  brief: Network packets sent by the container via its network interface
  custom: true
  description: Network packets sent by the container via its network interface
  metric_type: cumulative
  monitor: ecs-metadata
  title: network.usage.tx_packets


elasticsearch.cluster.active-primary-shards:
  brief: Number of active primary shards
  custom: false
  description: Number of active primary shards
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.active-primary-shards

elasticsearch.cluster.active-shards:
  brief: Number of active shards
  custom: false
  description: Number of active shards
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.active-shards

elasticsearch.cluster.active-shards-percent:
  brief: Percentaage of shards active
  custom: true
  description: Percentaage of shards active
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.active-shards-percent

elasticsearch.cluster.delayed-unassigned-shards:
  brief: Number of delayed unassigned shards
  custom: true
  description: Number of delayed unassigned shards
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.delayed-unassigned-shards

elasticsearch.cluster.in-flight-fetches:
  brief: Number of fetches in-flight
  custom: true
  description: Number of fetches in-flight
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.in-flight-fetches

elasticsearch.cluster.initializing-shards:
  brief: Number of shards being initialized
  custom: true
  description: Number of shards being initialized
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.initializing-shards

elasticsearch.cluster.number-of-data_nodes:
  brief: Number of data nodes
  custom: false
  description: Number of data nodes
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.number-of-data_nodes

elasticsearch.cluster.number-of-nodes:
  brief: Number of nodes
  custom: false
  description: Number of nodes
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.number-of-nodes

elasticsearch.cluster.pending-tasks:
  brief: Number of pending tasks
  custom: true
  description: Number of pending tasks
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.pending-tasks

elasticsearch.cluster.relocating-shards:
  brief: Number of shards being relocated
  custom: false
  description: Number of shards being relocated
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.relocating-shards

elasticsearch.cluster.status:
  brief: Cluster stats (0, 1, 2 for green, yellow and red respectively)
  custom: true
  description: Cluster stats (0, 1, 2 for green, yellow and red respectively)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.status

elasticsearch.cluster.task-max-wait-time:
  brief: Max time a task has to wait
  custom: true
  description: Max time a task has to wait
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.task-max-wait-time

elasticsearch.cluster.unassigned-shards:
  brief: Number of unassigned shards
  custom: false
  description: Number of unassigned shards
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.cluster.unassigned-shards

elasticsearch.http.current_open:
  brief: Number of currently open HTTP connections
  custom: true
  description: Number of currently open HTTP connections
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.http.current_open

elasticsearch.http.total_open:
  brief: Total number of opened HTTP connections
  custom: true
  description: Total number of opened HTTP connections
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.http.total_open

elasticsearch.indices.completion.size:
  brief: Size used by suggest completion (in bytes)
  custom: true
  description: Size used by suggest completion (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.completion.size

elasticsearch.indices.docs.count:
  brief: Number of docs
  custom: false
  description: Number of docs
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.docs.count

elasticsearch.indices.docs.deleted:
  brief: Number of docs deleted
  custom: false
  description: Number of docs deleted
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.docs.deleted

elasticsearch.indices.fielddata.evictions:
  brief: Number of evictions from fielddata cache
  custom: true
  description: Number of evictions from fielddata cache
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.fielddata.evictions

elasticsearch.indices.fielddata.memory-size:
  brief: Size of fielddata cache (in bytes)
  custom: true
  description: Size of fielddata cache (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.fielddata.memory-size

elasticsearch.indices.filter-cache.evictions:
  brief: Number of evicttions from filter cache
  custom: true
  description: Number of evicttions from filter cache
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.filter-cache.evictions

elasticsearch.indices.filter-cache.memory-size:
  brief: Filter cache size (in bytes)
  custom: true
  description: Filter cache size (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.filter-cache.memory-size

elasticsearch.indices.flush.periodic:
  brief: How long to wait before triggering a flush regardless of translog size
  custom: true
  description: How long to wait before triggering a flush regardless of translog size
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.flush.periodic

elasticsearch.indices.flush.total:
  brief: Number of index flushes to disk
  custom: true
  description: Number of index flushes to disk
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.flush.total

elasticsearch.indices.flush.total-time:
  brief: Time spent flushing the index to disk
  custom: true
  description: Time spent flushing the index to disk
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.flush.total-time

elasticsearch.indices.get.current:
  brief: Number of get requests running
  custom: true
  description: Number of get requests running
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.get.current

elasticsearch.indices.get.exists-time:
  brief: Time spent on get requests where the document existed
  custom: true
  description: Time spent on get requests where the document existed
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.exists-time

elasticsearch.indices.get.exists-total:
  brief: Number of get requests where the document existed
  custom: true
  description: Number of get requests where the document existed
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.exists-total

elasticsearch.indices.get.missing-time:
  brief: Time spent on get requests where the document was missing
  custom: true
  description: Time spent on get requests where the document was missing
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.missing-time

elasticsearch.indices.get.missing-total:
  brief: Number of get requests where the document was missing
  custom: true
  description: Number of get requests where the document was missing
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.missing-total

elasticsearch.indices.get.time:
  brief: Time spent on get requests
  custom: true
  description: Time spent on get requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.time

elasticsearch.indices.get.total:
  brief: Total number of get requests
  custom: false
  description: Total number of get requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.get.total

elasticsearch.indices.id-cache.memory-size:
  brief: Size of id cache (in bytes)
  custom: true
  description: Size of id cache (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.id-cache.memory-size

elasticsearch.indices.indexing.delete-current:
  brief: Number of documents currently being deleted from an index
  custom: true
  description: Number of documents currently being deleted from an index
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.delete-current

elasticsearch.indices.indexing.delete-time:
  brief: Time spent deleting documents from an index
  custom: true
  description: Time spent deleting documents from an index
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.delete-time

elasticsearch.indices.indexing.delete-total:
  brief: Number of documents deleted from an index
  custom: true
  description: Number of documents deleted from an index
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.delete-total

elasticsearch.indices.indexing.index-current:
  brief: Number of documents currently being indexed to an index
  custom: true
  description: Number of documents currently being indexed to an index
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.index-current

elasticsearch.indices.indexing.index-failed:
  brief: Number of failed indices
  custom: true
  description: Number of failed indices
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.index-failed

elasticsearch.indices.indexing.index-time:
  brief: Time spent indexing documents to an index
  custom: true
  description: Time spent indexing documents to an index
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.index-time

elasticsearch.indices.indexing.index-total:
  brief: Total number of documents indexed to an index
  custom: false
  description: Total number of documents indexed to an index
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.index-total

elasticsearch.indices.indexing.noop-update-total:
  brief: Number of noop updates
  custom: true
  description: Number of noop updates
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.noop-update-total

elasticsearch.indices.indexing.throttle-time:
  brief: Throttle time
  custom: true
  description: Throttle time
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.indexing.throttle-time

elasticsearch.indices.merges.auto-throttle-size:
  brief: Merging throttled due to auto-throttling (in bytes)
  custom: true
  description: Merging throttled due to auto-throttling (in bytes)
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.auto-throttle-size

elasticsearch.indices.merges.current:
  brief: Number of currently active segment merges
  custom: false
  description: Number of currently active segment merges
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.merges.current

elasticsearch.indices.merges.current-docs:
  brief: Number of docs currently being merged
  custom: true
  description: Number of docs currently being merged
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.merges.current-docs

elasticsearch.indices.merges.current-size:
  brief: Size of the segments currently being merged
  custom: true
  description: Size of the segments currently being merged
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.merges.current-size

elasticsearch.indices.merges.stopped-time:
  brief: Total time merges were stopped for
  custom: true
  description: Total time merges were stopped for
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.stopped-time

elasticsearch.indices.merges.throttle-time:
  brief: Total time merges spent waiting due to throttling
  custom: true
  description: Total time merges spent waiting due to throttling
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.throttle-time

elasticsearch.indices.merges.total:
  brief: Number of segment merges
  custom: false
  description: Number of segment merges
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.total

elasticsearch.indices.merges.total-docs:
  brief: Number of merged docs across merged segments
  custom: true
  description: Number of merged docs across merged segments
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.total-docs

elasticsearch.indices.merges.total-size:
  brief: Total size of merged segments
  custom: true
  description: Total size of merged segments
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.total-size

elasticsearch.indices.merges.total-time:
  brief: Total time spent on merging
  custom: true
  description: Total time spent on merging
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.merges.total-time

elasticsearch.indices.percolate.current:
  brief: Number of percolator queries currently running
  custom: true
  description: Number of percolator queries currently running
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.percolate.current

elasticsearch.indices.percolate.queries:
  brief: Number of percolator queries
  custom: true
  description: Number of percolator queries
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.percolate.queries

elasticsearch.indices.percolate.time:
  brief: Total time spent on percolate requests
  custom: true
  description: Total time spent on percolate requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.percolate.time

elasticsearch.indices.percolate.total:
  brief: Total number of suggest requests
  custom: true
  description: Total number of suggest requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.percolate.total

elasticsearch.indices.query-cache.cache-count:
  brief: Number of items in query cache
  custom: true
  description: Number of items in query cache
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.cache-count

elasticsearch.indices.query-cache.cache-size:
  brief: Size of query cache (in bytes)
  custom: true
  description: Size of query cache (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.cache-size

elasticsearch.indices.query-cache.evictions:
  brief: Number of query cache evictions
  custom: true
  description: Number of query cache evictions
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.evictions

elasticsearch.indices.query-cache.hit-count:
  brief: Number of query cache hits
  custom: true
  description: Number of query cache hits
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.hit-count

elasticsearch.indices.query-cache.memory-size:
  brief: Size of query cache (in bytes)
  custom: true
  description: Size of query cache (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.memory-size

elasticsearch.indices.query-cache.miss-count:
  brief: Number of query cache misses
  custom: true
  description: Number of query cache misses
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.miss-count

elasticsearch.indices.query-cache.total-count:
  brief: Total number of items in the query cache
  custom: true
  description: Total number of items in the query cache
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.query-cache.total-count

elasticsearch.indices.recovery.current-as-source:
  brief: Number of ongoing recoveries for which a shard serves as a source
  custom: true
  description: Number of ongoing recoveries for which a shard serves as a source
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.recovery.current-as-source

elasticsearch.indices.recovery.current-as-target:
  brief: Number of ongoing recoveries for which a shard serves as a target
  custom: true
  description: Number of ongoing recoveries for which a shard serves as a target
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.recovery.current-as-target

elasticsearch.indices.recovery.throttle-time:
  brief: Total time recoveries waited due to throttling
  custom: true
  description: Total time recoveries waited due to throttling
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.recovery.throttle-time

elasticsearch.indices.refresh.listeners:
  brief: Number of listeners waiting for a refresh
  custom: true
  description: Number of listeners waiting for a refresh
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.refresh.listeners

elasticsearch.indices.refresh.total:
  brief: Total number of index refreshes
  custom: true
  description: Total number of index refreshes
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.refresh.total

elasticsearch.indices.refresh.total-time:
  brief: Total time spent on index refreshes
  custom: true
  description: Total time spent on index refreshes
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.refresh.total-time

elasticsearch.indices.request-cache.evictions:
  brief: Number of request cache evictions
  custom: true
  description: Number of request cache evictions
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.request-cache.evictions

elasticsearch.indices.request-cache.hit-count:
  brief: Number of request cache hits
  custom: true
  description: Number of request cache hits
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.request-cache.hit-count

elasticsearch.indices.request-cache.memory-size:
  brief: Memory used by request cache (in bytes)
  custom: true
  description: Memory used by request cache (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.request-cache.memory-size

elasticsearch.indices.request-cache.miss-count:
  brief: Number of request cache misses
  custom: true
  description: Number of request cache misses
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.request-cache.miss-count

elasticsearch.indices.search.fetch-current:
  brief: Number of query fetches currently running
  custom: true
  description: Number of query fetches currently running
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.search.fetch-current

elasticsearch.indices.search.fetch-time:
  brief: Total time spent on query fetches
  custom: true
  description: Total time spent on query fetches
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.fetch-time

elasticsearch.indices.search.fetch-total:
  brief: Total number of query feches
  custom: true
  description: Total number of query feches
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.fetch-total

elasticsearch.indices.search.open-contexts:
  brief: Number of open contexts
  custom: true
  description: Number of open contexts
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.search.open-contexts

elasticsearch.indices.search.query-current:
  brief: Number of currently active queries
  custom: true
  description: Number of currently active queries
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.search.query-current

elasticsearch.indices.search.query-time:
  brief: Total time spent querying on the primary
  custom: false
  description: Total time spent querying on the primary
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.query-time

elasticsearch.indices.search.query-total:
  brief: Total number of queries
  custom: false
  description: Total number of queries
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.query-total

elasticsearch.indices.search.scroll-current:
  brief: Currently active scroll queries count
  custom: true
  description: Currently active scroll queries count
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.search.scroll-current

elasticsearch.indices.search.scroll-time:
  brief: Total time spent on scroll queries
  custom: true
  description: Total time spent on scroll queries
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.scroll-time

elasticsearch.indices.search.scroll-total:
  brief: Total number of scroll queries
  custom: true
  description: Total number of scroll queries
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.scroll-total

elasticsearch.indices.search.suggest-current:
  brief: Number of suggest requests currently active
  custom: true
  description: Number of suggest requests currently active
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.search.suggest-current

elasticsearch.indices.search.suggest-time:
  brief: Total time spent on search suggest
  custom: true
  description: Total time spent on search suggest
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.suggest-time

elasticsearch.indices.search.suggest-total:
  brief: Total number of suggest requests
  custom: true
  description: Total number of suggest requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.search.suggest-total

elasticsearch.indices.segments.count:
  brief: Number of segments in an index shard
  custom: false
  description: Number of segments in an index shard
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.count

elasticsearch.indices.segments.doc-values-memory-size:
  brief: Memory used by doc values
  custom: true
  description: Memory used by doc values
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.doc-values-memory-size

elasticsearch.indices.segments.fixed-bit-set-memory-size:
  brief: Memory used by fixed bit set
  custom: true
  description: Memory used by fixed bit set
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.fixed-bit-set-memory-size

elasticsearch.indices.segments.index-writer-max-memory-size:
  brief: Maximum memory used by the index writer
  custom: true
  description: Maximum memory used by the index writer
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.index-writer-max-memory-size

elasticsearch.indices.segments.index-writer-memory-size:
  brief: Memory used by the index writer
  custom: true
  description: Memory used by the index writer
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.index-writer-memory-size

elasticsearch.indices.segments.memory-size:
  brief: Memory used by index segments (in bytes)
  custom: true
  description: Memory used by index segments (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.memory-size

elasticsearch.indices.segments.norms-memory-size:
  brief: Memory used by norms (in bytes)
  custom: true
  description: Memory used by norms (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.norms-memory-size

elasticsearch.indices.segments.points-memory-size:
  brief: Memory used by points
  custom: true
  description: Memory used by points
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.points-memory-size

elasticsearch.indices.segments.stored-field-memory-size:
  brief: Memory used by stored fields (in bytes)
  custom: true
  description: Memory used by stored fields (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.stored-field-memory-size

elasticsearch.indices.segments.term-vectors-memory-size:
  brief: Memory used by term vectors (in bytes)
  custom: true
  description: Memory used by term vectors (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.term-vectors-memory-size

elasticsearch.indices.segments.terms-memory-size:
  brief: Memory used by terms (in bytes)
  custom: true
  description: Memory used by terms (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.terms-memory-size

elasticsearch.indices.segments.version-map-memory-size:
  brief: Memory used by segment version map (in bytes)
  custom: true
  description: Memory used by segment version map (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.segments.version-map-memory-size

elasticsearch.indices.store.size:
  brief: Total size (in bytes)
  custom: true
  description: Total size (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.store.size

elasticsearch.indices.store.throttle-time:
  brief: Total time requests are throttled for
  custom: true
  description: Total time requests are throttled for
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.store.throttle-time

elasticsearch.indices.suggest.current:
  brief: Number of currently active suggest requests
  custom: true
  description: Number of currently active suggest requests
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.suggest.current

elasticsearch.indices.suggest.time:
  brief: Total time spent in suggest requests
  custom: true
  description: Total time spent in suggest requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.suggest.time

elasticsearch.indices.suggest.total:
  brief: Total number of suggest requests
  custom: true
  description: Total number of suggest requests
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.suggest.total

elasticsearch.indices.translog.earliest_last_modified_age:
  brief: Earliest last modified age on transaction logs
  custom: true
  description: Earliest last modified age on transaction logs
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.translog.earliest_last_modified_age

elasticsearch.indices.translog.operations:
  brief: Number of operations in the transaction log
  custom: true
  description: Number of operations in the transaction log
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.translog.operations

elasticsearch.indices.translog.size:
  brief: Size of the transaction log
  custom: true
  description: Size of the transaction log
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.translog.size

elasticsearch.indices.translog.uncommitted_operations:
  brief: Number of uncommitted operations in the transaction log
  custom: true
  description: Number of uncommitted operations in the transaction log
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.translog.uncommitted_operations

elasticsearch.indices.translog.uncommitted_size_in_bytes:
  brief: Size of uncommitted transaction logs (in bytes)
  custom: true
  description: Size of uncommitted transaction logs (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.translog.uncommitted_size_in_bytes

elasticsearch.indices.warmer.current:
  brief: Number of currently active warmers
  custom: true
  description: Number of currently active warmers
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.indices.warmer.current

elasticsearch.indices.warmer.total:
  brief: Total number of warmers
  custom: true
  description: Total number of warmers
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.warmer.total

elasticsearch.indices.warmer.total-time:
  brief: Total time spent by warmers
  custom: true
  description: Total time spent by warmers
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.indices.warmer.total-time

elasticsearch.jvm.classes.current-loaded-count:
  brief: Number of classes currently loaded
  custom: true
  description: Number of classes currently loaded
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.classes.current-loaded-count

elasticsearch.jvm.classes.total-loaded-count:
  brief: Number of classes loaded
  custom: true
  description: Number of classes loaded
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.classes.total-loaded-count

elasticsearch.jvm.classes.total-unloaded-count:
  brief: Total number of classes unloaded
  custom: true
  description: Total number of classes unloaded
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.classes.total-unloaded-count

elasticsearch.jvm.gc.count:
  brief: Total number of garbage collections
  custom: true
  description: Total number of garbage collections
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.gc.count

elasticsearch.jvm.gc.old-count:
  brief: Total number of garbage collections on Old Gen
  custom: true
  description: Total number of garbage collections on Old Gen
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.gc.old-count

elasticsearch.jvm.gc.old-time:
  brief: Total time spent in garbage collections on Old Gen
  custom: true
  description: Total time spent in garbage collections on Old Gen
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.gc.old-time

elasticsearch.jvm.gc.time:
  brief: Total time spent on GC
  custom: false
  description: Total time spent on GC
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.gc.time

elasticsearch.jvm.mem.buffer_pools.direct.count:
  brief: Number of direct buffer pools
  custom: true
  description: Number of direct buffer pools
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.direct.count

elasticsearch.jvm.mem.buffer_pools.direct.total_capacity_in_bytes:
  brief: Total capacity of direct buffer pools
  custom: true
  description: Total capacity of direct buffer pools
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.direct.total_capacity_in_bytes

elasticsearch.jvm.mem.buffer_pools.direct.used_in_bytes:
  brief: Memory used by direct buffer pools (in bytes)
  custom: true
  description: Memory used by direct buffer pools (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.direct.used_in_bytes

elasticsearch.jvm.mem.buffer_pools.mapped.count:
  brief: Number of buffers in the mapped pool
  custom: true
  description: Number of buffers in the mapped pool
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.mapped.count

elasticsearch.jvm.mem.buffer_pools.mapped.total_capacity_in_bytes:
  brief: Total capacity of the buffers in the mapped pool
  custom: true
  description: Total capacity of the buffers in the mapped pool
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.mapped.total_capacity_in_bytes

elasticsearch.jvm.mem.buffer_pools.mapped.used_in_bytes:
  brief: Memory used by mapped buffer pools (in bytes)
  custom: true
  description: Memory used by mapped buffer pools (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.buffer_pools.mapped.used_in_bytes

elasticsearch.jvm.mem.heap-committed:
  brief: Memory guaranteed to be available to JVM heap
  custom: false
  description: Memory guaranteed to be available to JVM heap
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.heap-committed

elasticsearch.jvm.mem.heap-max:
  brief: Max memory that can be used by JVM heap (in bytes)
  custom: true
  description: Max memory that can be used by JVM heap (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.heap-max

elasticsearch.jvm.mem.heap-used:
  brief: Memory current being used by JVM heap (in bytes)
  custom: false
  description: Memory current being used by JVM heap (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.heap-used

elasticsearch.jvm.mem.heap-used-percent:
  brief: Percent of heap being used
  custom: true
  description: Percent of heap being used
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.heap-used-percent

elasticsearch.jvm.mem.non-heap-committed:
  brief: Memory guaranteed to be available to JVM non-heap
  custom: true
  description: Memory guaranteed to be available to JVM non-heap
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.non-heap-committed

elasticsearch.jvm.mem.non-heap-used:
  brief: Memory current being used by JVM non-heap (in bytes)
  custom: true
  description: Memory current being used by JVM non-heap (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.non-heap-used

elasticsearch.jvm.mem.pools.old.max_in_bytes:
  brief: Memory used by Old Gen (in bytes)
  custom: true
  description: Memory used by Old Gen (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.old.max_in_bytes

elasticsearch.jvm.mem.pools.old.peak_max_in_bytes:
  brief: Memory pool Old Gen peak max (in bytes)
  custom: true
  description: Memory pool Old Gen peak max (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.old.peak_max_in_bytes

elasticsearch.jvm.mem.pools.old.peak_used_in_bytes:
  brief: Peak memory used by Old Gen (in bytes)
  custom: true
  description: Peak memory used by Old Gen (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.old.peak_used_in_bytes

elasticsearch.jvm.mem.pools.old.used_in_bytes:
  brief: Memory being used by Old Gen (in bytes)
  custom: true
  description: Memory being used by Old Gen (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.old.used_in_bytes

elasticsearch.jvm.mem.pools.survivor.max_in_bytes:
  brief: Max memory that can be used by Survivor space (in bytes)
  custom: true
  description: Max memory that can be used by Survivor space (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.survivor.max_in_bytes

elasticsearch.jvm.mem.pools.survivor.peak_max_in_bytes:
  brief: Memory used by Survivor space (in bytes)
  custom: true
  description: Memory used by Survivor space (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.survivor.peak_max_in_bytes

elasticsearch.jvm.mem.pools.survivor.peak_used_in_bytes:
  brief: Peak memory used by Survivor space (in bytes)
  custom: true
  description: Peak memory used by Survivor space (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.survivor.peak_used_in_bytes

elasticsearch.jvm.mem.pools.survivor.used_in_bytes:
  brief: Memory being used currently by Survivor space (in bytes)
  custom: true
  description: Memory being used currently by Survivor space (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.survivor.used_in_bytes

elasticsearch.jvm.mem.pools.young.max_in_bytes:
  brief: Max memory (in bytes) that can be used by Young Gen
  custom: true
  description: Max memory (in bytes) that can be used by Young Gen
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.young.max_in_bytes

elasticsearch.jvm.mem.pools.young.peak_max_in_bytes:
  brief: Memory pool Young Gen peak max (in bytes)
  custom: true
  description: Memory pool Young Gen peak max (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.young.peak_max_in_bytes

elasticsearch.jvm.mem.pools.young.peak_used_in_bytes:
  brief: Memory pool Young Gen peak used (in bytes)
  custom: true
  description: Memory pool Young Gen peak used (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.young.peak_used_in_bytes

elasticsearch.jvm.mem.pools.young.used_in_bytes:
  brief: Memory used by Young Gen (in bytes)
  custom: true
  description: Memory used by Young Gen (in bytes)
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.mem.pools.young.used_in_bytes

elasticsearch.jvm.threads.count:
  brief: Number of active threads in the JVM
  custom: true
  description: Number of active threads in the JVM
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.threads.count

elasticsearch.jvm.threads.peak:
  brief: Peak number of threads used
  custom: true
  description: Peak number of threads used
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.jvm.threads.peak

elasticsearch.jvm.uptime:
  brief: Uptime of JVM
  custom: true
  description: Uptime of JVM
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.jvm.uptime

elasticsearch.process.cpu.percent:
  brief: CPU usage in percent
  custom: true
  description: CPU usage in percent
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.process.cpu.percent

elasticsearch.process.cpu.time:
  brief: CPU time (in milliseconds) used by the process on which the Java virtual
    machine is running
  custom: true
  description: CPU time (in milliseconds) used by the process on which the Java virtual
    machine is running
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.process.cpu.time

elasticsearch.process.max_file_descriptors:
  brief: Number of opened file descriptors associated with the current process
  custom: true
  description: Number of opened file descriptors associated with the current process
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.process.max_file_descriptors

elasticsearch.process.mem.total-virtual-size:
  brief: Size in bytes of virtual memory that is guaranteed to be available to the
    running process
  custom: true
  description: Size in bytes of virtual memory that is guaranteed to be available
    to the running process
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.process.mem.total-virtual-size

elasticsearch.process.open_file_descriptors:
  brief: Number of currently open file descriptors
  custom: false
  description: Number of currently open file descriptors
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.process.open_file_descriptors

elasticsearch.thread_pool.active:
  brief: Number of active threads
  custom: true
  description: Number of active threads
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.thread_pool.active

elasticsearch.thread_pool.completed:
  brief: Number of threads completed in thread pool
  custom: true
  description: Number of threads completed in thread pool
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.thread_pool.completed

elasticsearch.thread_pool.largest:
  brief: Highest active threads in thread pool
  custom: true
  description: Highest active threads in thread pool
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.thread_pool.largest

elasticsearch.thread_pool.queue:
  brief: Number of Tasks in thread pool
  custom: true
  description: Number of Tasks in thread pool
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.thread_pool.queue

elasticsearch.thread_pool.rejected:
  brief: Number of rejected threads in thread pool
  custom: false
  description: Number of rejected threads in thread pool
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.thread_pool.rejected

elasticsearch.thread_pool.threads:
  brief: Number of Threads in thread pool
  custom: true
  description: Number of Threads in thread pool
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.thread_pool.threads

elasticsearch.transport.rx.count:
  brief: Total size of data received in cluster communication (in bytes)
  custom: true
  description: Total size of data received in cluster communication (in bytes)
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.transport.rx.count

elasticsearch.transport.rx.size:
  brief: Total size of data received in cluster communication
  custom: true
  description: Total size of data received in cluster communication
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.transport.rx.size

elasticsearch.transport.server_open:
  brief: Total number of connections opened for cluster communication
  custom: true
  description: Total number of connections opened for cluster communication
  metric_type: gauge
  monitor: elasticsearch
  title: elasticsearch.transport.server_open

elasticsearch.transport.tx.count:
  brief: Total number of packets sent in cluster communication
  custom: true
  description: Total number of packets sent in cluster communication
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.transport.tx.count

elasticsearch.transport.tx.size:
  brief: Total size of data sent in cluster communication
  custom: true
  description: Total size of data sent in cluster communication
  metric_type: cumulative
  monitor: elasticsearch
  title: elasticsearch.transport.tx.size


etcd_cluster_version:
  brief: Which version is running
  custom: true
  description: Which version is running. 1 for 'cluster_version' label with current
    cluster version
  metric_type: gauge
  monitor: etcd
  title: etcd_cluster_version

etcd_debugging_disk_backend_commit_rebalance_duration_seconds:
  brief: The latency distributions of commit.rebalance called by bboltdb backend
  custom: true
  description: The latency distributions of commit.rebalance called by bboltdb backend.
    (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_rebalance_duration_seconds

etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket:
  brief: The latency distributions of commit.rebalance called by bboltdb backend
  custom: true
  description: The latency distributions of commit.rebalance called by bboltdb backend.
    (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_rebalance_duration_seconds_bucket

etcd_debugging_disk_backend_commit_rebalance_duration_seconds_count:
  brief: The latency distributions of commit.rebalance called by bboltdb backend
  custom: true
  description: The latency distributions of commit.rebalance called by bboltdb backend.
    (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_rebalance_duration_seconds_count

etcd_debugging_disk_backend_commit_spill_duration_seconds:
  brief: The latency distributions of commit.spill called by bboltdb backend
  custom: true
  description: The latency distributions of commit.spill called by bboltdb backend.
    (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_spill_duration_seconds

etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket:
  brief: The latency distributions of commit.spill called by bboltdb backend
  custom: true
  description: The latency distributions of commit.spill called by bboltdb backend.
    (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_spill_duration_seconds_bucket

etcd_debugging_disk_backend_commit_spill_duration_seconds_count:
  brief: The latency distributions of commit.spill called by bboltdb backend
  custom: true
  description: The latency distributions of commit.spill called by bboltdb backend.
    (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_spill_duration_seconds_count

etcd_debugging_disk_backend_commit_write_duration_seconds:
  brief: The latency distributions of commit.write called by bboltdb backend
  custom: true
  description: The latency distributions of commit.write called by bboltdb backend.
    (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_write_duration_seconds

etcd_debugging_disk_backend_commit_write_duration_seconds_bucket:
  brief: The latency distributions of commit.write called by bboltdb backend
  custom: true
  description: The latency distributions of commit.write called by bboltdb backend.
    (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_write_duration_seconds_bucket

etcd_debugging_disk_backend_commit_write_duration_seconds_count:
  brief: The latency distributions of commit.write called by bboltdb backend
  custom: true
  description: The latency distributions of commit.write called by bboltdb backend.
    (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_disk_backend_commit_write_duration_seconds_count

etcd_debugging_lease_granted_total:
  brief: The total number of granted leases
  custom: true
  description: The total number of granted leases.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_granted_total

etcd_debugging_lease_renewed_total:
  brief: The number of renewed leases seen by the leader
  custom: true
  description: The number of renewed leases seen by the leader.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_renewed_total

etcd_debugging_lease_revoked_total:
  brief: The total number of revoked leases
  custom: true
  description: The total number of revoked leases.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_revoked_total

etcd_debugging_lease_ttl_total:
  brief: Bucketed histogram of lease TTLs
  custom: true
  description: Bucketed histogram of lease TTLs. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_ttl_total

etcd_debugging_lease_ttl_total_bucket:
  brief: Bucketed histogram of lease TTLs
  custom: true
  description: Bucketed histogram of lease TTLs. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_ttl_total_bucket

etcd_debugging_lease_ttl_total_count:
  brief: Bucketed histogram of lease TTLs
  custom: true
  description: Bucketed histogram of lease TTLs. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_lease_ttl_total_count

etcd_debugging_mvcc_compact_revision:
  brief: The revision of the last compaction in store
  custom: true
  description: The revision of the last compaction in store.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_compact_revision

etcd_debugging_mvcc_current_revision:
  brief: The current revision of store
  custom: true
  description: The current revision of store.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_current_revision

etcd_debugging_mvcc_db_compaction_keys_total:
  brief: Total number of db keys compacted
  custom: true
  description: Total number of db keys compacted.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_keys_total

etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds

etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_bucket

etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_count:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_pause_duration_milliseconds_count

etcd_debugging_mvcc_db_compaction_total_duration_milliseconds:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_total_duration_milliseconds

etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_bucket

etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_count:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_db_compaction_total_duration_milliseconds_count

etcd_debugging_mvcc_db_total_size_in_bytes:
  brief: Total size of the underlying database physically allocated in bytes
  custom: true
  description: Total size of the underlying database physically allocated in bytes.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_db_total_size_in_bytes

etcd_debugging_mvcc_delete_total:
  brief: Total number of deletes seen by this member
  custom: true
  description: Total number of deletes seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_delete_total

etcd_debugging_mvcc_events_total:
  brief: Total number of events sent by this member
  custom: true
  description: Total number of events sent by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_events_total

etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds

etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_bucket

etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_count:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_index_compaction_pause_duration_milliseconds_count

etcd_debugging_mvcc_keys_total:
  brief: Total number of keys
  custom: true
  description: Total number of keys.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_keys_total

etcd_debugging_mvcc_pending_events_total:
  brief: Total number of pending events to be sent
  custom: true
  description: Total number of pending events to be sent.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_pending_events_total

etcd_debugging_mvcc_put_total:
  brief: Total number of puts seen by this member
  custom: true
  description: Total number of puts seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_put_total

etcd_debugging_mvcc_range_total:
  brief: Total number of ranges seen by this member
  custom: true
  description: Total number of ranges seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_range_total

etcd_debugging_mvcc_slow_watcher_total:
  brief: Total number of unsynced slow watchers
  custom: true
  description: Total number of unsynced slow watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_slow_watcher_total

etcd_debugging_mvcc_txn_total:
  brief: Total number of txns seen by this member
  custom: true
  description: Total number of txns seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_mvcc_txn_total

etcd_debugging_mvcc_watch_stream_total:
  brief: Total number of watch streams
  custom: true
  description: Total number of watch streams.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_watch_stream_total

etcd_debugging_mvcc_watcher_total:
  brief: Total number of watchers
  custom: true
  description: Total number of watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_mvcc_watcher_total

etcd_debugging_server_lease_expired_total:
  brief: The total number of expired leases
  custom: true
  description: The total number of expired leases.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_server_lease_expired_total

etcd_debugging_snap_save_marshalling_duration_seconds:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_marshalling_duration_seconds

etcd_debugging_snap_save_marshalling_duration_seconds_bucket:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_marshalling_duration_seconds_bucket

etcd_debugging_snap_save_marshalling_duration_seconds_count:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_marshalling_duration_seconds_count

etcd_debugging_snap_save_total_duration_seconds:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_total_duration_seconds

etcd_debugging_snap_save_total_duration_seconds_bucket:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_total_duration_seconds_bucket

etcd_debugging_snap_save_total_duration_seconds_count:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_snap_save_total_duration_seconds_count

etcd_debugging_store_expires_total:
  brief: Total number of expired keys
  custom: true
  description: Total number of expired keys.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_store_expires_total

etcd_debugging_store_reads_total:
  brief: Total number of reads action by (get/getRecursive), local to this member
  custom: true
  description: Total number of reads action by (get/getRecursive), local to this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_store_reads_total

etcd_debugging_store_watch_requests_total:
  brief: Total number of incoming watch requests (new or reestablished)
  custom: true
  description: Total number of incoming watch requests (new or reestablished).
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_store_watch_requests_total

etcd_debugging_store_watchers:
  brief: Count of currently active watchers
  custom: true
  description: Count of currently active watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_debugging_store_watchers

etcd_debugging_store_writes_total:
  brief: Total number of writes (e.g
  custom: true
  description: Total number of writes (e.g. set/compareAndDelete) seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_debugging_store_writes_total

etcd_disk_backend_commit_duration_seconds:
  brief: The latency distributions of commit called by backend
  custom: true
  description: The latency distributions of commit called by backend. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_commit_duration_seconds

etcd_disk_backend_commit_duration_seconds_bucket:
  brief: The latency distributions of commit called by backend
  custom: true
  description: The latency distributions of commit called by backend. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_commit_duration_seconds_bucket

etcd_disk_backend_commit_duration_seconds_count:
  brief: The latency distributions of commit called by backend
  custom: true
  description: The latency distributions of commit called by backend. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_commit_duration_seconds_count

etcd_disk_backend_defrag_duration_seconds:
  brief: The latency distribution of backend defragmentation
  custom: true
  description: The latency distribution of backend defragmentation. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_defrag_duration_seconds

etcd_disk_backend_defrag_duration_seconds_bucket:
  brief: The latency distribution of backend defragmentation
  custom: true
  description: The latency distribution of backend defragmentation. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_defrag_duration_seconds_bucket

etcd_disk_backend_defrag_duration_seconds_count:
  brief: The latency distribution of backend defragmentation
  custom: true
  description: The latency distribution of backend defragmentation. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_defrag_duration_seconds_count

etcd_disk_backend_snapshot_duration_seconds:
  brief: The latency distribution of backend snapshots
  custom: true
  description: The latency distribution of backend snapshots. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_snapshot_duration_seconds

etcd_disk_backend_snapshot_duration_seconds_bucket:
  brief: The latency distribution of backend snapshots
  custom: true
  description: The latency distribution of backend snapshots. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_snapshot_duration_seconds_bucket

etcd_disk_backend_snapshot_duration_seconds_count:
  brief: The latency distribution of backend snapshots
  custom: true
  description: The latency distribution of backend snapshots. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_backend_snapshot_duration_seconds_count

etcd_disk_wal_fsync_duration_seconds:
  brief: The latency distributions of fsync called by WAL
  custom: true
  description: The latency distributions of fsync called by WAL. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_wal_fsync_duration_seconds

etcd_disk_wal_fsync_duration_seconds_bucket:
  brief: The latency distributions of fsync called by WAL
  custom: true
  description: The latency distributions of fsync called by WAL. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_wal_fsync_duration_seconds_bucket

etcd_disk_wal_fsync_duration_seconds_count:
  brief: The latency distributions of fsync called by WAL
  custom: true
  description: The latency distributions of fsync called by WAL. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_disk_wal_fsync_duration_seconds_count

etcd_grpc_proxy_cache_hits_total:
  brief: Total number of cache hits
  custom: true
  description: Total number of cache hits
  metric_type: gauge
  monitor: etcd
  title: etcd_grpc_proxy_cache_hits_total

etcd_grpc_proxy_cache_keys_total:
  brief: Total number of keys/ranges cached
  custom: true
  description: Total number of keys/ranges cached
  metric_type: gauge
  monitor: etcd
  title: etcd_grpc_proxy_cache_keys_total

etcd_grpc_proxy_cache_misses_total:
  brief: Total number of cache misses
  custom: true
  description: Total number of cache misses
  metric_type: gauge
  monitor: etcd
  title: etcd_grpc_proxy_cache_misses_total

etcd_grpc_proxy_events_coalescing_total:
  brief: Total number of events coalescing
  custom: true
  description: Total number of events coalescing
  metric_type: cumulative
  monitor: etcd
  title: etcd_grpc_proxy_events_coalescing_total

etcd_grpc_proxy_watchers_coalescing_total:
  brief: Total number of current watchers coalescing
  custom: true
  description: Total number of current watchers coalescing
  metric_type: gauge
  monitor: etcd
  title: etcd_grpc_proxy_watchers_coalescing_total

etcd_mvcc_db_open_read_transactions:
  brief: The number of currently open read transactions
  custom: true
  description: The number of currently open read transactions
  metric_type: gauge
  monitor: etcd
  title: etcd_mvcc_db_open_read_transactions

etcd_mvcc_db_total_size_in_bytes:
  brief: Total size of the underlying database physically allocated in bytes
  custom: true
  description: Total size of the underlying database physically allocated in bytes.
  metric_type: gauge
  monitor: etcd
  title: etcd_mvcc_db_total_size_in_bytes

etcd_mvcc_db_total_size_in_use_in_bytes:
  brief: Total size of the underlying database logically in use in bytes
  custom: true
  description: Total size of the underlying database logically in use in bytes.
  metric_type: gauge
  monitor: etcd
  title: etcd_mvcc_db_total_size_in_use_in_bytes

etcd_mvcc_delete_total:
  brief: Total number of deletes seen by this member
  custom: true
  description: Total number of deletes seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_delete_total

etcd_mvcc_hash_duration_seconds:
  brief: The latency distribution of storage hash operation
  custom: true
  description: The latency distribution of storage hash operation. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_duration_seconds

etcd_mvcc_hash_duration_seconds_bucket:
  brief: The latency distribution of storage hash operation
  custom: true
  description: The latency distribution of storage hash operation. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_duration_seconds_bucket

etcd_mvcc_hash_duration_seconds_count:
  brief: The latency distribution of storage hash operation
  custom: true
  description: The latency distribution of storage hash operation. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_duration_seconds_count

etcd_mvcc_hash_rev_duration_seconds:
  brief: The latency distribution of storage hash by revision operation
  custom: true
  description: The latency distribution of storage hash by revision operation. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_rev_duration_seconds

etcd_mvcc_hash_rev_duration_seconds_bucket:
  brief: The latency distribution of storage hash by revision operation
  custom: true
  description: The latency distribution of storage hash by revision operation. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_rev_duration_seconds_bucket

etcd_mvcc_hash_rev_duration_seconds_count:
  brief: The latency distribution of storage hash by revision operation
  custom: true
  description: The latency distribution of storage hash by revision operation. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_hash_rev_duration_seconds_count

etcd_mvcc_put_total:
  brief: Total number of puts seen by this member
  custom: true
  description: Total number of puts seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_put_total

etcd_mvcc_range_total:
  brief: Total number of ranges seen by this member
  custom: true
  description: Total number of ranges seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_range_total

etcd_mvcc_txn_total:
  brief: Total number of txns seen by this member
  custom: true
  description: Total number of txns seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_mvcc_txn_total

etcd_network_client_grpc_received_bytes_total:
  brief: The total number of bytes received from grpc clients
  custom: true
  description: The total number of bytes received from grpc clients.
  metric_type: cumulative
  monitor: etcd
  title: etcd_network_client_grpc_received_bytes_total

etcd_network_client_grpc_sent_bytes_total:
  brief: The total number of bytes sent to grpc clients
  custom: true
  description: The total number of bytes sent to grpc clients.
  metric_type: cumulative
  monitor: etcd
  title: etcd_network_client_grpc_sent_bytes_total

etcd_server_file_descriptors_used_total:
  brief: The total number of file descriptors used
  custom: true
  description: The total number of file descriptors used.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_file_descriptors_used_total

etcd_server_go_version:
  brief: Which Go version server is running with
  custom: true
  description: Which Go version server is running with. 1 for 'server_go_version'
    label with current version.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_go_version

etcd_server_has_leader:
  brief: Whether or not a leader exists
  custom: false
  description: Whether or not a leader exists. 1 is existence, 0 is not.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_has_leader

etcd_server_health_failures_total:
  brief: The total number of failed health checks
  custom: true
  description: The total number of failed health checks
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_health_failures_total

etcd_server_health_success_total:
  brief: The total number of successful health checks
  custom: true
  description: The total number of successful health checks
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_health_success_total

etcd_server_heartbeat_send_failures_total:
  brief: The total number of leader heartbeat send failures (likely overloaded from
    slow disk)
  custom: true
  description: The total number of leader heartbeat send failures (likely overloaded
    from slow disk).
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_heartbeat_send_failures_total

etcd_server_id:
  brief: Server or member ID in hexadecimal format
  custom: true
  description: Server or member ID in hexadecimal format. 1 for 'server_id' label
    with current ID.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_id

etcd_server_is_leader:
  brief: Whether or not this member is a leader
  custom: true
  description: Whether or not this member is a leader. 1 if is, 0 otherwise.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_is_leader

etcd_server_is_learner:
  brief: Whether or not this member is a learner
  custom: true
  description: Whether or not this member is a learner. 1 if is, 0 otherwise.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_is_learner

etcd_server_leader_changes_seen_total:
  brief: The number of leader changes seen
  custom: false
  description: The number of leader changes seen.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_leader_changes_seen_total

etcd_server_learner_promote_successes_total:
  brief: The total number of successful learner promotions while this member is leader
  custom: true
  description: The total number of successful learner promotions while this member
    is leader.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_learner_promote_successes_total

etcd_server_pending_proposal_total:
  brief: The total number of pending proposals
  custom: true
  description: The total number of pending proposals.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_pending_proposal_total

etcd_server_proposal_durations_seconds:
  brief: The latency distributions of committing proposal
  custom: true
  description: The latency distributions of committing proposal. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_proposal_durations_seconds

etcd_server_proposal_durations_seconds_bucket:
  brief: The latency distributions of committing proposal
  custom: true
  description: The latency distributions of committing proposal. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_proposal_durations_seconds_bucket

etcd_server_proposal_durations_seconds_count:
  brief: The latency distributions of committing proposal
  custom: true
  description: The latency distributions of committing proposal. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_proposal_durations_seconds_count

etcd_server_proposal_failed_total:
  brief: The total number of failed proposals
  custom: true
  description: The total number of failed proposals.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_proposal_failed_total

etcd_server_proposals_applied_total:
  brief: The total number of consensus proposals applied
  custom: true
  description: The total number of consensus proposals applied.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_proposals_applied_total

etcd_server_proposals_committed_total:
  brief: The total number of consensus proposals committed
  custom: true
  description: The total number of consensus proposals committed.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_proposals_committed_total

etcd_server_proposals_failed_total:
  brief: The total number of failed proposals seen
  custom: false
  description: The total number of failed proposals seen.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_proposals_failed_total

etcd_server_proposals_pending:
  brief: The current number of pending proposals to commit
  custom: true
  description: The current number of pending proposals to commit.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_proposals_pending

etcd_server_quota_backend_bytes:
  brief: Current backend storage quota size in bytes
  custom: true
  description: Current backend storage quota size in bytes.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_quota_backend_bytes

etcd_server_read_indexes_failed_total:
  brief: The total number of failed read indexes seen
  custom: true
  description: The total number of failed read indexes seen.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_read_indexes_failed_total

etcd_server_slow_apply_total:
  brief: The total number of slow apply requests (likely overloaded from slow disk)
  custom: true
  description: The total number of slow apply requests (likely overloaded from slow
    disk).
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_slow_apply_total

etcd_server_slow_read_indexes_total:
  brief: The total number of pending read indexes not in sync with leader's or timed
    out read index requests
  custom: true
  description: The total number of pending read indexes not in sync with leader's
    or timed out read index requests.
  metric_type: cumulative
  monitor: etcd
  title: etcd_server_slow_read_indexes_total

etcd_server_snapshot_apply_in_progress_total:
  brief: 1 if the server is applying the incoming snapshot
  custom: true
  description: 1 if the server is applying the incoming snapshot. 0 if none.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_snapshot_apply_in_progress_total

etcd_server_version:
  brief: Which version is running
  custom: true
  description: Which version is running. 1 for 'server_version' label with current
    version.
  metric_type: gauge
  monitor: etcd
  title: etcd_server_version

etcd_snap_db_fsync_duration_seconds:
  brief: The latency distributions of fsyncing .snap.db file (sum)
  custom: true
  description: The latency distributions of fsyncing .snap.db file (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_fsync_duration_seconds

etcd_snap_db_fsync_duration_seconds_bucket:
  brief: The latency distributions of fsyncing .snap.db file (bucket)
  custom: true
  description: The latency distributions of fsyncing .snap.db file (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_fsync_duration_seconds_bucket

etcd_snap_db_fsync_duration_seconds_count:
  brief: The latency distributions of fsyncing .snap.db file (count)
  custom: true
  description: The latency distributions of fsyncing .snap.db file (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_fsync_duration_seconds_count

etcd_snap_db_save_total_duration_seconds:
  brief: The total latency distributions of v3 snapshot save (sum)
  custom: true
  description: The total latency distributions of v3 snapshot save (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_save_total_duration_seconds

etcd_snap_db_save_total_duration_seconds_bucket:
  brief: The total latency distributions of v3 snapshot save (bucket)
  custom: true
  description: The total latency distributions of v3 snapshot save (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_save_total_duration_seconds_bucket

etcd_snap_db_save_total_duration_seconds_count:
  brief: The total latency distributions of v3 snapshot save (count)
  custom: true
  description: The total latency distributions of v3 snapshot save (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_db_save_total_duration_seconds_count

etcd_snap_fsync_duration_seconds:
  brief: The latency distributions of fsync called by snap
  custom: true
  description: The latency distributions of fsync called by snap. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_fsync_duration_seconds

etcd_snap_fsync_duration_seconds_bucket:
  brief: The latency distributions of fsync called by snap
  custom: true
  description: The latency distributions of fsync called by snap. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_fsync_duration_seconds_bucket

etcd_snap_fsync_duration_seconds_count:
  brief: The latency distributions of fsync called by snap
  custom: true
  description: The latency distributions of fsync called by snap. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snap_fsync_duration_seconds_count

etcd_snapshot_save_marshalling_durations_seconds:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_marshalling_durations_seconds

etcd_snapshot_save_marshalling_durations_seconds_bucket:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_marshalling_durations_seconds_bucket

etcd_snapshot_save_marshalling_durations_seconds_count:
  brief: The marshalling cost distributions of save called by snapshot
  custom: true
  description: The marshalling cost distributions of save called by snapshot. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_marshalling_durations_seconds_count

etcd_snapshot_save_total_durations_seconds:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_total_durations_seconds

etcd_snapshot_save_total_durations_seconds_bucket:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_total_durations_seconds_bucket

etcd_snapshot_save_total_durations_seconds_count:
  brief: The total latency distributions of save called by snapshot
  custom: true
  description: The total latency distributions of save called by snapshot. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_snapshot_save_total_durations_seconds_count

etcd_storage_db_compaction_pause_duration_milliseconds:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_pause_duration_milliseconds

etcd_storage_db_compaction_pause_duration_milliseconds_bucket:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_pause_duration_milliseconds_bucket

etcd_storage_db_compaction_pause_duration_milliseconds_count:
  brief: Bucketed histogram of db compaction pause duration
  custom: true
  description: Bucketed histogram of db compaction pause duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_pause_duration_milliseconds_count

etcd_storage_db_compaction_total_duration_milliseconds:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_total_duration_milliseconds

etcd_storage_db_compaction_total_duration_milliseconds_bucket:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_total_duration_milliseconds_bucket

etcd_storage_db_compaction_total_duration_milliseconds_count:
  brief: Bucketed histogram of db compaction total duration
  custom: true
  description: Bucketed histogram of db compaction total duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_db_compaction_total_duration_milliseconds_count

etcd_storage_db_total_size_in_bytes:
  brief: Total size of the underlying database in bytes
  custom: true
  description: Total size of the underlying database in bytes.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_db_total_size_in_bytes

etcd_storage_delete_total:
  brief: Total number of deletes seen by this member
  custom: true
  description: Total number of deletes seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_delete_total

etcd_storage_events_total:
  brief: Total number of events sent by this member
  custom: true
  description: Total number of events sent by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_events_total

etcd_storage_index_compaction_pause_duration_milliseconds:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_index_compaction_pause_duration_milliseconds

etcd_storage_index_compaction_pause_duration_milliseconds_bucket:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_index_compaction_pause_duration_milliseconds_bucket

etcd_storage_index_compaction_pause_duration_milliseconds_count:
  brief: Bucketed histogram of index compaction pause duration
  custom: true
  description: Bucketed histogram of index compaction pause duration. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_index_compaction_pause_duration_milliseconds_count

etcd_storage_keys_total:
  brief: Total number of keys
  custom: true
  description: Total number of keys.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_keys_total

etcd_storage_pending_events_total:
  brief: Total number of pending events to be sent
  custom: true
  description: Total number of pending events to be sent.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_pending_events_total

etcd_storage_put_total:
  brief: Total number of puts seen by this member
  custom: true
  description: Total number of puts seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_put_total

etcd_storage_range_total:
  brief: Total number of ranges seen by this member
  custom: true
  description: Total number of ranges seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_range_total

etcd_storage_slow_watcher_total:
  brief: Total number of unsynced slow watchers
  custom: true
  description: Total number of unsynced slow watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_slow_watcher_total

etcd_storage_txn_total:
  brief: Total number of txns seen by this member
  custom: true
  description: Total number of txns seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_storage_txn_total

etcd_storage_watch_stream_total:
  brief: Total number of watch streams
  custom: true
  description: Total number of watch streams.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_watch_stream_total

etcd_storage_watcher_total:
  brief: Total number of watchers
  custom: true
  description: Total number of watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_storage_watcher_total

etcd_store_expires_total:
  brief: Total number of expired keys
  custom: true
  description: Total number of expired keys.
  metric_type: cumulative
  monitor: etcd
  title: etcd_store_expires_total

etcd_store_reads_total:
  brief: Total number of reads action by (get/getRecursive), local to this member
  custom: true
  description: Total number of reads action by (get/getRecursive), local to this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_store_reads_total

etcd_store_watch_requests_total:
  brief: Total number of incoming watch requests (new or reestablished)
  custom: true
  description: Total number of incoming watch requests (new or reestablished).
  metric_type: cumulative
  monitor: etcd
  title: etcd_store_watch_requests_total

etcd_store_watchers:
  brief: Count of currently active watchers
  custom: true
  description: Count of currently active watchers.
  metric_type: gauge
  monitor: etcd
  title: etcd_store_watchers

etcd_store_writes_total:
  brief: Total number of writes (e.g
  custom: true
  description: Total number of writes (e.g. set/compareAndDelete) seen by this member.
  metric_type: cumulative
  monitor: etcd
  title: etcd_store_writes_total

etcd_wal_fsync_durations_seconds:
  brief: The latency distributions of fsync called by wal
  custom: true
  description: The latency distributions of fsync called by wal. (sum)
  metric_type: cumulative
  monitor: etcd
  title: etcd_wal_fsync_durations_seconds

etcd_wal_fsync_durations_seconds_bucket:
  brief: The latency distributions of fsync called by wal
  custom: true
  description: The latency distributions of fsync called by wal. (bucket)
  metric_type: cumulative
  monitor: etcd
  title: etcd_wal_fsync_durations_seconds_bucket

etcd_wal_fsync_durations_seconds_count:
  brief: The latency distributions of fsync called by wal
  custom: true
  description: The latency distributions of fsync called by wal. (count)
  metric_type: cumulative
  monitor: etcd
  title: etcd_wal_fsync_durations_seconds_count

etcd_wal_last_index_saved:
  brief: The index of the last entry saved by wal
  custom: true
  description: The index of the last entry saved by wal.
  metric_type: gauge
  monitor: etcd
  title: etcd_wal_last_index_saved

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: etcd
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: etcd
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_quantile:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (quantized)
  metric_type: gauge
  monitor: etcd
  title: go_gc_duration_seconds_quantile

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: etcd
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment.
  metric_type: gauge
  monitor: etcd
  title: go_info

go_memstats_alloc_bytes:
  brief: Number of bytes allocated and still in use
  custom: true
  description: Number of bytes allocated and still in use.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: etcd
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: etcd
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_released_bytes

go_memstats_heap_released_bytes_total:
  brief: Total number of heap bytes released to OS
  custom: true
  description: Total number of heap bytes released to OS.
  metric_type: cumulative
  monitor: etcd
  title: go_memstats_heap_released_bytes_total

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: etcd
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: etcd
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system.
  metric_type: gauge
  monitor: etcd
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created.
  metric_type: gauge
  monitor: etcd
  title: go_threads

grpc_server_handled_total:
  brief: Total number of RPCs completed on the server, regardless of success or failure
  custom: false
  description: Total number of RPCs completed on the server, regardless of success
    or failure.
  metric_type: cumulative
  monitor: etcd
  title: grpc_server_handled_total

grpc_server_msg_received_total:
  brief: Total number of RPC stream messages received on the server
  custom: true
  description: Total number of RPC stream messages received on the server.
  metric_type: cumulative
  monitor: etcd
  title: grpc_server_msg_received_total

grpc_server_msg_sent_total:
  brief: Total number of gRPC stream messages sent by the server
  custom: true
  description: Total number of gRPC stream messages sent by the server.
  metric_type: cumulative
  monitor: etcd
  title: grpc_server_msg_sent_total

grpc_server_started_total:
  brief: Total number of RPCs started on the server
  custom: false
  description: Total number of RPCs started on the server.
  metric_type: cumulative
  monitor: etcd
  title: grpc_server_started_total

http_request_duration_microseconds:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (sum)
  metric_type: cumulative
  monitor: etcd
  title: http_request_duration_microseconds

http_request_duration_microseconds_count:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (count)
  metric_type: cumulative
  monitor: etcd
  title: http_request_duration_microseconds_count

http_request_duration_microseconds_quantile:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (quantized)
  metric_type: gauge
  monitor: etcd
  title: http_request_duration_microseconds_quantile

http_request_size_bytes:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (sum)
  metric_type: cumulative
  monitor: etcd
  title: http_request_size_bytes

http_request_size_bytes_count:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (count)
  metric_type: cumulative
  monitor: etcd
  title: http_request_size_bytes_count

http_request_size_bytes_quantile:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (quantized)
  metric_type: gauge
  monitor: etcd
  title: http_request_size_bytes_quantile

http_requests_total:
  brief: Total number of HTTP requests made
  custom: true
  description: Total number of HTTP requests made.
  metric_type: cumulative
  monitor: etcd
  title: http_requests_total

http_response_size_bytes:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (sum)
  metric_type: cumulative
  monitor: etcd
  title: http_response_size_bytes

http_response_size_bytes_count:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (count)
  metric_type: cumulative
  monitor: etcd
  title: http_response_size_bytes_count

http_response_size_bytes_quantile:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (quantized)
  metric_type: gauge
  monitor: etcd
  title: http_response_size_bytes_quantile

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds.
  metric_type: cumulative
  monitor: etcd
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: etcd
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: etcd
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: etcd
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: etcd
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: etcd
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes.
  metric_type: gauge
  monitor: etcd
  title: process_virtual_memory_max_bytes

promhttp_metric_handler_requests_in_flight:
  brief: Current number of scrapes being served
  custom: true
  description: Current number of scrapes being served.
  metric_type: gauge
  monitor: etcd
  title: promhttp_metric_handler_requests_in_flight

promhttp_metric_handler_requests_total:
  brief: Total number of scrapes by HTTP status code
  custom: true
  description: Total number of scrapes by HTTP status code.
  metric_type: cumulative
  monitor: etcd
  title: promhttp_metric_handler_requests_total


memstats.alloc:
  brief: Bytes of allocated heap objects
  custom: true
  description: Bytes of allocated heap objects. Same as memstats.heap_alloc
  metric_type: gauge
  monitor: expvar
  title: memstats.alloc

memstats.buck_hash_sys:
  brief: Bytes of memory in profiling bucket hash tables
  custom: false
  description: Bytes of memory in profiling bucket hash tables
  metric_type: gauge
  monitor: expvar
  title: memstats.buck_hash_sys

memstats.by_size.frees:
  brief: Cumulative count of heap objects freed in a class
  custom: true
  description: Cumulative count of heap objects freed in a class. The class is identified
    by dimension class and it is as described for metric memstats.by_size.size
  metric_type: counter
  monitor: expvar
  title: memstats.by_size.frees

memstats.by_size.mallocs:
  brief: Cumulative count of heap objects allocated in a class
  custom: true
  description: Cumulative count of heap objects allocated in a class. The class is
    identified by dimension class and it is as described for metric memstats.by_size.size
  metric_type: counter
  monitor: expvar
  title: memstats.by_size.mallocs

memstats.by_size.size:
  brief: The maximum byte size of a class as identified by dimension class
  custom: true
  description: The maximum byte size of a class as identified by dimension class.
    It is the class interval upper limit. The values of dimension class are numbers
    between 0 and 60 inclusive. Consecutive classes are of consecutive dimension class
    values. The lower limit of a class is the upper limit of the consecutive class
    below. Metrics memstats.by_size.size, memstats.by_size.mallocs and memstats.by_size.frees
    of the same class are related
  metric_type: counter
  monitor: expvar
  title: memstats.by_size.size

memstats.debug_gc:
  brief: memstats.debug_gc is currently unused
  custom: true
  description: memstats.debug_gc is currently unused
  metric_type: gauge
  monitor: expvar
  title: memstats.debug_gc

memstats.enable_gc:
  brief: Boolean that indicates that GC is enabled
  custom: true
  description: Boolean that indicates that GC is enabled. It is always true, even
    if GOGC=off
  metric_type: gauge
  monitor: expvar
  title: memstats.enable_gc

memstats.frees:
  brief: Cumulative count of heap objects freed
  custom: false
  description: Cumulative count of heap objects freed
  metric_type: counter
  monitor: expvar
  title: memstats.frees

memstats.gc_sys:
  brief: Bytes of memory in garbage collection metadata
  custom: false
  description: Bytes of memory in garbage collection metadata
  metric_type: gauge
  monitor: expvar
  title: memstats.gc_sys

memstats.gccpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: false
  description: The fraction of this program's available CPU time used by the GC since
    the program started
  metric_type: gauge
  monitor: expvar
  title: memstats.gccpu_fraction

memstats.heap_alloc:
  brief: Bytes of allocated heap objects
  custom: false
  description: Bytes of allocated heap objects
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_alloc

memstats.heap_idle:
  brief: Bytes in idle (unused) spans
  custom: false
  description: Bytes in idle (unused) spans
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_idle

memstats.heap_inuse:
  brief: Bytes in in-use spans
  custom: false
  description: Bytes in in-use spans
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_inuse

memstats.heap_objects:
  brief: Number of allocated heap objects
  custom: false
  description: Number of allocated heap objects
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_objects

memstats.heap_released:
  brief: Bytes of physical memory returned to the OS
  custom: false
  description: Bytes of physical memory returned to the OS
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_released

memstats.heap_sys:
  brief: Bytes of heap memory obtained from the OS
  custom: false
  description: Bytes of heap memory obtained from the OS
  metric_type: gauge
  monitor: expvar
  title: memstats.heap_sys

memstats.last_gc:
  brief: The time the last garbage collection finished, as nanoseconds since 1970
    (the UNIX epoch)
  custom: true
  description: The time the last garbage collection finished, as nanoseconds since
    1970 (the UNIX epoch)
  metric_type: gauge
  monitor: expvar
  title: memstats.last_gc

memstats.lookups:
  brief: Number of pointer lookups performed by the runtime
  custom: true
  description: Number of pointer lookups performed by the runtime
  metric_type: counter
  monitor: expvar
  title: memstats.lookups

memstats.m_cache_inuse:
  brief: Bytes of allocated mcache structures
  custom: false
  description: Bytes of allocated mcache structures
  metric_type: gauge
  monitor: expvar
  title: memstats.m_cache_inuse

memstats.m_cache_sys:
  brief: Bytes of memory obtained from the OS for mcache structures
  custom: false
  description: Bytes of memory obtained from the OS for mcache structures
  metric_type: gauge
  monitor: expvar
  title: memstats.m_cache_sys

memstats.m_span_inuse:
  brief: Bytes of allocated mspan structures
  custom: false
  description: Bytes of allocated mspan structures
  metric_type: gauge
  monitor: expvar
  title: memstats.m_span_inuse

memstats.m_span_sys:
  brief: Bytes of memory obtained from the OS for mspan
  custom: false
  description: Bytes of memory obtained from the OS for mspan
  metric_type: gauge
  monitor: expvar
  title: memstats.m_span_sys

memstats.mallocs:
  brief: Cumulative count of heap objects allocated
  custom: false
  description: Cumulative count of heap objects allocated
  metric_type: counter
  monitor: expvar
  title: memstats.mallocs

memstats.most_recent_gc_pause_end:
  brief: Most recent GC pause end time, as nanoseconds since 1970 (the UNIX epoch)
  custom: true
  description: Most recent GC pause end time, as nanoseconds since 1970 (the UNIX
    epoch)
  metric_type: gauge
  monitor: expvar
  title: memstats.most_recent_gc_pause_end

memstats.most_recent_gc_pause_ns:
  brief: Most recent GC stop-the-world pause time in nanoseconds
  custom: false
  description: Most recent GC stop-the-world pause time in nanoseconds
  metric_type: gauge
  monitor: expvar
  title: memstats.most_recent_gc_pause_ns

memstats.next_gc:
  brief: Target heap size of the next GC cycle
  custom: false
  description: Target heap size of the next GC cycle
  metric_type: gauge
  monitor: expvar
  title: memstats.next_gc

memstats.num_forced_gc:
  brief: Number of GC cycles that were forced by the application calling the GC function
  custom: false
  description: Number of GC cycles that were forced by the application calling the
    GC function
  metric_type: counter
  monitor: expvar
  title: memstats.num_forced_gc

memstats.num_gc:
  brief: Number of completed GC cycles
  custom: false
  description: Number of completed GC cycles
  metric_type: counter
  monitor: expvar
  title: memstats.num_gc

memstats.other_sys:
  brief: Bytes of memory in miscellaneous off-heap runtime allocations
  custom: false
  description: Bytes of memory in miscellaneous off-heap runtime allocations
  metric_type: gauge
  monitor: expvar
  title: memstats.other_sys

memstats.pause_total_ns:
  brief: Cumulative nanoseconds in GC stop-the-world pauses since the program started
  custom: true
  description: Cumulative nanoseconds in GC stop-the-world pauses since the program
    started
  metric_type: counter
  monitor: expvar
  title: memstats.pause_total_ns

memstats.stack_inuse:
  brief: Bytes in stack spans
  custom: false
  description: Bytes in stack spans
  metric_type: gauge
  monitor: expvar
  title: memstats.stack_inuse

memstats.stack_sys:
  brief: Bytes of stack memory obtained from the OS
  custom: false
  description: Bytes of stack memory obtained from the OS
  metric_type: gauge
  monitor: expvar
  title: memstats.stack_sys

memstats.sys:
  brief: total bytes of memory obtained from the OS
  custom: false
  description: total bytes of memory obtained from the OS
  metric_type: gauge
  monitor: expvar
  title: memstats.sys

memstats.total_alloc:
  brief: Cumulative bytes allocated for heap objects
  custom: true
  description: Cumulative bytes allocated for heap objects
  metric_type: counter
  monitor: expvar
  title: memstats.total_alloc


df_complex.free:
  brief: Free disk space in bytes
  custom: false
  description: Free disk space in bytes
  metric_type: gauge
  monitor: filesystems
  title: df_complex.free

df_complex.reserved:
  brief: Measures disk space in bytes reserved for the super-user on this file system
  custom: true
  description: Measures disk space in bytes reserved for the super-user on this file
    system.
  metric_type: gauge
  monitor: filesystems
  title: df_complex.reserved

df_complex.used:
  brief: Used disk space in bytes
  custom: false
  description: Used disk space in bytes
  metric_type: gauge
  monitor: filesystems
  title: df_complex.used

df_inodes.free:
  brief: (Linux Only) Number of inodes that are free
  custom: true
  description: (Linux Only) Number of inodes that are free.
  metric_type: gauge
  monitor: filesystems
  title: df_inodes.free

df_inodes.used:
  brief: (Linux Only) Number of inodes that are used
  custom: true
  description: (Linux Only) Number of inodes that are used.
  metric_type: gauge
  monitor: filesystems
  title: df_inodes.used

disk.summary_utilization:
  brief: Percent of disk space utilized on all volumes on this host
  custom: false
  description: Percent of disk space utilized on all volumes on this host.
  metric_type: gauge
  monitor: filesystems
  title: disk.summary_utilization

disk.utilization:
  brief: Percent of disk used on this volume
  custom: false
  description: Percent of disk used on this volume.
  metric_type: gauge
  monitor: filesystems
  title: disk.utilization

percent_bytes.free:
  brief: Free disk space on the file system, expressed as a percentage
  custom: true
  description: Free disk space on the file system, expressed as a percentage.
  metric_type: gauge
  monitor: filesystems
  title: percent_bytes.free

percent_bytes.reserved:
  brief: Measures disk space reserved for the super-user as a percentage of total
    disk space of this file system
  custom: true
  description: Measures disk space reserved for the super-user as a percentage of
    total disk space of this file system.
  metric_type: gauge
  monitor: filesystems
  title: percent_bytes.reserved

percent_bytes.used:
  brief: Used disk space on the file system, expressed as a percentage
  custom: true
  description: Used disk space on the file system, expressed as a percentage.
  metric_type: gauge
  monitor: filesystems
  title: percent_bytes.used

percent_inodes.free:
  brief: (Linux Only) Free inodes on the file system, expressed as a percentage
  custom: true
  description: (Linux Only) Free inodes on the file system, expressed as a percentage.
  metric_type: gauge
  monitor: filesystems
  title: percent_inodes.free

percent_inodes.used:
  brief: (Linux Only) Used inodes on the file system, expressed as a percentage
  custom: true
  description: (Linux Only) Used inodes on the file system, expressed as a percentage.
  metric_type: gauge
  monitor: filesystems
  title: percent_inodes.used


gitaly_authentications:
  brief: Counts of of Gitaly request authentication attempts
  custom: true
  description: Counts of of Gitaly request authentication attempts
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_authentications

gitaly_connections_total:
  brief: Total number of connections accepted by this Gitaly process
  custom: true
  description: Total number of connections accepted by this Gitaly process
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_connections_total

gitaly_service_client_requests:
  brief: Counter of client requests received by client, call_site, auth version, and
    response code
  custom: true
  description: Counter of client requests received by client, call_site, auth version,
    and response code
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_service_client_requests

gitaly_smarthttp_deepen_count:
  brief: Number of git-upload-pack requests processed that contained a 'deepen' message
  custom: true
  description: Number of git-upload-pack requests processed that contained a 'deepen'
    message
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_smarthttp_deepen_count

gitaly_spawn_timeout_count:
  brief: Number of process spawn timeouts
  custom: true
  description: Number of process spawn timeouts
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_spawn_timeout_count

gitaly_supervisor_health_checks:
  brief: Count of Gitaly supervisor health checks
  custom: false
  description: Count of Gitaly supervisor health checks
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_supervisor_health_checks

gitaly_supervisor_rss_bytes:
  brief: Resident set size of supervised processes, in bytes
  custom: true
  description: Resident set size of supervised processes, in bytes
  metric_type: gauge
  monitor: gitlab-gitaly
  title: gitaly_supervisor_rss_bytes

gitaly_supervisor_starts_total:
  brief: Number of starts of supervised processes
  custom: true
  description: Number of starts of supervised processes
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: gitaly_supervisor_starts_total

gitlab_build_info:
  brief: Current build info for this GitLab Service
  custom: true
  description: Current build info for this GitLab Service
  metric_type: gauge
  monitor: gitlab-gitaly
  title: gitlab_build_info

grpc_server_handled_total:
  brief: Total number of RPCs completed on the server, regardless of success or failure
  custom: false
  description: Total number of RPCs completed on the server, regardless of success
    or failure
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: grpc_server_handled_total

grpc_server_msg_received_total:
  brief: Total number of RPC stream messages received on the server
  custom: true
  description: Total number of RPC stream messages received on the server
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: grpc_server_msg_received_total

grpc_server_msg_sent_total:
  brief: Total number of gRPC stream messages sent by the server
  custom: true
  description: Total number of gRPC stream messages sent by the server
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: grpc_server_msg_sent_total

grpc_server_started_total:
  brief: Total number of RPCs started on the server
  custom: true
  description: Total number of RPCs started on the server
  metric_type: cumulative
  monitor: gitlab-gitaly
  title: grpc_server_started_total


gitlab_runner_api_request_statuses_total:
  brief: The total number of API requests, partitioned by runner, endpoint and status
  custom: true
  description: The total number of API requests, partitioned by runner, endpoint and
    status
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_api_request_statuses_total

gitlab_runner_autoscaling_machine_creation_duration_seconds:
  brief: Histogram of machine creation time
  custom: true
  description: Histogram of machine creation time
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_autoscaling_machine_creation_duration_seconds

gitlab_runner_autoscaling_machine_creation_duration_seconds_bucket:
  brief: Histogram of machine creation time
  custom: true
  description: Histogram of machine creation time
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_autoscaling_machine_creation_duration_seconds_bucket

gitlab_runner_autoscaling_machine_creation_duration_seconds_count:
  brief: Histogram of machine creation time
  custom: true
  description: Histogram of machine creation time
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_autoscaling_machine_creation_duration_seconds_count

gitlab_runner_autoscaling_machine_states:
  brief: The current number of machines per state in this provider
  custom: true
  description: The current number of machines per state in this provider
  metric_type: gauge
  monitor: gitlab-runner
  title: gitlab_runner_autoscaling_machine_states

gitlab_runner_concurrent:
  brief: The current value of concurrent setting
  custom: true
  description: The current value of concurrent setting
  metric_type: gauge
  monitor: gitlab-runner
  title: gitlab_runner_concurrent

gitlab_runner_errors_total:
  brief: The number of catched errors
  custom: false
  description: The number of catched errors
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_errors_total

gitlab_runner_limit:
  brief: The current value of concurrent setting
  custom: true
  description: The current value of concurrent setting
  metric_type: gauge
  monitor: gitlab-runner
  title: gitlab_runner_limit

gitlab_runner_request_concurrency:
  brief: The current number of concurrent requests for a new job
  custom: false
  description: The current number of concurrent requests for a new job
  metric_type: gauge
  monitor: gitlab-runner
  title: gitlab_runner_request_concurrency

gitlab_runner_request_concurrency_exceeded_total:
  brief: Counter tracking exceeding of request concurrency
  custom: true
  description: Counter tracking exceeding of request concurrency
  metric_type: cumulative
  monitor: gitlab-runner
  title: gitlab_runner_request_concurrency_exceeded_total

gitlab_runner_version_info:
  brief: A metric with a constant '1' value labeled by different build stats fields
  custom: true
  description: A metric with a constant '1' value labeled by different build stats
    fields
  metric_type: gauge
  monitor: gitlab-runner
  title: gitlab_runner_version_info


gitaly_controller_action_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitaly_controller_action_duration_seconds

gitaly_controller_action_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitaly_controller_action_duration_seconds_bucket

gitaly_controller_action_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitaly_controller_action_duration_seconds_count

gitlab_cache_misses_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_cache_misses_total

gitlab_cache_operation_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_cache_operation_duration_seconds

gitlab_cache_operation_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_cache_operation_duration_seconds_bucket

gitlab_cache_operation_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_cache_operation_duration_seconds_count

gitlab_repository_archive_clean_up_real_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_repository_archive_clean_up_real_duration_seconds

gitlab_repository_archive_clean_up_real_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_repository_archive_clean_up_real_duration_seconds_bucket

gitlab_repository_archive_clean_up_real_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_repository_archive_clean_up_real_duration_seconds_count

gitlab_sql_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_sql_duration_seconds

gitlab_sql_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_sql_duration_seconds_bucket

gitlab_sql_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_sql_duration_seconds_count

gitlab_transaction_cache_read_hit_count_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_transaction_cache_read_hit_count_total

gitlab_transaction_cache_read_miss_count_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_transaction_cache_read_miss_count_total

gitlab_transaction_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_transaction_duration_seconds

gitlab_transaction_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_transaction_duration_seconds_bucket

gitlab_transaction_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-sidekiq
  title: gitlab_transaction_duration_seconds_count

gitlab_transaction_sidekiq_queue_duration_total:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: gitlab-sidekiq
  title: gitlab_transaction_sidekiq_queue_duration_total


gitlab_auth_user_authenticated_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_auth_user_authenticated_total

gitlab_auth_user_unauthenticated_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_auth_user_unauthenticated_total

gitlab_banzai_cacheless_render_real_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_banzai_cacheless_render_real_duration_seconds

gitlab_banzai_cacheless_render_real_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_banzai_cacheless_render_real_duration_seconds_bucket

gitlab_banzai_cacheless_render_real_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_banzai_cacheless_render_real_duration_seconds_count

gitlab_cache_misses_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_cache_misses_total

gitlab_cache_operation_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_cache_operation_duration_seconds

gitlab_cache_operation_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_cache_operation_duration_seconds_bucket

gitlab_cache_operation_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_cache_operation_duration_seconds_count

gitlab_rails_queue_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_rails_queue_duration_seconds

gitlab_rails_queue_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_rails_queue_duration_seconds_bucket

gitlab_rails_queue_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_rails_queue_duration_seconds_count

gitlab_sql_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_sql_duration_seconds

gitlab_sql_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_sql_duration_seconds_bucket

gitlab_sql_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_sql_duration_seconds_count

gitlab_transaction_cache_read_hit_count_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_cache_read_hit_count_total

gitlab_transaction_cache_read_miss_count_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_cache_read_miss_count_total

gitlab_transaction_duration_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_duration_seconds

gitlab_transaction_duration_seconds_bucket:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_duration_seconds_bucket

gitlab_transaction_duration_seconds_count:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_duration_seconds_count

gitlab_transaction_new_redis_connections_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_new_redis_connections_total

gitlab_transaction_rails_queue_duration_total:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: gitlab-unicorn
  title: gitlab_transaction_rails_queue_duration_total

gitlab_transaction_sidekiq_queue_duration_total:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: gitlab-unicorn
  title: gitlab_transaction_sidekiq_queue_duration_total

gitlab_transaction_view_duration_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: gitlab_transaction_view_duration_total

http_requests_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: http_requests_total

job_register_attempts_failed_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: job_register_attempts_failed_total

job_register_attempts_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: job_register_attempts_total

unicorn_active_connections:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: gitlab-unicorn
  title: unicorn_active_connections

unicorn_queued_connections:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: gitlab-unicorn
  title: unicorn_queued_connections

user_session_logins_total:
  brief: ''
  custom: true
  description: ''
  metric_type: cumulative
  monitor: gitlab-unicorn
  title: user_session_logins_total


gitlab_workhorse_builds_register_handler_open:
  brief: Describes how many requests is currently open in given state
  custom: true
  description: Describes how many requests is currently open in given state
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_builds_register_handler_open

gitlab_workhorse_builds_register_handler_requests:
  brief: Describes how many requests in different states hit a register handler
  custom: true
  description: Describes how many requests in different states hit a register handler
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_builds_register_handler_requests

gitlab_workhorse_git_http_sessions_active:
  brief: Number of Git HTTP request-response cycles currently being handled by gitlab-workhorse
  custom: false
  description: Number of Git HTTP request-response cycles currently being handled
    by gitlab-workhorse
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_git_http_sessions_active

gitlab_workhorse_http_in_flight_requests:
  brief: A gauge of requests currently being served by workhorse
  custom: true
  description: A gauge of requests currently being served by workhorse
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_in_flight_requests

gitlab_workhorse_http_request_duration_seconds:
  brief: A histogram of latencies for requests to workhorse
  custom: false
  description: A histogram of latencies for requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_duration_seconds

gitlab_workhorse_http_request_duration_seconds_bucket:
  brief: A histogram of latencies for requests to workhorse
  custom: true
  description: A histogram of latencies for requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_duration_seconds_bucket

gitlab_workhorse_http_request_duration_seconds_count:
  brief: A histogram of latencies for requests to workhorse
  custom: false
  description: A histogram of latencies for requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_duration_seconds_count

gitlab_workhorse_http_request_size_bytes:
  brief: A histogram of sizes of requests to workhorse
  custom: false
  description: A histogram of sizes of requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_size_bytes

gitlab_workhorse_http_request_size_bytes_bucket:
  brief: A histogram of sizes of requests to workhorse
  custom: true
  description: A histogram of sizes of requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_size_bytes_bucket

gitlab_workhorse_http_request_size_bytes_count:
  brief: A histogram of sizes of requests to workhorse
  custom: false
  description: A histogram of sizes of requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_request_size_bytes_count

gitlab_workhorse_http_requests_total:
  brief: A counter for requests to workhorse
  custom: true
  description: A counter for requests to workhorse
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_requests_total

gitlab_workhorse_http_time_to_write_header_seconds:
  brief: A histogram of request durations until the response headers are written
  custom: true
  description: A histogram of request durations until the response headers are written
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_time_to_write_header_seconds

gitlab_workhorse_http_time_to_write_header_seconds_bucket:
  brief: A histogram of request durations until the response headers are written
  custom: true
  description: A histogram of request durations until the response headers are written
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_time_to_write_header_seconds_bucket

gitlab_workhorse_http_time_to_write_header_seconds_count:
  brief: A histogram of request durations until the response headers are written
  custom: true
  description: A histogram of request durations until the response headers are written
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_http_time_to_write_header_seconds_count

gitlab_workhorse_internal_api_failure_response_bytes:
  brief: How many bytes have been returned by upstream GitLab in API failure/rejection
    response bodies
  custom: true
  description: How many bytes have been returned by upstream GitLab in API failure/rejection
    response bodies
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_internal_api_failure_response_bytes

gitlab_workhorse_keywatcher_keywatchers:
  brief: The number of keys that is being watched by gitlab-workhorse
  custom: true
  description: The number of keys that is being watched by gitlab-workhorse
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_keywatcher_keywatchers

gitlab_workhorse_keywather_total_messages:
  brief: How many messages gitlab-workhorse has received in total on pubsub
  custom: true
  description: How many messages gitlab-workhorse has received in total on pubsub
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_keywather_total_messages

gitlab_workhorse_object_storage_upload_bytes:
  brief: How many bytes were sent to object storage
  custom: true
  description: How many bytes were sent to object storage
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_object_storage_upload_bytes

gitlab_workhorse_object_storage_upload_open:
  brief: Describes many object storage requests are open now
  custom: true
  description: Describes many object storage requests are open now
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_object_storage_upload_open

gitlab_workhorse_object_storage_upload_requests:
  brief: How many object storage requests have been processed
  custom: true
  description: How many object storage requests have been processed
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_object_storage_upload_requests

gitlab_workhorse_redis_errors:
  brief: Counts different types of Redis errors encountered by workhorse, by type
    and destination (redis, sentinel)
  custom: true
  description: Counts different types of Redis errors encountered by workhorse, by
    type and destination (redis, sentinel)
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_redis_errors

gitlab_workhorse_redis_total_connections:
  brief: How many connections gitlab-workhorse has opened in total
  custom: true
  description: How many connections gitlab-workhorse has opened in total. Can be used
    to track Redis connection rate for this process
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_redis_total_connections

gitlab_workhorse_send_url_bytes:
  brief: How many bytes were passed with send URL
  custom: true
  description: How many bytes were passed with send URL
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_send_url_bytes

gitlab_workhorse_send_url_open_requests:
  brief: Describes how many send URL requests are open now
  custom: true
  description: Describes how many send URL requests are open now
  metric_type: gauge
  monitor: gitlab-workhorse
  title: gitlab_workhorse_send_url_open_requests

gitlab_workhorse_send_url_requests:
  brief: How many send URL requests have been processed
  custom: true
  description: How many send URL requests have been processed
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_send_url_requests

gitlab_workhorse_static_error_responses:
  brief: How many HTTP responses have been changed to a static error page, by HTTP
    status code
  custom: true
  description: How many HTTP responses have been changed to a static error page, by
    HTTP status code.
  metric_type: cumulative
  monitor: gitlab-workhorse
  title: gitlab_workhorse_static_error_responses


haproxy_active_servers:
  brief: Number of active servers (backend), server is active (server)
  custom: true
  description: Number of active servers (backend), server is active (server). Values
    reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_active_servers

haproxy_backup_servers:
  brief: Number of backup servers (backend), server is backup (server)
  custom: true
  description: Number of backup servers (backend), server is backup (server). Values
    reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_backup_servers

haproxy_bytes_in:
  brief: Total number of incoming bytes
  custom: false
  description: Total number of incoming bytes. Values reported for listeners, frontends,
    backends, and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_bytes_in

haproxy_bytes_out:
  brief: Total number of outgoing bytes
  custom: false
  description: Total number of outgoing bytes. Values reported for listeners, frontends,
    backends, and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_bytes_out

haproxy_check_duration:
  brief: Time in ms took to finish last health check
  custom: true
  description: Time in ms took to finish last health check. Values reported for servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_check_duration

haproxy_client_aborts:
  brief: Number of data transfers aborted by the client
  custom: true
  description: Number of data transfers aborted by the client. Values reported for
    backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_client_aborts

haproxy_compress_bits_per_second_in:
  brief: Corresponds to the HAProxy process `CompressBpsIn` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CompressBpsIn` value given by the
    `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_bits_per_second_in

haproxy_compress_bits_per_second_out:
  brief: Corresponds to the HAProxy process `CompressBpsOut` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CompressBpsOut` value given by
    the `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_bits_per_second_out

haproxy_compress_bypass:
  brief: Number of bytes that bypassed the HTTP compressor (CPU/BW limit)
  custom: true
  description: Number of bytes that bypassed the HTTP compressor (CPU/BW limit). Values
    reported for frontends and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_bypass

haproxy_compress_in:
  brief: Number of HTTP response bytes fed to the compressor
  custom: true
  description: Number of HTTP response bytes fed to the compressor. Values reported
    for frontends and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_in

haproxy_compress_out:
  brief: Number of HTTP response bytes emitted by the compressor
  custom: true
  description: Number of HTTP response bytes emitted by the compressor. Values reported
    for frontends and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_out

haproxy_compress_responses:
  brief: Number of HTTP responses that were compressed
  custom: true
  description: Number of HTTP responses that were compressed. Values reported for
    frontends and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_compress_responses

haproxy_connection_rate:
  brief: Number of connections over the last elapsed second
  custom: true
  description: Number of connections over the last elapsed second. Values reported
    for frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_connection_rate

haproxy_connection_rate_all:
  brief: Corresponds to the HAProxy process `ConnRate` value given by the `show info`
    command issued over UNIX socket
  custom: false
  description: Corresponds to the HAProxy process `ConnRate` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_connection_rate_all

haproxy_connection_rate_max:
  brief: Highest known conn_rate
  custom: true
  description: Highest known conn_rate. Values reported for frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_connection_rate_max

haproxy_connection_total:
  brief: Cumulative number of connections
  custom: true
  description: Cumulative number of connections. Values reported for frontends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_connection_total

haproxy_connections:
  brief: Corresponds to the HAProxy process `CumConns` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CumConns` value given by the `show
    info` command issued over UNIX socket. Cumulative number of connections.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_connections

haproxy_current_connections:
  brief: Corresponds to the HAProxy process `CurrConns` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CurrConns` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_current_connections

haproxy_current_ssl_connections:
  brief: Corresponds to the HAProxy process `CurrSslConns` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CurrSslConns` value given by the
    `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_current_ssl_connections

haproxy_denied_request:
  brief: Number of requests denied because of security concerns
  custom: false
  description: Number of requests denied because of security concerns. For tcp this
    is because of a matched tcp-request content rule. For http this is because of
    a matched http-request or tarpit rule. Values reported for listeners, frontends,
    and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_denied_request

haproxy_denied_response:
  brief: Number of responses denied because of security concerns
  custom: false
  description: Number of responses denied because of security concerns. For http this
    is because of a matched http-request rule, or "option checkcache". Values reported
    for listeners, frontends, backends, and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_denied_response

haproxy_denied_tcp_connections:
  brief: Requests denied by "tcp-request connection" rules
  custom: true
  description: Requests denied by "tcp-request connection" rules. Values reported
    for listeners and frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_denied_tcp_connections

haproxy_denied_tcp_sessions:
  brief: Requests denied by "tcp-request session" rules
  custom: true
  description: Requests denied by "tcp-request session" rules. Values reported for
    listeners and frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_denied_tcp_sessions

haproxy_downtime:
  brief: Total downtime (in seconds)
  custom: true
  description: Total downtime (in seconds). The value for the backend is the downtime
    for the whole backend, not the sum of the server downtime. Values reported for
    backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_downtime

haproxy_error_connections:
  brief: Number of requests that encountered an error trying to connect to a backend
    server
  custom: false
  description: Number of requests that encountered an error trying to connect to a
    backend server. The backend stat is the sum of the stat for all servers of that
    backend, plus any connection errors not associated with a particular server (such
    as the backend having no active servers). Values reported for backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_error_connections

haproxy_error_request:
  brief: Number of request errors
  custom: false
  description: 'Number of request errors. Some of the possible causes are: early termination
    from the client, before the request has been sent, read error from the client,
    client timeout, client closed connection, various bad requests from the client,
    request was tarpitted. Values reported for listeners and frontends.'
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_error_request

haproxy_error_response:
  brief: Number of response errors
  custom: false
  description: 'Number of response errors. haproxy_server_aborts will be counted here
    also. Some other errors are: write error on the client socket (won''t be counted
    for the server stat), failure applying filters to the response. Values reported
    for backends and servers.'
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_error_response

haproxy_failed_checks:
  brief: Number of failed checks
  custom: true
  description: Number of failed checks. (Only counts checks failed when the server
    is up.). Values reported for servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_failed_checks

haproxy_idle_percent:
  brief: Corresponds to the HAProxy process `Idle_pct` value given by the `show info`
    command issued over UNIX socket
  custom: false
  description: Corresponds to the HAProxy process `Idle_pct` value given by the `show
    info` command issued over UNIX socket. Ratio of system polling time versus total
    time.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_idle_percent

haproxy_intercepted_requests:
  brief: Cumulative number of intercepted requests (monitor, stats)
  custom: true
  description: Cumulative number of intercepted requests (monitor, stats). Values
    reported for frontends and backends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_intercepted_requests

haproxy_last_session:
  brief: Number of seconds since last session assigned to server/backend
  custom: true
  description: Number of seconds since last session assigned to server/backend. Values
    reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_last_session

haproxy_max_connection_rate:
  brief: Corresponds to the HAProxy process `MaxConnRate` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `MaxConnRate` value given by the
    `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_max_connection_rate

haproxy_max_connections:
  brief: Corresponds to the HAProxy process `MaxConn` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `MaxConn` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_max_connections

haproxy_max_pipes:
  brief: Corresponds to the HAProxy process `MaxPipes` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `MaxPipes` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_max_pipes

haproxy_max_session_rate:
  brief: Corresponds to the HAProxy process `MaxSessRate` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `MaxSessRate` value given by the
    `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_max_session_rate

haproxy_max_ssl_connections:
  brief: Corresponds to the HAProxy process `MaxSslConns` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `MaxSslConns` value given by the
    `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_max_ssl_connections

haproxy_pipes_free:
  brief: Corresponds to the HAProxy process `PipesFree` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `PipesFree` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_pipes_free

haproxy_pipes_used:
  brief: Corresponds to the HAProxy process `PipesUsed` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `PipesUsed` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_pipes_used

haproxy_queue_current:
  brief: Number of current queued requests
  custom: false
  description: Number of current queued requests. For the backend this reports the
    number queued without a server assigned. Values reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_queue_current

haproxy_queue_limit:
  brief: Configured maxqueue for the server, or nothing in the value is 0 (default,
    meaning no limit)
  custom: true
  description: Configured maxqueue for the server, or nothing in the value is 0 (default,
    meaning no limit). Values reported for servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_queue_limit

haproxy_queue_max:
  brief: The max value of qcur
  custom: true
  description: The max value of qcur. Values reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_queue_max

haproxy_queue_time_average:
  brief: The average queue time in ms over the 1024 last requests
  custom: false
  description: The average queue time in ms over the 1024 last requests. Values reported
    for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_queue_time_average

haproxy_redispatched:
  brief: Number of times a request was redispatched to another server
  custom: false
  description: Number of times a request was redispatched to another server. The server
    value counts the number of times that server was switched away from. Values reported
    for backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_redispatched

haproxy_request_rate:
  brief: HTTP requests per second over last elapsed second
  custom: false
  description: HTTP requests per second over last elapsed second. Values reported
    for frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_request_rate

haproxy_request_rate_max:
  brief: Max number of HTTP requests per second observed
  custom: true
  description: Max number of HTTP requests per second observed. Values reported for
    frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_request_rate_max

haproxy_request_total:
  brief: Total number of HTTP requests received
  custom: true
  description: Total number of HTTP requests received. Values reported for frontends
    and backends.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_request_total

haproxy_requests:
  brief: Corresponds to the HAProxy process `CumReq` value given by the `show info`
    command issued over UNIX socket
  custom: false
  description: Corresponds to the HAProxy process `CumReq` value given by the `show
    info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_requests

haproxy_response_1xx:
  brief: HTTP responses with 1xx code
  custom: true
  description: HTTP responses with 1xx code. Values reported for frontends, backends,
    and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_1xx

haproxy_response_2xx:
  brief: HTTP responses with 2xx code
  custom: false
  description: HTTP responses with 2xx code. Values reported for frontends, backends,
    and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_2xx

haproxy_response_3xx:
  brief: HTTP responses with 3xx code
  custom: true
  description: HTTP responses with 3xx code. Values reported for frontends, backends,
    and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_3xx

haproxy_response_4xx:
  brief: HTTP responses with 4xx code
  custom: false
  description: HTTP responses with 4xx code. Values reported for frontends, backends,
    and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_4xx

haproxy_response_5xx:
  brief: HTTP responses with 5xx code
  custom: false
  description: HTTP responses with 5xx code. Values reported for frontends, backends,
    and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_5xx

haproxy_response_other:
  brief: HTTP responses with other codes (protocol error)
  custom: true
  description: HTTP responses with other codes (protocol error). Values reported for
    frontends, backends, and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_response_other

haproxy_response_time_average:
  brief: The average response time in ms over the 1024 last requests (0 for TCP)
  custom: false
  description: The average response time in ms over the 1024 last requests (0 for
    TCP). Values reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_response_time_average

haproxy_retries:
  brief: Number of times a connection to a server was retried
  custom: false
  description: Number of times a connection to a server was retried. Values reported
    for backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_retries

haproxy_run_queue:
  brief: Corresponds to the HAProxy process `Run_queue` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `Run_queue` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_run_queue

haproxy_server_aborts:
  brief: Number of data transfers aborted by the server (inc. in eresp)
  custom: true
  description: Number of data transfers aborted by the server (inc. in eresp). Values
    reported for backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_server_aborts

haproxy_server_selected_total:
  brief: Total number of times a server was selected, either for new sessions, or
    when re-dispatching
  custom: false
  description: Total number of times a server was selected, either for new sessions,
    or when re-dispatching. The server counter is the number of times that server
    was selected. Values reported for backends and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_server_selected_total

haproxy_session_current:
  brief: Number current sessions
  custom: false
  description: Number current sessions. Values reported for listeners, frontends,
    backends, and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_current

haproxy_session_limit:
  brief: The maximum number of connections allowed, configured with `maxconn`
  custom: true
  description: The maximum number of connections allowed, configured with `maxconn`.
    Values reported for listeners, frontends, backends, and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_limit

haproxy_session_max:
  brief: The max value of scur
  custom: true
  description: The max value of scur. Values reported for listeners, frontends, backends,
    and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_max

haproxy_session_rate:
  brief: Number of sessions per second over last elapsed second
  custom: false
  description: Number of sessions per second over last elapsed second. Values reported
    for frontends, backends, and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_rate

haproxy_session_rate_all:
  brief: Corresponds to the HAProxy process `SessRate` value given by the `show info`
    command issued over UNIX socket
  custom: false
  description: Corresponds to the HAProxy process `SessRate` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_rate_all

haproxy_session_rate_limit:
  brief: Configured limit on new sessions per second
  custom: true
  description: Configured limit on new sessions per second. Values reported for frontends.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_rate_limit

haproxy_session_rate_max:
  brief: Max number of new sessions per second
  custom: true
  description: Max number of new sessions per second. Values reported for frontends,
    backends, and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_rate_max

haproxy_session_time_average:
  brief: The average total session time in ms over the 1024 last requests
  custom: false
  description: The average total session time in ms over the 1024 last requests. Values
    reported for backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_session_time_average

haproxy_session_total:
  brief: The cumulative number of sessions
  custom: true
  description: The cumulative number of sessions. Values reported for listeners, frontends,
    backends, and servers.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_session_total

haproxy_ssl_backend_key_rate:
  brief: Corresponds to the HAProxy process `SslBackendKeyRate` value given by the
    `show info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `SslBackendKeyRate` value given
    by the `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_ssl_backend_key_rate

haproxy_ssl_cache_lookups:
  brief: Corresponds to the HAProxy process `SslCacheLookups` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `SslCacheLookups` value given by
    the `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_ssl_cache_lookups

haproxy_ssl_cache_misses:
  brief: Corresponds to the HAProxy process `SslCacheMisses` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `SslCacheMisses` value given by
    the `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_ssl_cache_misses

haproxy_ssl_connections:
  brief: Corresponds to the HAProxy process `CumSslConns` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `CumSslConns` value given by the
    `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_ssl_connections

haproxy_ssl_frontend_key_rate:
  brief: Corresponds to the HAProxy process `SslFrontendKeyRate` value given by the
    `show info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `SslFrontendKeyRate` value given
    by the `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_ssl_frontend_key_rate

haproxy_ssl_rate:
  brief: Corresponds to the HAProxy process `SslRate` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `SslRate` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_ssl_rate

haproxy_status:
  brief: HAProxy status values derived from the status stat
  custom: true
  description: HAProxy status values derived from the status stat. Status stat values
    `UP`, `UP 1/3`, `UP 2/3`, `OPEN` and `no check` are assigned 1. Values `DOWN`,
    `DOWN 1/2`, `NOLB` and `MAINT` are assigned 0. Values reported for listeners,
    frontends, backends and servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_status

haproxy_tasks:
  brief: Corresponds to the HAProxy process `Tasks` value given by the `show info`
    command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `Tasks` value given by the `show
    info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_tasks

haproxy_throttle:
  brief: Current throttle percentage for the server, when slowstart is active, or
    no value if not in slowstart
  custom: true
  description: Current throttle percentage for the server, when slowstart is active,
    or no value if not in slowstart. Values reported for servers.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_throttle

haproxy_uptime_seconds:
  brief: Corresponds to the HAProxy process `Uptime_sec` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `Uptime_sec` value given by the
    `show info` command issued over UNIX socket.
  metric_type: cumulative
  monitor: haproxy
  title: haproxy_uptime_seconds

haproxy_zlib_memory_usage:
  brief: Corresponds to the HAProxy process `ZlibMemUsage` value given by the `show
    info` command issued over UNIX socket
  custom: true
  description: Corresponds to the HAProxy process `ZlibMemUsage` value given by the
    `show info` command issued over UNIX socket.
  metric_type: gauge
  monitor: haproxy
  title: haproxy_zlib_memory_usage


sfxagent.hostmetadata:
  brief: The time the hostmetadata monitor has been running in seconds
  custom: false
  description: The time the hostmetadata monitor has been running in seconds.  It
    includes dimensional metadata about the host and agent.
  metric_type: gauge
  monitor: host-metadata
  title: sfxagent.hostmetadata


http.cert_expiry:
  brief: Certificate expiry in seconds
  custom: false
  description: Certificate expiry in seconds. This metric is reported only if HTTPS  is
    available (from last followed URL).
  metric_type: gauge
  monitor: http
  title: http.cert_expiry

http.cert_valid:
  brief: Value is 1 if certificate is valid (including expiration test) or 0 else
  custom: false
  description: Value is 1 if certificate is valid (including expiration test) or 0
    else. This metric is reported only if HTTPS is available (from last followed URL).
  metric_type: gauge
  monitor: http
  title: http.cert_valid

http.code_matched:
  brief: Value is 1 if `status_code` value match `desiredCode` set in config
  custom: false
  description: Value is 1 if `status_code` value match `desiredCode` set in config.
    Always reported.
  metric_type: gauge
  monitor: http
  title: http.code_matched

http.content_length:
  brief: HTTP response body length
  custom: false
  description: HTTP response body length. Always reported.
  metric_type: gauge
  monitor: http
  title: http.content_length

http.regex_matched:
  brief: Value is 1 if pattern match in response body
  custom: false
  description: Value is 1 if pattern match in response body. Only reported if `regex`
    is configured.
  metric_type: gauge
  monitor: http
  title: http.regex_matched

http.response_time:
  brief: HTTP response time in seconds
  custom: false
  description: HTTP response time in seconds. Always reported.
  metric_type: gauge
  monitor: http
  title: http.response_time

http.status_code:
  brief: HTTP response status code
  custom: false
  description: HTTP response status code. Always reported.
  metric_type: gauge
  monitor: http
  title: http.status_code


ClusterRoleAggregator_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: ClusterRoleAggregator'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: ClusterRoleAggregator'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_adds_total

ClusterRoleAggregator_depth:
  brief: '(Deprecated) Current depth of workqueue: ClusterRoleAggregator'
  custom: true
  description: '(Deprecated) Current depth of workqueue: ClusterRoleAggregator'
  metric_type: gauge
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_depth

ClusterRoleAggregator_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    ClusterRoleAggregator been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for ClusterRoleAggregator been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_longest_running_processor_microseconds

ClusterRoleAggregator_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueClusterRoleAggregator before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueClusterRoleAggregator
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_queue_latency

ClusterRoleAggregator_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueClusterRoleAggregator before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueClusterRoleAggregator
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_queue_latency_count

ClusterRoleAggregator_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueClusterRoleAggregator before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueClusterRoleAggregator
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_queue_latency_quantile

ClusterRoleAggregator_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: ClusterRoleAggregator'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: ClusterRoleAggregator'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_retries_total

ClusterRoleAggregator_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work ClusterRoleAggregator has done that
    is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work ClusterRoleAggregator has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_unfinished_work_seconds

ClusterRoleAggregator_work_duration:
  brief: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_work_duration

ClusterRoleAggregator_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_work_duration_count

ClusterRoleAggregator_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueClusterRoleAggregator
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: ClusterRoleAggregator_work_duration_quantile

apiserver_audit_event_total:
  brief: Counter of audit events generated and sent to the audit backend
  custom: true
  description: Counter of audit events generated and sent to the audit backend.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_audit_event_total

apiserver_audit_requests_rejected_total:
  brief: Counter of apiserver requests rejected due to an error in audit logging backend
  custom: true
  description: Counter of apiserver requests rejected due to an error in audit logging
    backend.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_audit_requests_rejected_total

apiserver_client_certificate_expiration_seconds:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_client_certificate_expiration_seconds

apiserver_client_certificate_expiration_seconds_bucket:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_client_certificate_expiration_seconds_bucket

apiserver_client_certificate_expiration_seconds_count:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_client_certificate_expiration_seconds_count

apiserver_storage_data_key_generation_duration_seconds:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_duration_seconds

apiserver_storage_data_key_generation_duration_seconds_bucket:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_duration_seconds_bucket

apiserver_storage_data_key_generation_duration_seconds_count:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_duration_seconds_count

apiserver_storage_data_key_generation_failures_total:
  brief: Total number of failed data encryption key(DEK) generation operations
  custom: true
  description: Total number of failed data encryption key(DEK) generation operations.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_failures_total

apiserver_storage_data_key_generation_latencies_microseconds:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_latencies_microseconds

apiserver_storage_data_key_generation_latencies_microseconds_bucket:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_latencies_microseconds_bucket

apiserver_storage_data_key_generation_latencies_microseconds_count:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_data_key_generation_latencies_microseconds_count

apiserver_storage_envelope_transformation_cache_misses_total:
  brief: Total number of cache misses while accessing key decryption key(KEK)
  custom: true
  description: Total number of cache misses while accessing key decryption key(KEK).
  metric_type: cumulative
  monitor: kube-controller-manager
  title: apiserver_storage_envelope_transformation_cache_misses_total

attachdetach_controller_forced_detaches_total:
  brief: Number of times the A/D Controller performed a forced detach
  custom: true
  description: Number of times the A/D Controller performed a forced detach
  metric_type: cumulative
  monitor: kube-controller-manager
  title: attachdetach_controller_forced_detaches_total

authenticated_user_requests_total:
  brief: Counter of authenticated requests broken out by username
  custom: true
  description: Counter of authenticated requests broken out by username.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: authenticated_user_requests_total

bootstrap_signer_queue_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: bootstrap_signer_queue'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: bootstrap_signer_queue'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_adds_total

bootstrap_signer_queue_depth:
  brief: '(Deprecated) Current depth of workqueue: bootstrap_signer_queue'
  custom: true
  description: '(Deprecated) Current depth of workqueue: bootstrap_signer_queue'
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_depth

bootstrap_signer_queue_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    bootstrap_signer_queue been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for bootstrap_signer_queue been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_longest_running_processor_microseconds

bootstrap_signer_queue_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_queue_latency

bootstrap_signer_queue_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_queue_latency_count

bootstrap_signer_queue_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuebootstrap_signer_queue
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_queue_latency_quantile

bootstrap_signer_queue_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: bootstrap_signer_queue'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: bootstrap_signer_queue'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_retries_total

bootstrap_signer_queue_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work bootstrap_signer_queue has done that
    is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work bootstrap_signer_queue has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_unfinished_work_seconds

bootstrap_signer_queue_work_duration:
  brief: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_work_duration

bootstrap_signer_queue_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_work_duration_count

bootstrap_signer_queue_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuebootstrap_signer_queue
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_queue_work_duration_quantile

bootstrap_signer_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for bootstrap_signer
  custom: true
  description: A metric measuring the saturation of the rate limiter for bootstrap_signer
  metric_type: gauge
  monitor: kube-controller-manager
  title: bootstrap_signer_rate_limiter_use

certificate_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: certificate'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: certificate'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_adds_total

certificate_depth:
  brief: '(Deprecated) Current depth of workqueue: certificate'
  custom: true
  description: '(Deprecated) Current depth of workqueue: certificate'
  metric_type: gauge
  monitor: kube-controller-manager
  title: certificate_depth

certificate_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    certificate been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for certificate been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: certificate_longest_running_processor_microseconds

certificate_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuecertificate before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecertificate before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_queue_latency

certificate_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuecertificate before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecertificate before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_queue_latency_count

certificate_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuecertificate before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecertificate before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: certificate_queue_latency_quantile

certificate_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: certificate'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: certificate'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_retries_total

certificate_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work certificate has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work certificate has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: certificate_unfinished_work_seconds

certificate_work_duration:
  brief: (Deprecated) How long processing an item from workqueuecertificate takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecertificate
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_work_duration

certificate_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuecertificate takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecertificate
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: certificate_work_duration_count

certificate_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuecertificate takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecertificate
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: certificate_work_duration_quantile

claims_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: claims'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: claims'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: claims_adds_total

claims_depth:
  brief: '(Deprecated) Current depth of workqueue: claims'
  custom: true
  description: '(Deprecated) Current depth of workqueue: claims'
  metric_type: gauge
  monitor: kube-controller-manager
  title: claims_depth

claims_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    claims been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for claims been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: claims_longest_running_processor_microseconds

claims_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueclaims before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueclaims before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: claims_queue_latency

claims_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueclaims before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueclaims before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: claims_queue_latency_count

claims_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueclaims before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueclaims before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: claims_queue_latency_quantile

claims_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work claims has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work claims has done that is in progress
    and hasn't been observed by work_duration. Large values indicate stuck threads.
    One can deduce the number of stuck threads by observing the rate at which this
    increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: claims_unfinished_work_seconds

claims_work_duration:
  brief: (Deprecated) How long processing an item from workqueueclaims takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueclaims takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: claims_work_duration

claims_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueclaims takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueclaims takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: claims_work_duration_count

claims_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueclaims takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueclaims takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: claims_work_duration_quantile

cronjob_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for cronjob_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for cronjob_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: cronjob_controller_rate_limiter_use

daemon_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for daemon_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for daemon_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemon_controller_rate_limiter_use

daemonset_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: daemonset'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: daemonset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_adds_total

daemonset_depth:
  brief: '(Deprecated) Current depth of workqueue: daemonset'
  custom: true
  description: '(Deprecated) Current depth of workqueue: daemonset'
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemonset_depth

daemonset_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    daemonset been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for daemonset been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemonset_longest_running_processor_microseconds

daemonset_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuedaemonset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedaemonset before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_queue_latency

daemonset_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuedaemonset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedaemonset before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_queue_latency_count

daemonset_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuedaemonset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedaemonset before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemonset_queue_latency_quantile

daemonset_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: daemonset'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: daemonset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_retries_total

daemonset_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work daemonset has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work daemonset has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemonset_unfinished_work_seconds

daemonset_work_duration:
  brief: (Deprecated) How long processing an item from workqueuedaemonset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedaemonset takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_work_duration

daemonset_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuedaemonset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedaemonset takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: daemonset_work_duration_count

daemonset_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuedaemonset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedaemonset takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: daemonset_work_duration_quantile

deployment_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: deployment'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: deployment'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_adds_total

deployment_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for deployment_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for deployment_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_controller_rate_limiter_use

deployment_depth:
  brief: '(Deprecated) Current depth of workqueue: deployment'
  custom: true
  description: '(Deprecated) Current depth of workqueue: deployment'
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_depth

deployment_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    deployment been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for deployment been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_longest_running_processor_microseconds

deployment_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuedeployment before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedeployment before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_queue_latency

deployment_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuedeployment before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedeployment before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_queue_latency_count

deployment_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuedeployment before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedeployment before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_queue_latency_quantile

deployment_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: deployment'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: deployment'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_retries_total

deployment_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work deployment has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work deployment has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_unfinished_work_seconds

deployment_work_duration:
  brief: (Deprecated) How long processing an item from workqueuedeployment takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedeployment takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_work_duration

deployment_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuedeployment takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedeployment takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: deployment_work_duration_count

deployment_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuedeployment takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedeployment takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: deployment_work_duration_quantile

disruption_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: disruption'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: disruption'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_adds_total

disruption_depth:
  brief: '(Deprecated) Current depth of workqueue: disruption'
  custom: true
  description: '(Deprecated) Current depth of workqueue: disruption'
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_depth

disruption_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    disruption been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for disruption been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_longest_running_processor_microseconds

disruption_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuedisruption before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_queue_latency

disruption_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuedisruption before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_queue_latency_count

disruption_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuedisruption before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_queue_latency_quantile

disruption_recheck_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: disruption_recheck'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: disruption_recheck'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_adds_total

disruption_recheck_depth:
  brief: '(Deprecated) Current depth of workqueue: disruption_recheck'
  custom: true
  description: '(Deprecated) Current depth of workqueue: disruption_recheck'
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_recheck_depth

disruption_recheck_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    disruption_recheck been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for disruption_recheck been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_recheck_longest_running_processor_microseconds

disruption_recheck_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuedisruption_recheck before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption_recheck
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_queue_latency

disruption_recheck_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuedisruption_recheck before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption_recheck
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_queue_latency_count

disruption_recheck_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuedisruption_recheck before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuedisruption_recheck
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_recheck_queue_latency_quantile

disruption_recheck_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: disruption_recheck'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: disruption_recheck'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_retries_total

disruption_recheck_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work disruption_recheck has done that is
    in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work disruption_recheck has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_recheck_unfinished_work_seconds

disruption_recheck_work_duration:
  brief: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_work_duration

disruption_recheck_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_recheck_work_duration_count

disruption_recheck_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption_recheck
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_recheck_work_duration_quantile

disruption_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: disruption'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: disruption'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_retries_total

disruption_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work disruption has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work disruption has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_unfinished_work_seconds

disruption_work_duration:
  brief: (Deprecated) How long processing an item from workqueuedisruption takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_work_duration

disruption_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuedisruption takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: disruption_work_duration_count

disruption_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuedisruption takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuedisruption takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: disruption_work_duration_quantile

endpoint_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: endpoint'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: endpoint'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_adds_total

endpoint_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for endpoint_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for endpoint_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_controller_rate_limiter_use

endpoint_depth:
  brief: '(Deprecated) Current depth of workqueue: endpoint'
  custom: true
  description: '(Deprecated) Current depth of workqueue: endpoint'
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_depth

endpoint_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    endpoint been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for endpoint been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_longest_running_processor_microseconds

endpoint_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueendpoint before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueendpoint before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_queue_latency

endpoint_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueendpoint before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueendpoint before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_queue_latency_count

endpoint_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueendpoint before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueendpoint before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_queue_latency_quantile

endpoint_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: endpoint'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: endpoint'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_retries_total

endpoint_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work endpoint has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work endpoint has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_unfinished_work_seconds

endpoint_work_duration:
  brief: (Deprecated) How long processing an item from workqueueendpoint takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueendpoint takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_work_duration

endpoint_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueendpoint takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueendpoint takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: endpoint_work_duration_count

endpoint_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueendpoint takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueendpoint takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: endpoint_work_duration_quantile

garbage_collector_attempt_to_delete_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_attempt_to_delete'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_attempt_to_delete'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_adds_total

garbage_collector_attempt_to_delete_depth:
  brief: '(Deprecated) Current depth of workqueue: garbage_collector_attempt_to_delete'
  custom: true
  description: '(Deprecated) Current depth of workqueue: garbage_collector_attempt_to_delete'
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_depth

garbage_collector_attempt_to_delete_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    garbage_collector_attempt_to_delete been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for garbage_collector_attempt_to_delete been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_longest_running_processor_microseconds

garbage_collector_attempt_to_delete_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_queue_latency

garbage_collector_attempt_to_delete_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_queue_latency_count

garbage_collector_attempt_to_delete_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_delete
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_queue_latency_quantile

garbage_collector_attempt_to_delete_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_attempt_to_delete'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_attempt_to_delete'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_retries_total

garbage_collector_attempt_to_delete_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work garbage_collector_attempt_to_delete
    has done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work garbage_collector_attempt_to_delete
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_unfinished_work_seconds

garbage_collector_attempt_to_delete_work_duration:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_work_duration

garbage_collector_attempt_to_delete_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_work_duration_count

garbage_collector_attempt_to_delete_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_delete
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_delete_work_duration_quantile

garbage_collector_attempt_to_orphan_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_attempt_to_orphan'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_attempt_to_orphan'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_adds_total

garbage_collector_attempt_to_orphan_depth:
  brief: '(Deprecated) Current depth of workqueue: garbage_collector_attempt_to_orphan'
  custom: true
  description: '(Deprecated) Current depth of workqueue: garbage_collector_attempt_to_orphan'
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_depth

garbage_collector_attempt_to_orphan_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    garbage_collector_attempt_to_orphan been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for garbage_collector_attempt_to_orphan been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_longest_running_processor_microseconds

garbage_collector_attempt_to_orphan_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_queue_latency

garbage_collector_attempt_to_orphan_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_queue_latency_count

garbage_collector_attempt_to_orphan_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_attempt_to_orphan
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_queue_latency_quantile

garbage_collector_attempt_to_orphan_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_attempt_to_orphan'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_attempt_to_orphan'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_retries_total

garbage_collector_attempt_to_orphan_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work garbage_collector_attempt_to_orphan
    has done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work garbage_collector_attempt_to_orphan
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_unfinished_work_seconds

garbage_collector_attempt_to_orphan_work_duration:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_work_duration

garbage_collector_attempt_to_orphan_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_work_duration_count

garbage_collector_attempt_to_orphan_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_attempt_to_orphan
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_attempt_to_orphan_work_duration_quantile

garbage_collector_graph_changes_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_graph_changes'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: garbage_collector_graph_changes'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_adds_total

garbage_collector_graph_changes_depth:
  brief: '(Deprecated) Current depth of workqueue: garbage_collector_graph_changes'
  custom: true
  description: '(Deprecated) Current depth of workqueue: garbage_collector_graph_changes'
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_depth

garbage_collector_graph_changes_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    garbage_collector_graph_changes been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for garbage_collector_graph_changes been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_longest_running_processor_microseconds

garbage_collector_graph_changes_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_queue_latency

garbage_collector_graph_changes_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_queue_latency_count

garbage_collector_graph_changes_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuegarbage_collector_graph_changes
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_queue_latency_quantile

garbage_collector_graph_changes_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_graph_changes'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: garbage_collector_graph_changes'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_retries_total

garbage_collector_graph_changes_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work garbage_collector_graph_changes has
    done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work garbage_collector_graph_changes
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_unfinished_work_seconds

garbage_collector_graph_changes_work_duration:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_work_duration

garbage_collector_graph_changes_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_work_duration_count

garbage_collector_graph_changes_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuegarbage_collector_graph_changes
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: garbage_collector_graph_changes_work_duration_quantile

gc_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for gc_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for gc_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: gc_controller_rate_limiter_use

get_token_count_total:
  brief: Counter of total Token() requests to the alternate token source
  custom: true
  description: Counter of total Token() requests to the alternate token source
  metric_type: cumulative
  monitor: kube-controller-manager
  title: get_token_count_total

get_token_fail_count_total:
  brief: Counter of failed Token() requests to the alternate token source
  custom: true
  description: Counter of failed Token() requests to the alternate token source
  metric_type: cumulative
  monitor: kube-controller-manager
  title: get_token_fail_count_total

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_quantile:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_gc_duration_seconds_quantile

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_info

go_memstats_alloc_bytes:
  brief: Number of bytes allocated and still in use
  custom: true
  description: Number of bytes allocated and still in use.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_released_bytes

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created.
  metric_type: gauge
  monitor: kube-controller-manager
  title: go_threads

horizontalpodautoscaler_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: horizontalpodautoscaler'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: horizontalpodautoscaler'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_adds_total

horizontalpodautoscaler_depth:
  brief: '(Deprecated) Current depth of workqueue: horizontalpodautoscaler'
  custom: true
  description: '(Deprecated) Current depth of workqueue: horizontalpodautoscaler'
  metric_type: gauge
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_depth

horizontalpodautoscaler_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    horizontalpodautoscaler been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for horizontalpodautoscaler been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_longest_running_processor_microseconds

horizontalpodautoscaler_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_queue_latency

horizontalpodautoscaler_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_queue_latency_count

horizontalpodautoscaler_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuehorizontalpodautoscaler
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_queue_latency_quantile

horizontalpodautoscaler_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: horizontalpodautoscaler'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: horizontalpodautoscaler'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_retries_total

horizontalpodautoscaler_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work horizontalpodautoscaler has done that
    is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work horizontalpodautoscaler has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_unfinished_work_seconds

horizontalpodautoscaler_work_duration:
  brief: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_work_duration

horizontalpodautoscaler_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_work_duration_count

horizontalpodautoscaler_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuehorizontalpodautoscaler
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: horizontalpodautoscaler_work_duration_quantile

http_request_duration_microseconds:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_request_duration_microseconds

http_request_duration_microseconds_count:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_request_duration_microseconds_count

http_request_duration_microseconds_quantile:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: http_request_duration_microseconds_quantile

http_request_size_bytes:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_request_size_bytes

http_request_size_bytes_count:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_request_size_bytes_count

http_request_size_bytes_quantile:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: http_request_size_bytes_quantile

http_requests_total:
  brief: Total number of HTTP requests made
  custom: true
  description: Total number of HTTP requests made.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_requests_total

http_response_size_bytes:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_response_size_bytes

http_response_size_bytes_count:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: http_response_size_bytes_count

http_response_size_bytes_quantile:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: http_response_size_bytes_quantile

job_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: job'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: job'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_adds_total

job_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for job_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for job_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_controller_rate_limiter_use

job_depth:
  brief: '(Deprecated) Current depth of workqueue: job'
  custom: true
  description: '(Deprecated) Current depth of workqueue: job'
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_depth

job_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    job been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for job been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_longest_running_processor_microseconds

job_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuejob before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuejob before being requested.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_queue_latency

job_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuejob before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuejob before being requested.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_queue_latency_count

job_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuejob before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuejob before being requested.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_queue_latency_quantile

job_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: job'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: job'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_retries_total

job_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work job has done that is in progress and
    hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work job has done that is in progress
    and hasn't been observed by work_duration. Large values indicate stuck threads.
    One can deduce the number of stuck threads by observing the rate at which this
    increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_unfinished_work_seconds

job_work_duration:
  brief: (Deprecated) How long processing an item from workqueuejob takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuejob takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_work_duration

job_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuejob takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuejob takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: job_work_duration_count

job_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuejob takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuejob takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: job_work_duration_quantile

kubernetes_build_info:
  brief: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running
  custom: true
  description: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: kubernetes_build_info

leader_election_master_status:
  brief: Gauge of if the reporting system is master of the relevant lease, 0 indicates
    backup, 1 indicates master
  custom: true
  description: Gauge of if the reporting system is master of the relevant lease, 0
    indicates backup, 1 indicates master. 'name' is the string used to identify the
    lease. Please make sure to group by name.
  metric_type: gauge
  monitor: kube-controller-manager
  title: leader_election_master_status

namespace_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: namespace'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: namespace'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_adds_total

namespace_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for namespace_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for namespace_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_controller_rate_limiter_use

namespace_depth:
  brief: '(Deprecated) Current depth of workqueue: namespace'
  custom: true
  description: '(Deprecated) Current depth of workqueue: namespace'
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_depth

namespace_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    namespace been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for namespace been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_longest_running_processor_microseconds

namespace_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuenamespace before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenamespace before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_queue_latency

namespace_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuenamespace before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenamespace before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_queue_latency_count

namespace_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuenamespace before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenamespace before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_queue_latency_quantile

namespace_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: namespace'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: namespace'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_retries_total

namespace_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work namespace has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work namespace has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_unfinished_work_seconds

namespace_work_duration:
  brief: (Deprecated) How long processing an item from workqueuenamespace takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenamespace takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_work_duration

namespace_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuenamespace takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenamespace takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: namespace_work_duration_count

namespace_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuenamespace takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenamespace takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: namespace_work_duration_quantile

node_collector_evictions_number_total:
  brief: Number of Node evictions that happened since current instance of NodeController
    started
  custom: true
  description: Number of Node evictions that happened since current instance of NodeController
    started.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_collector_evictions_number_total

node_collector_unhealthy_nodes_in_zone:
  brief: Gauge measuring number of not Ready Nodes per zones
  custom: true
  description: Gauge measuring number of not Ready Nodes per zones.
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_collector_unhealthy_nodes_in_zone

node_collector_zone_health:
  brief: Gauge measuring percentage of healthy nodes per zone
  custom: true
  description: Gauge measuring percentage of healthy nodes per zone.
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_collector_zone_health

node_collector_zone_size:
  brief: Gauge measuring number of registered Nodes per zones
  custom: true
  description: Gauge measuring number of registered Nodes per zones.
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_collector_zone_size

node_lifecycle_controller_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: node_lifecycle_controller'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: node_lifecycle_controller'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_lifecycle_controller_adds_total

node_lifecycle_controller_depth:
  brief: '(Deprecated) Current depth of workqueue: node_lifecycle_controller'
  custom: true
  description: '(Deprecated) Current depth of workqueue: node_lifecycle_controller'
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_depth

node_lifecycle_controller_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    node_lifecycle_controller been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for node_lifecycle_controller been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_longest_running_processor_microseconds

node_lifecycle_controller_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_lifecycle_controller_queue_latency

node_lifecycle_controller_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_lifecycle_controller_queue_latency_count

node_lifecycle_controller_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenode_lifecycle_controller
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_queue_latency_quantile

node_lifecycle_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for node_lifecycle_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for node_lifecycle_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_rate_limiter_use

node_lifecycle_controller_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work node_lifecycle_controller has done
    that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work node_lifecycle_controller has
    done that is in progress and hasn't been observed by work_duration. Large values
    indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_unfinished_work_seconds

node_lifecycle_controller_work_duration:
  brief: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_lifecycle_controller_work_duration

node_lifecycle_controller_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: node_lifecycle_controller_work_duration_count

node_lifecycle_controller_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenode_lifecycle_controller
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: node_lifecycle_controller_work_duration_quantile

noexec_taint_node_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: noexec_taint_node'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: noexec_taint_node'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_node_adds_total

noexec_taint_node_depth:
  brief: '(Deprecated) Current depth of workqueue: noexec_taint_node'
  custom: true
  description: '(Deprecated) Current depth of workqueue: noexec_taint_node'
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_node_depth

noexec_taint_node_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    noexec_taint_node been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for noexec_taint_node been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_node_longest_running_processor_microseconds

noexec_taint_node_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_node_queue_latency

noexec_taint_node_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_node_queue_latency_count

noexec_taint_node_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_node before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_node_queue_latency_quantile

noexec_taint_node_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work noexec_taint_node has done that is
    in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work noexec_taint_node has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_node_unfinished_work_seconds

noexec_taint_node_work_duration:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_node_work_duration

noexec_taint_node_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_node_work_duration_count

noexec_taint_node_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_node
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_node_work_duration_quantile

noexec_taint_pod_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: noexec_taint_pod'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: noexec_taint_pod'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_pod_adds_total

noexec_taint_pod_depth:
  brief: '(Deprecated) Current depth of workqueue: noexec_taint_pod'
  custom: true
  description: '(Deprecated) Current depth of workqueue: noexec_taint_pod'
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_pod_depth

noexec_taint_pod_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    noexec_taint_pod been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for noexec_taint_pod been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_pod_longest_running_processor_microseconds

noexec_taint_pod_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_pod_queue_latency

noexec_taint_pod_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_pod_queue_latency_count

noexec_taint_pod_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuenoexec_taint_pod before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_pod_queue_latency_quantile

noexec_taint_pod_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work noexec_taint_pod has done that is in
    progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work noexec_taint_pod has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_pod_unfinished_work_seconds

noexec_taint_pod_work_duration:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_pod takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_pod
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_pod_work_duration

noexec_taint_pod_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_pod takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_pod
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: noexec_taint_pod_work_duration_count

noexec_taint_pod_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuenoexec_taint_pod takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuenoexec_taint_pod
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: noexec_taint_pod_work_duration_quantile

persistentvolume_protection_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for persistentvolume_protection_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for persistentvolume_protection_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: persistentvolume_protection_controller_rate_limiter_use

persistentvolumeclaim_protection_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for persistentvolumeclaim_protection_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for persistentvolumeclaim_protection_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: persistentvolumeclaim_protection_controller_rate_limiter_use

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes.
  metric_type: gauge
  monitor: kube-controller-manager
  title: process_virtual_memory_max_bytes

pvcprotection_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: pvcprotection'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: pvcprotection'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_adds_total

pvcprotection_depth:
  brief: '(Deprecated) Current depth of workqueue: pvcprotection'
  custom: true
  description: '(Deprecated) Current depth of workqueue: pvcprotection'
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcprotection_depth

pvcprotection_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    pvcprotection been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for pvcprotection been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcprotection_longest_running_processor_microseconds

pvcprotection_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuepvcprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcprotection before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_queue_latency

pvcprotection_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuepvcprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcprotection before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_queue_latency_count

pvcprotection_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuepvcprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcprotection before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcprotection_queue_latency_quantile

pvcprotection_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: pvcprotection'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: pvcprotection'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_retries_total

pvcprotection_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work pvcprotection has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work pvcprotection has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcprotection_unfinished_work_seconds

pvcprotection_work_duration:
  brief: (Deprecated) How long processing an item from workqueuepvcprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcprotection
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_work_duration

pvcprotection_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuepvcprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcprotection
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcprotection_work_duration_count

pvcprotection_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuepvcprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcprotection
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcprotection_work_duration_quantile

pvcs_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: pvcs'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: pvcs'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_adds_total

pvcs_depth:
  brief: '(Deprecated) Current depth of workqueue: pvcs'
  custom: true
  description: '(Deprecated) Current depth of workqueue: pvcs'
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcs_depth

pvcs_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    pvcs been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for pvcs been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcs_longest_running_processor_microseconds

pvcs_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuepvcs before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcs before being requested.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_queue_latency

pvcs_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuepvcs before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcs before being requested.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_queue_latency_count

pvcs_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuepvcs before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvcs before being requested.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcs_queue_latency_quantile

pvcs_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: pvcs'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: pvcs'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_retries_total

pvcs_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work pvcs has done that is in progress and
    hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work pvcs has done that is in progress
    and hasn't been observed by work_duration. Large values indicate stuck threads.
    One can deduce the number of stuck threads by observing the rate at which this
    increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcs_unfinished_work_seconds

pvcs_work_duration:
  brief: (Deprecated) How long processing an item from workqueuepvcs takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcs takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_work_duration

pvcs_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuepvcs takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcs takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvcs_work_duration_count

pvcs_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuepvcs takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvcs takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvcs_work_duration_quantile

pvprotection_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: pvprotection'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: pvprotection'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_adds_total

pvprotection_depth:
  brief: '(Deprecated) Current depth of workqueue: pvprotection'
  custom: true
  description: '(Deprecated) Current depth of workqueue: pvprotection'
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvprotection_depth

pvprotection_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    pvprotection been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for pvprotection been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvprotection_longest_running_processor_microseconds

pvprotection_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuepvprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvprotection before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_queue_latency

pvprotection_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuepvprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvprotection before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_queue_latency_count

pvprotection_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuepvprotection before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuepvprotection before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvprotection_queue_latency_quantile

pvprotection_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: pvprotection'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: pvprotection'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_retries_total

pvprotection_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work pvprotection has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work pvprotection has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvprotection_unfinished_work_seconds

pvprotection_work_duration:
  brief: (Deprecated) How long processing an item from workqueuepvprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvprotection
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_work_duration

pvprotection_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuepvprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvprotection
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: pvprotection_work_duration_count

pvprotection_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuepvprotection takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuepvprotection
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: pvprotection_work_duration_quantile

replicaset_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: replicaset'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: replicaset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_adds_total

replicaset_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for replicaset_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for replicaset_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_controller_rate_limiter_use

replicaset_depth:
  brief: '(Deprecated) Current depth of workqueue: replicaset'
  custom: true
  description: '(Deprecated) Current depth of workqueue: replicaset'
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_depth

replicaset_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    replicaset been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for replicaset been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_longest_running_processor_microseconds

replicaset_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuereplicaset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicaset before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_queue_latency

replicaset_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuereplicaset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicaset before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_queue_latency_count

replicaset_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuereplicaset before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicaset before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_queue_latency_quantile

replicaset_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: replicaset'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: replicaset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_retries_total

replicaset_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work replicaset has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work replicaset has done that is in
    progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_unfinished_work_seconds

replicaset_work_duration:
  brief: (Deprecated) How long processing an item from workqueuereplicaset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicaset takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_work_duration

replicaset_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuereplicaset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicaset takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicaset_work_duration_count

replicaset_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuereplicaset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicaset takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicaset_work_duration_quantile

replication_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for replication_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for replication_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: replication_controller_rate_limiter_use

replicationmanager_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: replicationmanager'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: replicationmanager'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_adds_total

replicationmanager_depth:
  brief: '(Deprecated) Current depth of workqueue: replicationmanager'
  custom: true
  description: '(Deprecated) Current depth of workqueue: replicationmanager'
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicationmanager_depth

replicationmanager_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    replicationmanager been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for replicationmanager been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicationmanager_longest_running_processor_microseconds

replicationmanager_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuereplicationmanager before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicationmanager
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_queue_latency

replicationmanager_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuereplicationmanager before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicationmanager
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_queue_latency_count

replicationmanager_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuereplicationmanager before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuereplicationmanager
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicationmanager_queue_latency_quantile

replicationmanager_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: replicationmanager'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: replicationmanager'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_retries_total

replicationmanager_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work replicationmanager has done that is
    in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work replicationmanager has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicationmanager_unfinished_work_seconds

replicationmanager_work_duration:
  brief: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_work_duration

replicationmanager_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: replicationmanager_work_duration_count

replicationmanager_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuereplicationmanager
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: replicationmanager_work_duration_quantile

resource_quota_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for resource_quota_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for resource_quota_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_rate_limiter_use

resource_quota_controller_resource_changes_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: resource_quota_controller_resource_changes'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: resource_quota_controller_resource_changes'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_adds_total

resource_quota_controller_resource_changes_depth:
  brief: '(Deprecated) Current depth of workqueue: resource_quota_controller_resource_changes'
  custom: true
  description: '(Deprecated) Current depth of workqueue: resource_quota_controller_resource_changes'
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_depth

resource_quota_controller_resource_changes_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    resource_quota_controller_resource_changes been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for resource_quota_controller_resource_changes been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_longest_running_processor_microseconds

resource_quota_controller_resource_changes_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_queue_latency

resource_quota_controller_resource_changes_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_queue_latency_count

resource_quota_controller_resource_changes_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresource_quota_controller_resource_changes
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_queue_latency_quantile

resource_quota_controller_resource_changes_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: resource_quota_controller_resource_changes'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: resource_quota_controller_resource_changes'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_retries_total

resource_quota_controller_resource_changes_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work resource_quota_controller_resource_changes
    has done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work resource_quota_controller_resource_changes
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_unfinished_work_seconds

resource_quota_controller_resource_changes_work_duration:
  brief: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_work_duration

resource_quota_controller_resource_changes_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_work_duration_count

resource_quota_controller_resource_changes_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresource_quota_controller_resource_changes
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resource_quota_controller_resource_changes_work_duration_quantile

resourcequota_primary_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: resourcequota_primary'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: resourcequota_primary'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_adds_total

resourcequota_primary_depth:
  brief: '(Deprecated) Current depth of workqueue: resourcequota_primary'
  custom: true
  description: '(Deprecated) Current depth of workqueue: resourcequota_primary'
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_primary_depth

resourcequota_primary_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    resourcequota_primary been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for resourcequota_primary been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_primary_longest_running_processor_microseconds

resourcequota_primary_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_primary before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_primary
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_queue_latency

resourcequota_primary_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_primary before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_primary
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_queue_latency_count

resourcequota_primary_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_primary before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_primary
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_primary_queue_latency_quantile

resourcequota_primary_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: resourcequota_primary'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: resourcequota_primary'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_retries_total

resourcequota_primary_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work resourcequota_primary has done that
    is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work resourcequota_primary has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_primary_unfinished_work_seconds

resourcequota_primary_work_duration:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_work_duration

resourcequota_primary_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_primary_work_duration_count

resourcequota_primary_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_primary
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_primary_work_duration_quantile

resourcequota_priority_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: resourcequota_priority'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: resourcequota_priority'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_adds_total

resourcequota_priority_depth:
  brief: '(Deprecated) Current depth of workqueue: resourcequota_priority'
  custom: true
  description: '(Deprecated) Current depth of workqueue: resourcequota_priority'
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_priority_depth

resourcequota_priority_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    resourcequota_priority been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for resourcequota_priority been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_priority_longest_running_processor_microseconds

resourcequota_priority_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_priority before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_priority
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_queue_latency

resourcequota_priority_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_priority before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_priority
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_queue_latency_count

resourcequota_priority_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueresourcequota_priority before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueresourcequota_priority
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_priority_queue_latency_quantile

resourcequota_priority_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: resourcequota_priority'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: resourcequota_priority'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_retries_total

resourcequota_priority_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work resourcequota_priority has done that
    is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work resourcequota_priority has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_priority_unfinished_work_seconds

resourcequota_priority_work_duration:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_work_duration

resourcequota_priority_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: resourcequota_priority_work_duration_count

resourcequota_priority_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueresourcequota_priority
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: resourcequota_priority_work_duration_quantile

rest_client_request_duration_seconds:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_duration_seconds

rest_client_request_duration_seconds_bucket:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_duration_seconds_bucket

rest_client_request_duration_seconds_count:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_duration_seconds_count

rest_client_request_latency_seconds:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_latency_seconds

rest_client_request_latency_seconds_bucket:
  brief: (Deprecated) Request latency in seconds
  custom: false
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_latency_seconds_bucket

rest_client_request_latency_seconds_count:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_request_latency_seconds_count

rest_client_requests_total:
  brief: Number of HTTP requests, partitioned by status code, method, and host
  custom: false
  description: Number of HTTP requests, partitioned by status code, method, and host.
  metric_type: cumulative
  monitor: kube-controller-manager
  title: rest_client_requests_total

service_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: service'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: service'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_adds_total

service_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for service_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for service_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_controller_rate_limiter_use

service_depth:
  brief: '(Deprecated) Current depth of workqueue: service'
  custom: true
  description: '(Deprecated) Current depth of workqueue: service'
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_depth

service_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    service been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for service been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_longest_running_processor_microseconds

service_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueservice before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueservice before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_queue_latency

service_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueservice before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueservice before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_queue_latency_count

service_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueservice before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueservice before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_queue_latency_quantile

service_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: service'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: service'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_retries_total

service_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work service has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work service has done that is in progress
    and hasn't been observed by work_duration. Large values indicate stuck threads.
    One can deduce the number of stuck threads by observing the rate at which this
    increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_unfinished_work_seconds

service_work_duration:
  brief: (Deprecated) How long processing an item from workqueueservice takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueservice takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_work_duration

service_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueservice takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueservice takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: service_work_duration_count

service_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueservice takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueservice takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: service_work_duration_quantile

serviceaccount_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: serviceaccount'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: serviceaccount'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_adds_total

serviceaccount_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for serviceaccount_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for serviceaccount_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_controller_rate_limiter_use

serviceaccount_depth:
  brief: '(Deprecated) Current depth of workqueue: serviceaccount'
  custom: true
  description: '(Deprecated) Current depth of workqueue: serviceaccount'
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_depth

serviceaccount_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    serviceaccount been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for serviceaccount been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_longest_running_processor_microseconds

serviceaccount_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_queue_latency

serviceaccount_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_queue_latency_count

serviceaccount_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_queue_latency_quantile

serviceaccount_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: serviceaccount'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: serviceaccount'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_retries_total

serviceaccount_tokens_controller_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for serviceaccount_tokens_controller
  custom: true
  description: A metric measuring the saturation of the rate limiter for serviceaccount_tokens_controller
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_controller_rate_limiter_use

serviceaccount_tokens_secret_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: serviceaccount_tokens_secret'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: serviceaccount_tokens_secret'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_adds_total

serviceaccount_tokens_secret_depth:
  brief: '(Deprecated) Current depth of workqueue: serviceaccount_tokens_secret'
  custom: true
  description: '(Deprecated) Current depth of workqueue: serviceaccount_tokens_secret'
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_depth

serviceaccount_tokens_secret_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    serviceaccount_tokens_secret been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for serviceaccount_tokens_secret been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_longest_running_processor_microseconds

serviceaccount_tokens_secret_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_queue_latency

serviceaccount_tokens_secret_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_queue_latency_count

serviceaccount_tokens_secret_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_secret
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_queue_latency_quantile

serviceaccount_tokens_secret_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: serviceaccount_tokens_secret'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: serviceaccount_tokens_secret'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_retries_total

serviceaccount_tokens_secret_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work serviceaccount_tokens_secret has done
    that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work serviceaccount_tokens_secret
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_unfinished_work_seconds

serviceaccount_tokens_secret_work_duration:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_work_duration

serviceaccount_tokens_secret_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_work_duration_count

serviceaccount_tokens_secret_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_secret
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_secret_work_duration_quantile

serviceaccount_tokens_service_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: serviceaccount_tokens_service'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: serviceaccount_tokens_service'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_adds_total

serviceaccount_tokens_service_depth:
  brief: '(Deprecated) Current depth of workqueue: serviceaccount_tokens_service'
  custom: true
  description: '(Deprecated) Current depth of workqueue: serviceaccount_tokens_service'
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_depth

serviceaccount_tokens_service_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    serviceaccount_tokens_service been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for serviceaccount_tokens_service been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_longest_running_processor_microseconds

serviceaccount_tokens_service_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_queue_latency

serviceaccount_tokens_service_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_queue_latency_count

serviceaccount_tokens_service_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueserviceaccount_tokens_service
    before being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_queue_latency_quantile

serviceaccount_tokens_service_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: serviceaccount_tokens_service'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: serviceaccount_tokens_service'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_retries_total

serviceaccount_tokens_service_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work serviceaccount_tokens_service has done
    that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work serviceaccount_tokens_service
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_unfinished_work_seconds

serviceaccount_tokens_service_work_duration:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_work_duration

serviceaccount_tokens_service_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_work_duration_count

serviceaccount_tokens_service_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount_tokens_service
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_tokens_service_work_duration_quantile

serviceaccount_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work serviceaccount has done that is in
    progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work serviceaccount has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_unfinished_work_seconds

serviceaccount_work_duration:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_work_duration

serviceaccount_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: serviceaccount_work_duration_count

serviceaccount_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueserviceaccount takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueserviceaccount
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: serviceaccount_work_duration_quantile

statefulset_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: statefulset'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: statefulset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_adds_total

statefulset_depth:
  brief: '(Deprecated) Current depth of workqueue: statefulset'
  custom: true
  description: '(Deprecated) Current depth of workqueue: statefulset'
  metric_type: gauge
  monitor: kube-controller-manager
  title: statefulset_depth

statefulset_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    statefulset been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for statefulset been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: statefulset_longest_running_processor_microseconds

statefulset_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuestatefulset before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuestatefulset before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_queue_latency

statefulset_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuestatefulset before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuestatefulset before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_queue_latency_count

statefulset_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuestatefulset before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuestatefulset before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: statefulset_queue_latency_quantile

statefulset_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: statefulset'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: statefulset'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_retries_total

statefulset_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work statefulset has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work statefulset has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: statefulset_unfinished_work_seconds

statefulset_work_duration:
  brief: (Deprecated) How long processing an item from workqueuestatefulset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuestatefulset
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_work_duration

statefulset_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuestatefulset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuestatefulset
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: statefulset_work_duration_count

statefulset_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuestatefulset takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuestatefulset
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: statefulset_work_duration_quantile

token_cleaner_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: token_cleaner'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: token_cleaner'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_adds_total

token_cleaner_depth:
  brief: '(Deprecated) Current depth of workqueue: token_cleaner'
  custom: true
  description: '(Deprecated) Current depth of workqueue: token_cleaner'
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_depth

token_cleaner_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    token_cleaner been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for token_cleaner been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_longest_running_processor_microseconds

token_cleaner_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuetoken_cleaner before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuetoken_cleaner before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_queue_latency

token_cleaner_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuetoken_cleaner before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuetoken_cleaner before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_queue_latency_count

token_cleaner_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuetoken_cleaner before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuetoken_cleaner before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_queue_latency_quantile

token_cleaner_rate_limiter_use:
  brief: A metric measuring the saturation of the rate limiter for token_cleaner
  custom: true
  description: A metric measuring the saturation of the rate limiter for token_cleaner
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_rate_limiter_use

token_cleaner_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: token_cleaner'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: token_cleaner'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_retries_total

token_cleaner_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work token_cleaner has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work token_cleaner has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_unfinished_work_seconds

token_cleaner_work_duration:
  brief: (Deprecated) How long processing an item from workqueuetoken_cleaner takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuetoken_cleaner
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_work_duration

token_cleaner_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuetoken_cleaner takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuetoken_cleaner
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: token_cleaner_work_duration_count

token_cleaner_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuetoken_cleaner takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuetoken_cleaner
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: token_cleaner_work_duration_quantile

ttlcontroller_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: ttlcontroller'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: ttlcontroller'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_adds_total

ttlcontroller_depth:
  brief: '(Deprecated) Current depth of workqueue: ttlcontroller'
  custom: true
  description: '(Deprecated) Current depth of workqueue: ttlcontroller'
  metric_type: gauge
  monitor: kube-controller-manager
  title: ttlcontroller_depth

ttlcontroller_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    ttlcontroller been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for ttlcontroller been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: ttlcontroller_longest_running_processor_microseconds

ttlcontroller_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuettlcontroller before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuettlcontroller before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_queue_latency

ttlcontroller_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuettlcontroller before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuettlcontroller before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_queue_latency_count

ttlcontroller_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuettlcontroller before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuettlcontroller before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: ttlcontroller_queue_latency_quantile

ttlcontroller_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: ttlcontroller'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: ttlcontroller'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_retries_total

ttlcontroller_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work ttlcontroller has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work ttlcontroller has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: ttlcontroller_unfinished_work_seconds

ttlcontroller_work_duration:
  brief: (Deprecated) How long processing an item from workqueuettlcontroller takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuettlcontroller
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_work_duration

ttlcontroller_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuettlcontroller takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuettlcontroller
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: ttlcontroller_work_duration_count

ttlcontroller_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuettlcontroller takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuettlcontroller
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: ttlcontroller_work_duration_quantile

volume_expand_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: volume_expand'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: volume_expand'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_adds_total

volume_expand_depth:
  brief: '(Deprecated) Current depth of workqueue: volume_expand'
  custom: true
  description: '(Deprecated) Current depth of workqueue: volume_expand'
  metric_type: gauge
  monitor: kube-controller-manager
  title: volume_expand_depth

volume_expand_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    volume_expand been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for volume_expand been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: volume_expand_longest_running_processor_microseconds

volume_expand_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuevolume_expand before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolume_expand before
    being requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_queue_latency

volume_expand_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuevolume_expand before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolume_expand before
    being requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_queue_latency_count

volume_expand_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuevolume_expand before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolume_expand before
    being requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: volume_expand_queue_latency_quantile

volume_expand_retries_total:
  brief: '(Deprecated) Total number of retries handled by workqueue: volume_expand'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: volume_expand'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_retries_total

volume_expand_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work volume_expand has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work volume_expand has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: volume_expand_unfinished_work_seconds

volume_expand_work_duration:
  brief: (Deprecated) How long processing an item from workqueuevolume_expand takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolume_expand
    takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_work_duration

volume_expand_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuevolume_expand takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolume_expand
    takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volume_expand_work_duration_count

volume_expand_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuevolume_expand takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolume_expand
    takes. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: volume_expand_work_duration_quantile

volumes_adds_total:
  brief: '(Deprecated) Total number of adds handled by workqueue: volumes'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: volumes'
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volumes_adds_total

volumes_depth:
  brief: '(Deprecated) Current depth of workqueue: volumes'
  custom: true
  description: '(Deprecated) Current depth of workqueue: volumes'
  metric_type: gauge
  monitor: kube-controller-manager
  title: volumes_depth

volumes_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    volumes been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for volumes been running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: volumes_longest_running_processor_microseconds

volumes_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuevolumes before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolumes before being
    requested. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volumes_queue_latency

volumes_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuevolumes before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolumes before being
    requested. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volumes_queue_latency_count

volumes_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuevolumes before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuevolumes before being
    requested. (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: volumes_queue_latency_quantile

volumes_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work volumes has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work volumes has done that is in progress
    and hasn't been observed by work_duration. Large values indicate stuck threads.
    One can deduce the number of stuck threads by observing the rate at which this
    increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: volumes_unfinished_work_seconds

volumes_work_duration:
  brief: (Deprecated) How long processing an item from workqueuevolumes takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolumes takes.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volumes_work_duration

volumes_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuevolumes takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolumes takes.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: volumes_work_duration_count

volumes_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuevolumes takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuevolumes takes.
    (quantized)
  metric_type: gauge
  monitor: kube-controller-manager
  title: volumes_work_duration_quantile

workqueue_adds_total:
  brief: Total number of adds handled by workqueue
  custom: false
  description: Total number of adds handled by workqueue
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_adds_total

workqueue_depth:
  brief: Current depth of workqueue
  custom: false
  description: Current depth of workqueue
  metric_type: gauge
  monitor: kube-controller-manager
  title: workqueue_depth

workqueue_longest_running_processor_seconds:
  brief: How many seconds has the longest running processor for workqueue been running
  custom: true
  description: How many seconds has the longest running processor for workqueue been
    running.
  metric_type: gauge
  monitor: kube-controller-manager
  title: workqueue_longest_running_processor_seconds

workqueue_queue_duration_seconds:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: true
  description: How long in seconds an item stays in workqueue before being requested.
    (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_queue_duration_seconds

workqueue_queue_duration_seconds_bucket:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: false
  description: How long in seconds an item stays in workqueue before being requested.
    (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_queue_duration_seconds_bucket

workqueue_queue_duration_seconds_count:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: true
  description: How long in seconds an item stays in workqueue before being requested.
    (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_queue_duration_seconds_count

workqueue_retries_total:
  brief: Total number of retries handled by workqueue
  custom: true
  description: Total number of retries handled by workqueue
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_retries_total

workqueue_unfinished_work_seconds:
  brief: How many seconds of work has done that is in progress and hasn't been observed
    by work_duration
  custom: true
  description: How many seconds of work has done that is in progress and hasn't been
    observed by work_duration. Large values indicate stuck threads. One can deduce
    the number of stuck threads by observing the rate at which this increases.
  metric_type: gauge
  monitor: kube-controller-manager
  title: workqueue_unfinished_work_seconds

workqueue_work_duration_seconds:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (sum)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_work_duration_seconds

workqueue_work_duration_seconds_bucket:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (bucket)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_work_duration_seconds_bucket

workqueue_work_duration_seconds_count:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (count)
  metric_type: cumulative
  monitor: kube-controller-manager
  title: workqueue_work_duration_seconds_count


container_cpu_utilization:
  brief: Cumulative cpu utilization in percentages
  custom: false
  description: 'Cumulative cpu utilization in percentages.  This is equivalent to
    "centicores", or hundreths of CPU cores consumed.  This metric is **NOT** normalized
    by the total # of cores on the system.'
  metric_type: cumulative
  monitor: kubelet-metrics
  title: container_cpu_utilization

container_fs_available_bytes:
  brief: The storage space available (bytes) for the container root filesystem
  custom: false
  description: The storage space available (bytes) for the container root filesystem
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_fs_available_bytes

container_fs_capacity_bytes:
  brief: The total capacity (bytes) of the container root filesystem's underlying
    storage
  custom: false
  description: The total capacity (bytes) of the container root filesystem's underlying
    storage
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_fs_capacity_bytes

container_fs_usage_bytes:
  brief: This is the bytes used by the container rootfs on the filesystem
  custom: false
  description: 'This is the bytes used by the container rootfs on the filesystem.
    This

    may differ from the total bytes used on the filesystem and may not

    equal container_fs_capacity_bytes - container_fs_available_bytes.'
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_fs_usage_bytes

container_memory_available_bytes:
  brief: Available memory for use
  custom: true
  description: 'Available memory for use.  This is defined as the memory limit -

    container_memory_working_set_bytes. If memory limit is undefined, this

    metric is omitted.'
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_memory_available_bytes

container_memory_major_page_faults:
  brief: Cumulative number of major page faults
  custom: true
  description: Cumulative number of major page faults.
  metric_type: cumulative
  monitor: kubelet-metrics
  title: container_memory_major_page_faults

container_memory_page_faults:
  brief: Cumulative number of minor page faults
  custom: true
  description: Cumulative number of minor page faults.
  metric_type: cumulative
  monitor: kubelet-metrics
  title: container_memory_page_faults

container_memory_rss_bytes:
  brief: The amount of anonymous and swap cache memory (includes transparent hugepages)
  custom: true
  description: The amount of anonymous and swap cache memory (includes transparent
    hugepages)
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_memory_rss_bytes

container_memory_usage_bytes:
  brief: Total memory in use -- this includes all memory regardless of when it was
    accessed
  custom: false
  description: Total memory in use -- this includes all memory regardless of when
    it was accessed.
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_memory_usage_bytes

container_memory_working_set_bytes:
  brief: The amount of working set memory
  custom: true
  description: 'The amount of working set memory. This includes recently accessed

    memory, dirty memory, and kernel memory. container_memory_working_set_bytes is
    <=

    container_memory_usage_bytes.'
  metric_type: gauge
  monitor: kubelet-metrics
  title: container_memory_working_set_bytes

pod_ephemeral_storage_capacity_bytes:
  brief: Represents the storage space available (bytes) for the filesystem
  custom: true
  description: Represents the storage space available (bytes) for the filesystem.
    This value is a combination of total filesystem usage for the containers and emptyDir-backed
    volumes in the measured Pod. See more about emptyDir-backed volumes https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
  metric_type: gauge
  monitor: kubelet-metrics
  title: pod_ephemeral_storage_capacity_bytes

pod_ephemeral_storage_used_bytes:
  brief: Represents the bytes used on the filesystem
  custom: true
  description: Represents the bytes used on the filesystem. This value is a total
    filesystem usage for the containers and emptyDir-backed volumes in the measured
    Pod. See more about emptyDir-backed volumes https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
  metric_type: gauge
  monitor: kubelet-metrics
  title: pod_ephemeral_storage_used_bytes

pod_network_receive_bytes_total:
  brief: Cumulative count of bytes received
  custom: false
  description: Cumulative count of bytes received. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-metrics
  title: pod_network_receive_bytes_total

pod_network_receive_errors_total:
  brief: Cumulative count of errors encountered while receiving
  custom: false
  description: Cumulative count of errors encountered while receiving. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-metrics
  title: pod_network_receive_errors_total

pod_network_transmit_bytes_total:
  brief: Cumulative count of bytes transmitted
  custom: false
  description: Cumulative count of bytes transmitted. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-metrics
  title: pod_network_transmit_bytes_total

pod_network_transmit_errors_total:
  brief: Cumulative count of errors encountered while transmitting
  custom: false
  description: Cumulative count of errors encountered while transmitting. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-metrics
  title: pod_network_transmit_errors_total


container_cpu_cfs_periods:
  brief: Total number of elapsed CFS enforcement intervals
  custom: true
  description: Total number of elapsed CFS enforcement intervals
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_cfs_periods

container_cpu_cfs_throttled_periods:
  brief: Total number of times tasks in the cgroup have been throttled
  custom: true
  description: Total number of times tasks in the cgroup have been throttled
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_cfs_throttled_periods

container_cpu_cfs_throttled_time:
  brief: Total time duration, in nanoseconds, for which tasks in the cgroup have been
    throttled
  custom: true
  description: Total time duration, in nanoseconds, for which tasks in the cgroup
    have been throttled
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_cfs_throttled_time

container_cpu_percent:
  brief: Cumulative cpu utilization as a percentage of the total host CPU available
  custom: false
  description: Cumulative cpu utilization as a percentage of the total host CPU available.  This
    metric is equivalent to `container_cpu_utilization` / <# of CPUs/cores on host>.
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_percent

container_cpu_system_seconds_total:
  brief: Cumulative system cpu time consumed in nanoseconds
  custom: true
  description: Cumulative system cpu time consumed in nanoseconds
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_system_seconds_total

container_cpu_usage_seconds_total:
  brief: Cumulative cpu time consumed per cpu in nanoseconds
  custom: true
  description: Cumulative cpu time consumed per cpu in nanoseconds
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_usage_seconds_total

container_cpu_user_seconds_total:
  brief: Cumulative user cpu time consumed in nanoseconds
  custom: true
  description: Cumulative user cpu time consumed in nanoseconds
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_user_seconds_total

container_cpu_utilization:
  brief: Cumulative cpu utilization in percentages
  custom: false
  description: 'Cumulative cpu utilization in percentages.  This is equivalent to
    "centicores", or hundreths of CPU cores consumed.  This metric is **NOT** normalized
    by the total # of cores on the system.'
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_utilization

container_cpu_utilization_per_core:
  brief: Cumulative cpu utilization in percentages per core
  custom: true
  description: Cumulative cpu utilization in percentages per core
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_cpu_utilization_per_core

container_fs_io_current:
  brief: Number of I/Os currently in progress
  custom: true
  description: Number of I/Os currently in progress
  metric_type: gauge
  monitor: kubelet-stats
  title: container_fs_io_current

container_fs_io_time_seconds_total:
  brief: Cumulative count of seconds spent doing I/Os
  custom: true
  description: Cumulative count of seconds spent doing I/Os
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_io_time_seconds_total

container_fs_io_time_weighted_seconds_total:
  brief: Cumulative weighted I/O time in seconds
  custom: true
  description: Cumulative weighted I/O time in seconds
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_io_time_weighted_seconds_total

container_fs_limit_bytes:
  brief: Number of bytes that the container may occupy on this filesystem
  custom: true
  description: Number of bytes that the container may occupy on this filesystem
  metric_type: gauge
  monitor: kubelet-stats
  title: container_fs_limit_bytes

container_fs_read_seconds_total:
  brief: Cumulative count of seconds spent reading
  custom: false
  description: Cumulative count of seconds spent reading
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_read_seconds_total

container_fs_reads_merged_total:
  brief: Cumulative count of reads merged
  custom: true
  description: Cumulative count of reads merged
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_reads_merged_total

container_fs_reads_total:
  brief: Cumulative count of reads completed
  custom: false
  description: Cumulative count of reads completed
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_reads_total

container_fs_sector_reads_total:
  brief: Cumulative count of sector reads completed
  custom: true
  description: Cumulative count of sector reads completed
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_sector_reads_total

container_fs_sector_writes_total:
  brief: Cumulative count of sector writes completed
  custom: true
  description: Cumulative count of sector writes completed
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_sector_writes_total

container_fs_usage_bytes:
  brief: Number of bytes that are consumed by the container on this filesystem
  custom: false
  description: Number of bytes that are consumed by the container on this filesystem
  metric_type: gauge
  monitor: kubelet-stats
  title: container_fs_usage_bytes

container_fs_write_seconds_total:
  brief: Cumulative count of seconds spent writing
  custom: false
  description: Cumulative count of seconds spent writing
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_write_seconds_total

container_fs_writes_merged_total:
  brief: Cumulative count of writes merged
  custom: true
  description: Cumulative count of writes merged
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_writes_merged_total

container_fs_writes_total:
  brief: Cumulative count of writes completed
  custom: false
  description: Cumulative count of writes completed
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_fs_writes_total

container_last_seen:
  brief: Last time a container was seen by the exporter
  custom: true
  description: Last time a container was seen by the exporter
  metric_type: gauge
  monitor: kubelet-stats
  title: container_last_seen

container_memory_failcnt:
  brief: Number of memory usage hits limits
  custom: true
  description: Number of memory usage hits limits
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_memory_failcnt

container_memory_failures_total:
  brief: Cumulative count of memory allocation failures
  custom: false
  description: Cumulative count of memory allocation failures
  metric_type: cumulative
  monitor: kubelet-stats
  title: container_memory_failures_total

container_memory_rss:
  brief: Current RSS memory usage in bytes
  custom: true
  description: Current RSS memory usage in bytes
  metric_type: gauge
  monitor: kubelet-stats
  title: container_memory_rss

container_memory_usage_bytes:
  brief: Current memory usage in bytes
  custom: false
  description: Current memory usage in bytes
  metric_type: gauge
  monitor: kubelet-stats
  title: container_memory_usage_bytes

container_memory_working_set_bytes:
  brief: Current working set in bytes
  custom: true
  description: Current working set in bytes
  metric_type: gauge
  monitor: kubelet-stats
  title: container_memory_working_set_bytes

container_spec_cpu_period:
  brief: The number of microseconds that the [CFS scheduler](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
    uses as a window when limiting container processes
  custom: false
  description: The number of microseconds that the [CFS scheduler](https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
    uses as a window when limiting container processes
  metric_type: gauge
  monitor: kubelet-stats
  title: container_spec_cpu_period

container_spec_cpu_quota:
  brief: In CPU quota for the CFS process scheduler
  custom: false
  description: In CPU quota for the CFS process scheduler. In K8s this is equal to
    the containers's CPU limit as a fraction of 1 core and multiplied by the `container_spec_cpu_period`.  So
    if the CPU limit is `500m` (500 millicores) for a container and the `container_spec_cpu_period`
    is set to 100,000, this value will be 50,000.
  metric_type: gauge
  monitor: kubelet-stats
  title: container_spec_cpu_quota

container_spec_cpu_shares:
  brief: CPU share of the container
  custom: true
  description: CPU share of the container
  metric_type: gauge
  monitor: kubelet-stats
  title: container_spec_cpu_shares

container_spec_memory_limit_bytes:
  brief: Memory limit for the container
  custom: false
  description: Memory limit for the container.
  metric_type: gauge
  monitor: kubelet-stats
  title: container_spec_memory_limit_bytes

container_spec_memory_swap_limit_bytes:
  brief: Memory swap limit for the container
  custom: true
  description: Memory swap limit for the container.
  metric_type: gauge
  monitor: kubelet-stats
  title: container_spec_memory_swap_limit_bytes

container_start_time_seconds:
  brief: Start time of the container since unix epoch in seconds
  custom: true
  description: Start time of the container since unix epoch in seconds.
  metric_type: gauge
  monitor: kubelet-stats
  title: container_start_time_seconds

container_tasks_state:
  brief: Number of tasks in given state
  custom: true
  description: Number of tasks in given state
  metric_type: gauge
  monitor: kubelet-stats
  title: container_tasks_state

machine_cpu_cores:
  brief: Number of CPU cores on the node
  custom: false
  description: Number of CPU cores on the node.
  metric_type: gauge
  monitor: kubelet-stats
  title: machine_cpu_cores

machine_cpu_frequency_khz:
  brief: Node's CPU frequency
  custom: true
  description: Node's CPU frequency.
  metric_type: gauge
  monitor: kubelet-stats
  title: machine_cpu_frequency_khz

machine_memory_bytes:
  brief: Amount of memory installed on the node
  custom: false
  description: Amount of memory installed on the node.
  metric_type: gauge
  monitor: kubelet-stats
  title: machine_memory_bytes

pod_ephemeral_storage_capacity_bytes:
  brief: Represents the storage space available (bytes) for the filesystem
  custom: true
  description: Represents the storage space available (bytes) for the filesystem.
    This value is a combination of total filesystem usage for the containers and emptyDir-backed
    volumes in the measured Pod. See more about emptyDir-backed volumes https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
  metric_type: gauge
  monitor: kubelet-stats
  title: pod_ephemeral_storage_capacity_bytes

pod_ephemeral_storage_used_bytes:
  brief: Represents the bytes used on the filesystem
  custom: true
  description: Represents the bytes used on the filesystem. This value is a total
    filesystem usage for the containers and emptyDir-backed volumes in the measured
    Pod. See more about emptyDir-backed volumes https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
  metric_type: gauge
  monitor: kubelet-stats
  title: pod_ephemeral_storage_used_bytes

pod_network_receive_bytes_total:
  brief: Cumulative count of bytes received
  custom: false
  description: Cumulative count of bytes received. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_receive_bytes_total

pod_network_receive_errors_total:
  brief: Cumulative count of errors encountered while receiving
  custom: false
  description: Cumulative count of errors encountered while receiving. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_receive_errors_total

pod_network_receive_packets_dropped_total:
  brief: Cumulative count of packets dropped while receiving
  custom: true
  description: Cumulative count of packets dropped while receiving. **Note that this
    metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_receive_packets_dropped_total

pod_network_receive_packets_total:
  brief: Cumulative count of packets received
  custom: true
  description: Cumulative count of packets received. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_receive_packets_total

pod_network_transmit_bytes_total:
  brief: Cumulative count of bytes transmitted
  custom: false
  description: Cumulative count of bytes transmitted. **Note that this metric is not
    emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_transmit_bytes_total

pod_network_transmit_errors_total:
  brief: Cumulative count of errors encountered while transmitting
  custom: false
  description: Cumulative count of errors encountered while transmitting. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_transmit_errors_total

pod_network_transmit_packets_dropped_total:
  brief: Cumulative count of packets dropped while transmitting
  custom: true
  description: Cumulative count of packets dropped while transmitting. **Note that
    this metric is not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_transmit_packets_dropped_total

pod_network_transmit_packets_total:
  brief: Cumulative count of packets transmitted
  custom: true
  description: Cumulative count of packets transmitted. **Note that this metric is
    not emitted when using the cri-o container runtime.**
  metric_type: cumulative
  monitor: kubelet-stats
  title: pod_network_transmit_packets_total


APIServiceOpenAPIAggregationControllerQueue1_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_adds

APIServiceOpenAPIAggregationControllerQueue1_depth:
  brief: '(Deprecated) Current depth of workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  custom: true
  description: '(Deprecated) Current depth of workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_depth

APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    APIServiceOpenAPIAggregationControllerQueue1 been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for APIServiceOpenAPIAggregationControllerQueue1 been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds

APIServiceOpenAPIAggregationControllerQueue1_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_queue_latency

APIServiceOpenAPIAggregationControllerQueue1_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_queue_latency_count

APIServiceOpenAPIAggregationControllerQueue1_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_queue_latency_quantile

APIServiceOpenAPIAggregationControllerQueue1_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_retries

APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work APIServiceOpenAPIAggregationControllerQueue1
    has done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work APIServiceOpenAPIAggregationControllerQueue1
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds

APIServiceOpenAPIAggregationControllerQueue1_work_duration:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_work_duration

APIServiceOpenAPIAggregationControllerQueue1_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_work_duration_count

APIServiceOpenAPIAggregationControllerQueue1_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceOpenAPIAggregationControllerQueue1_work_duration_quantile

APIServiceRegistrationController_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: APIServiceRegistrationController'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: APIServiceRegistrationController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_adds

APIServiceRegistrationController_depth:
  brief: '(Deprecated) Current depth of workqueue: APIServiceRegistrationController'
  custom: true
  description: '(Deprecated) Current depth of workqueue: APIServiceRegistrationController'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_depth

APIServiceRegistrationController_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    APIServiceRegistrationController been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for APIServiceRegistrationController been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_longest_running_processor_microseconds

APIServiceRegistrationController_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_queue_latency

APIServiceRegistrationController_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_queue_latency_count

APIServiceRegistrationController_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_queue_latency_quantile

APIServiceRegistrationController_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: APIServiceRegistrationController'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: APIServiceRegistrationController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_retries

APIServiceRegistrationController_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work APIServiceRegistrationController has
    done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work APIServiceRegistrationController
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_unfinished_work_seconds

APIServiceRegistrationController_work_duration:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_work_duration

APIServiceRegistrationController_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_work_duration_count

APIServiceRegistrationController_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: APIServiceRegistrationController_work_duration_quantile

AvailableConditionController_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: AvailableConditionController'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: AvailableConditionController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_adds

AvailableConditionController_depth:
  brief: '(Deprecated) Current depth of workqueue: AvailableConditionController'
  custom: true
  description: '(Deprecated) Current depth of workqueue: AvailableConditionController'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: AvailableConditionController_depth

AvailableConditionController_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    AvailableConditionController been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for AvailableConditionController been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: AvailableConditionController_longest_running_processor_microseconds

AvailableConditionController_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_queue_latency

AvailableConditionController_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_queue_latency_count

AvailableConditionController_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueAvailableConditionController
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: AvailableConditionController_queue_latency_quantile

AvailableConditionController_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: AvailableConditionController'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: AvailableConditionController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_retries

AvailableConditionController_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work AvailableConditionController has done
    that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work AvailableConditionController
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: AvailableConditionController_unfinished_work_seconds

AvailableConditionController_work_duration:
  brief: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_work_duration

AvailableConditionController_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: AvailableConditionController_work_duration_count

AvailableConditionController_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueAvailableConditionController
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: AvailableConditionController_work_duration_quantile

DiscoveryController_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: DiscoveryController'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: DiscoveryController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_adds

DiscoveryController_depth:
  brief: '(Deprecated) Current depth of workqueue: DiscoveryController'
  custom: true
  description: '(Deprecated) Current depth of workqueue: DiscoveryController'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: DiscoveryController_depth

DiscoveryController_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    DiscoveryController been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for DiscoveryController been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: DiscoveryController_longest_running_processor_microseconds

DiscoveryController_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueDiscoveryController before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueDiscoveryController
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_queue_latency

DiscoveryController_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueDiscoveryController before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueDiscoveryController
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_queue_latency_count

DiscoveryController_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueDiscoveryController before
    being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueDiscoveryController
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: DiscoveryController_queue_latency_quantile

DiscoveryController_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: DiscoveryController'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: DiscoveryController'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_retries

DiscoveryController_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work DiscoveryController has done that is
    in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work DiscoveryController has done
    that is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: DiscoveryController_unfinished_work_seconds

DiscoveryController_work_duration:
  brief: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_work_duration

DiscoveryController_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: DiscoveryController_work_duration_count

DiscoveryController_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueDiscoveryController
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: DiscoveryController_work_duration_quantile

admission_quota_controller_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: admission_quota_controller'
  custom: false
  description: '(Deprecated) Total number of adds handled by workqueue: admission_quota_controller'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: admission_quota_controller_adds

admission_quota_controller_depth:
  brief: '(Deprecated) Current depth of workqueue: admission_quota_controller'
  custom: true
  description: '(Deprecated) Current depth of workqueue: admission_quota_controller'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: admission_quota_controller_depth

admission_quota_controller_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    admission_quota_controller been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for admission_quota_controller been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: admission_quota_controller_longest_running_processor_microseconds

admission_quota_controller_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: admission_quota_controller_queue_latency

admission_quota_controller_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: admission_quota_controller_queue_latency_count

admission_quota_controller_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: admission_quota_controller_queue_latency_quantile

admission_quota_controller_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work admission_quota_controller has done
    that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work admission_quota_controller has
    done that is in progress and hasn't been observed by work_duration. Large values
    indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: admission_quota_controller_unfinished_work_seconds

admission_quota_controller_work_duration:
  brief: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: admission_quota_controller_work_duration

admission_quota_controller_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: admission_quota_controller_work_duration_count

admission_quota_controller_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: admission_quota_controller_work_duration_quantile

apiserver_admission_controller_admission_duration_seconds:
  brief: Admission controller latency histogram in seconds, identified by name and
    broken out for each operation and API resource and type (validate or admit)
  custom: true
  description: Admission controller latency histogram in seconds, identified by name
    and broken out for each operation and API resource and type (validate or admit).
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_duration_seconds

apiserver_admission_controller_admission_duration_seconds_bucket:
  brief: Admission controller latency histogram in seconds, identified by name and
    broken out for each operation and API resource and type (validate or admit)
  custom: true
  description: Admission controller latency histogram in seconds, identified by name
    and broken out for each operation and API resource and type (validate or admit).
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_duration_seconds_bucket

apiserver_admission_controller_admission_duration_seconds_count:
  brief: Admission controller latency histogram in seconds, identified by name and
    broken out for each operation and API resource and type (validate or admit)
  custom: true
  description: Admission controller latency histogram in seconds, identified by name
    and broken out for each operation and API resource and type (validate or admit).
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_duration_seconds_count

apiserver_admission_controller_admission_latencies_milliseconds:
  brief: (Deprecated) Admission controller latency histogram in milliseconds, identified
    by name and broken out for each operation and API resource and type (validate
    or admit)
  custom: true
  description: (Deprecated) Admission controller latency histogram in milliseconds,
    identified by name and broken out for each operation and API resource and type
    (validate or admit). (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_latencies_milliseconds

apiserver_admission_controller_admission_latencies_milliseconds_bucket:
  brief: (Deprecated) Admission controller latency histogram in milliseconds, identified
    by name and broken out for each operation and API resource and type (validate
    or admit)
  custom: true
  description: (Deprecated) Admission controller latency histogram in milliseconds,
    identified by name and broken out for each operation and API resource and type
    (validate or admit). (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_latencies_milliseconds_bucket

apiserver_admission_controller_admission_latencies_milliseconds_count:
  brief: (Deprecated) Admission controller latency histogram in milliseconds, identified
    by name and broken out for each operation and API resource and type (validate
    or admit)
  custom: true
  description: (Deprecated) Admission controller latency histogram in milliseconds,
    identified by name and broken out for each operation and API resource and type
    (validate or admit). (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_controller_admission_latencies_milliseconds_count

apiserver_admission_step_admission_duration_seconds:
  brief: Admission sub-step latency histogram in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency histogram in seconds, broken out for each
    operation and API resource and step type (validate or admit). (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds

apiserver_admission_step_admission_duration_seconds_bucket:
  brief: Admission sub-step latency histogram in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency histogram in seconds, broken out for each
    operation and API resource and step type (validate or admit). (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds_bucket

apiserver_admission_step_admission_duration_seconds_count:
  brief: Admission sub-step latency histogram in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency histogram in seconds, broken out for each
    operation and API resource and step type (validate or admit). (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds_count

apiserver_admission_step_admission_duration_seconds_summary:
  brief: Admission sub-step latency summary in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency summary in seconds, broken out for each
    operation and API resource and step type (validate or admit). (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds_summary

apiserver_admission_step_admission_duration_seconds_summary_count:
  brief: Admission sub-step latency summary in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency summary in seconds, broken out for each
    operation and API resource and step type (validate or admit). (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds_summary_count

apiserver_admission_step_admission_duration_seconds_summary_quantile:
  brief: Admission sub-step latency summary in seconds, broken out for each operation
    and API resource and step type (validate or admit)
  custom: true
  description: Admission sub-step latency summary in seconds, broken out for each
    operation and API resource and step type (validate or admit). (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_duration_seconds_summary_quantile

apiserver_admission_step_admission_latencies_milliseconds:
  brief: (Deprecated) Admission sub-step latency histogram in milliseconds, broken
    out for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency histogram in milliseconds,
    broken out for each operation and API resource and step type (validate or admit).
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds

apiserver_admission_step_admission_latencies_milliseconds_bucket:
  brief: (Deprecated) Admission sub-step latency histogram in milliseconds, broken
    out for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency histogram in milliseconds,
    broken out for each operation and API resource and step type (validate or admit).
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds_bucket

apiserver_admission_step_admission_latencies_milliseconds_count:
  brief: (Deprecated) Admission sub-step latency histogram in milliseconds, broken
    out for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency histogram in milliseconds,
    broken out for each operation and API resource and step type (validate or admit).
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds_count

apiserver_admission_step_admission_latencies_milliseconds_summary:
  brief: (Deprecated) Admission sub-step latency summary in milliseconds, broken out
    for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency summary in milliseconds, broken
    out for each operation and API resource and step type (validate or admit). (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds_summary

apiserver_admission_step_admission_latencies_milliseconds_summary_count:
  brief: (Deprecated) Admission sub-step latency summary in milliseconds, broken out
    for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency summary in milliseconds, broken
    out for each operation and API resource and step type (validate or admit). (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds_summary_count

apiserver_admission_step_admission_latencies_milliseconds_summary_quantile:
  brief: (Deprecated) Admission sub-step latency summary in milliseconds, broken out
    for each operation and API resource and step type (validate or admit)
  custom: true
  description: (Deprecated) Admission sub-step latency summary in milliseconds, broken
    out for each operation and API resource and step type (validate or admit). (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_admission_step_admission_latencies_milliseconds_summary_quantile

apiserver_audit_event_total:
  brief: Counter of audit events generated and sent to the audit backend
  custom: true
  description: Counter of audit events generated and sent to the audit backend.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_audit_event_total

apiserver_audit_requests_rejected_total:
  brief: Counter of apiserver requests rejected due to an error in audit logging backend
  custom: true
  description: Counter of apiserver requests rejected due to an error in audit logging
    backend.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_audit_requests_rejected_total

apiserver_client_certificate_expiration_seconds:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_client_certificate_expiration_seconds

apiserver_client_certificate_expiration_seconds_bucket:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_client_certificate_expiration_seconds_bucket

apiserver_client_certificate_expiration_seconds_count:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_client_certificate_expiration_seconds_count

apiserver_current_inflight_requests:
  brief: Maximal number of currently used inflight request limit of this apiserver
    per request kind in last second
  custom: true
  description: Maximal number of currently used inflight request limit of this apiserver
    per request kind in last second.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_current_inflight_requests

apiserver_init_events_total:
  brief: Counter of init events processed in watchcache broken by resource type
  custom: true
  description: Counter of init events processed in watchcache broken by resource type
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_init_events_total

apiserver_longrunning_gauge:
  brief: Gauge of all active long-running apiserver requests broken out by verb, group,
    version, resource, scope and component
  custom: true
  description: Gauge of all active long-running apiserver requests broken out by verb,
    group, version, resource, scope and component. Not all requests are tracked this
    way.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_longrunning_gauge

apiserver_registered_watchers:
  brief: Number of currently registered watchers for a given resources
  custom: true
  description: Number of currently registered watchers for a given resources
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_registered_watchers

apiserver_request_count:
  brief: (Deprecated) Counter of apiserver requests broken out for each verb, group,
    version, resource, scope, component, client, and HTTP response contentType and
    code
  custom: false
  description: (Deprecated) Counter of apiserver requests broken out for each verb,
    group, version, resource, scope, component, client, and HTTP response contentType
    and code.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_count

apiserver_request_duration_seconds:
  brief: Response latency distribution in seconds for each verb, dry run value, group,
    version, resource, subresource, scope and component
  custom: true
  description: Response latency distribution in seconds for each verb, dry run value,
    group, version, resource, subresource, scope and component. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_duration_seconds

apiserver_request_duration_seconds_bucket:
  brief: Response latency distribution in seconds for each verb, dry run value, group,
    version, resource, subresource, scope and component
  custom: true
  description: Response latency distribution in seconds for each verb, dry run value,
    group, version, resource, subresource, scope and component. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_duration_seconds_bucket

apiserver_request_duration_seconds_count:
  brief: Response latency distribution in seconds for each verb, dry run value, group,
    version, resource, subresource, scope and component
  custom: true
  description: Response latency distribution in seconds for each verb, dry run value,
    group, version, resource, subresource, scope and component. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_duration_seconds_count

apiserver_request_latencies:
  brief: (Deprecated) Response latency distribution in microseconds for each verb,
    group, version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency distribution in microseconds for each
    verb, group, version, resource, subresource, scope and component. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies

apiserver_request_latencies_bucket:
  brief: (Deprecated) Response latency distribution in microseconds for each verb,
    group, version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency distribution in microseconds for each
    verb, group, version, resource, subresource, scope and component. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies_bucket

apiserver_request_latencies_count:
  brief: (Deprecated) Response latency distribution in microseconds for each verb,
    group, version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency distribution in microseconds for each
    verb, group, version, resource, subresource, scope and component. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies_count

apiserver_request_latencies_summary:
  brief: (Deprecated) Response latency summary in microseconds for each verb, group,
    version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency summary in microseconds for each verb,
    group, version, resource, subresource, scope and component. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies_summary

apiserver_request_latencies_summary_count:
  brief: (Deprecated) Response latency summary in microseconds for each verb, group,
    version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency summary in microseconds for each verb,
    group, version, resource, subresource, scope and component. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies_summary_count

apiserver_request_latencies_summary_quantile:
  brief: (Deprecated) Response latency summary in microseconds for each verb, group,
    version, resource, subresource, scope and component
  custom: true
  description: (Deprecated) Response latency summary in microseconds for each verb,
    group, version, resource, subresource, scope and component. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: apiserver_request_latencies_summary_quantile

apiserver_request_total:
  brief: Counter of apiserver requests broken out for each verb, dry run value, group,
    version, resource, scope, component, client, and HTTP response contentType and
    code
  custom: false
  description: Counter of apiserver requests broken out for each verb, dry run value,
    group, version, resource, scope, component, client, and HTTP response contentType
    and code.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_request_total

apiserver_response_sizes:
  brief: Response size distribution in bytes for each group, version, verb, resource,
    subresource, scope and component
  custom: true
  description: Response size distribution in bytes for each group, version, verb,
    resource, subresource, scope and component. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_response_sizes

apiserver_response_sizes_bucket:
  brief: Response size distribution in bytes for each group, version, verb, resource,
    subresource, scope and component
  custom: true
  description: Response size distribution in bytes for each group, version, verb,
    resource, subresource, scope and component. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_response_sizes_bucket

apiserver_response_sizes_count:
  brief: Response size distribution in bytes for each group, version, verb, resource,
    subresource, scope and component
  custom: true
  description: Response size distribution in bytes for each group, version, verb,
    resource, subresource, scope and component. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_response_sizes_count

apiserver_storage_data_key_generation_duration_seconds:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_duration_seconds

apiserver_storage_data_key_generation_duration_seconds_bucket:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_duration_seconds_bucket

apiserver_storage_data_key_generation_duration_seconds_count:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_duration_seconds_count

apiserver_storage_data_key_generation_failures_total:
  brief: Total number of failed data encryption key(DEK) generation operations
  custom: true
  description: Total number of failed data encryption key(DEK) generation operations.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_failures_total

apiserver_storage_data_key_generation_latencies_microseconds:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_latencies_microseconds

apiserver_storage_data_key_generation_latencies_microseconds_bucket:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_latencies_microseconds_bucket

apiserver_storage_data_key_generation_latencies_microseconds_count:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_data_key_generation_latencies_microseconds_count

apiserver_storage_envelope_transformation_cache_misses_total:
  brief: Total number of cache misses while accessing key decryption key(KEK)
  custom: true
  description: Total number of cache misses while accessing key decryption key(KEK).
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: apiserver_storage_envelope_transformation_cache_misses_total

authenticated_user_requests:
  brief: Counter of authenticated requests broken out by username
  custom: true
  description: Counter of authenticated requests broken out by username.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: authenticated_user_requests

autoregister_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: autoregister'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: autoregister'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_adds

autoregister_depth:
  brief: '(Deprecated) Current depth of workqueue: autoregister'
  custom: true
  description: '(Deprecated) Current depth of workqueue: autoregister'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: autoregister_depth

autoregister_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    autoregister been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for autoregister been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: autoregister_longest_running_processor_microseconds

autoregister_queue_latency:
  brief: (Deprecated) How long an item stays in workqueueautoregister before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueautoregister before
    being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_queue_latency

autoregister_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueueautoregister before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueautoregister before
    being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_queue_latency_count

autoregister_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueueautoregister before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueueautoregister before
    being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: autoregister_queue_latency_quantile

autoregister_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: autoregister'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: autoregister'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_retries

autoregister_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work autoregister has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work autoregister has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: autoregister_unfinished_work_seconds

autoregister_work_duration:
  brief: (Deprecated) How long processing an item from workqueueautoregister takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueautoregister
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_work_duration

autoregister_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueueautoregister takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueautoregister
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: autoregister_work_duration_count

autoregister_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueueautoregister takes
  custom: true
  description: (Deprecated) How long processing an item from workqueueautoregister
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: autoregister_work_duration_quantile

crdEstablishing_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: crdEstablishing'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: crdEstablishing'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_adds

crdEstablishing_depth:
  brief: '(Deprecated) Current depth of workqueue: crdEstablishing'
  custom: true
  description: '(Deprecated) Current depth of workqueue: crdEstablishing'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crdEstablishing_depth

crdEstablishing_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    crdEstablishing been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for crdEstablishing been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crdEstablishing_longest_running_processor_microseconds

crdEstablishing_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuecrdEstablishing before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrdEstablishing before
    being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_queue_latency

crdEstablishing_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuecrdEstablishing before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrdEstablishing before
    being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_queue_latency_count

crdEstablishing_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuecrdEstablishing before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrdEstablishing before
    being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crdEstablishing_queue_latency_quantile

crdEstablishing_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: crdEstablishing'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: crdEstablishing'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_retries

crdEstablishing_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work crdEstablishing has done that is in
    progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work crdEstablishing has done that
    is in progress and hasn't been observed by work_duration. Large values indicate
    stuck threads. One can deduce the number of stuck threads by observing the rate
    at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crdEstablishing_unfinished_work_seconds

crdEstablishing_work_duration:
  brief: (Deprecated) How long processing an item from workqueuecrdEstablishing takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrdEstablishing
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_work_duration

crdEstablishing_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuecrdEstablishing takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrdEstablishing
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crdEstablishing_work_duration_count

crdEstablishing_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuecrdEstablishing takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrdEstablishing
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crdEstablishing_work_duration_quantile

crd_autoregistration_controller_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: crd_autoregistration_controller'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: crd_autoregistration_controller'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_adds

crd_autoregistration_controller_depth:
  brief: '(Deprecated) Current depth of workqueue: crd_autoregistration_controller'
  custom: true
  description: '(Deprecated) Current depth of workqueue: crd_autoregistration_controller'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_depth

crd_autoregistration_controller_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    crd_autoregistration_controller been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for crd_autoregistration_controller been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_longest_running_processor_microseconds

crd_autoregistration_controller_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_queue_latency

crd_autoregistration_controller_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_queue_latency_count

crd_autoregistration_controller_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_queue_latency_quantile

crd_autoregistration_controller_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: crd_autoregistration_controller'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: crd_autoregistration_controller'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_retries

crd_autoregistration_controller_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work crd_autoregistration_controller has
    done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work crd_autoregistration_controller
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_unfinished_work_seconds

crd_autoregistration_controller_work_duration:
  brief: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_work_duration

crd_autoregistration_controller_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_work_duration_count

crd_autoregistration_controller_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_autoregistration_controller_work_duration_quantile

crd_finalizer_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: crd_finalizer'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: crd_finalizer'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_adds

crd_finalizer_depth:
  brief: '(Deprecated) Current depth of workqueue: crd_finalizer'
  custom: true
  description: '(Deprecated) Current depth of workqueue: crd_finalizer'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_finalizer_depth

crd_finalizer_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    crd_finalizer been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for crd_finalizer been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_finalizer_longest_running_processor_microseconds

crd_finalizer_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuecrd_finalizer before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
    being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_queue_latency

crd_finalizer_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuecrd_finalizer before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
    being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_queue_latency_count

crd_finalizer_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuecrd_finalizer before being
    requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
    being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_finalizer_queue_latency_quantile

crd_finalizer_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: crd_finalizer'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: crd_finalizer'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_retries

crd_finalizer_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work crd_finalizer has done that is in progress
    and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work crd_finalizer has done that is
    in progress and hasn't been observed by work_duration. Large values indicate stuck
    threads. One can deduce the number of stuck threads by observing the rate at which
    this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_finalizer_unfinished_work_seconds

crd_finalizer_work_duration:
  brief: (Deprecated) How long processing an item from workqueuecrd_finalizer takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_finalizer
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_work_duration

crd_finalizer_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuecrd_finalizer takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_finalizer
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_finalizer_work_duration_count

crd_finalizer_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuecrd_finalizer takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_finalizer
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_finalizer_work_duration_quantile

crd_naming_condition_controller_adds:
  brief: '(Deprecated) Total number of adds handled by workqueue: crd_naming_condition_controller'
  custom: true
  description: '(Deprecated) Total number of adds handled by workqueue: crd_naming_condition_controller'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_adds

crd_naming_condition_controller_depth:
  brief: '(Deprecated) Current depth of workqueue: crd_naming_condition_controller'
  custom: true
  description: '(Deprecated) Current depth of workqueue: crd_naming_condition_controller'
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_depth

crd_naming_condition_controller_longest_running_processor_microseconds:
  brief: (Deprecated) How many microseconds has the longest running processor for
    crd_naming_condition_controller been running
  custom: true
  description: (Deprecated) How many microseconds has the longest running processor
    for crd_naming_condition_controller been running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_longest_running_processor_microseconds

crd_naming_condition_controller_queue_latency:
  brief: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_queue_latency

crd_naming_condition_controller_queue_latency_count:
  brief: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_queue_latency_count

crd_naming_condition_controller_queue_latency_quantile:
  brief: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested
  custom: true
  description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
    before being requested. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_queue_latency_quantile

crd_naming_condition_controller_retries:
  brief: '(Deprecated) Total number of retries handled by workqueue: crd_naming_condition_controller'
  custom: true
  description: '(Deprecated) Total number of retries handled by workqueue: crd_naming_condition_controller'
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_retries

crd_naming_condition_controller_unfinished_work_seconds:
  brief: (Deprecated) How many seconds of work crd_naming_condition_controller has
    done that is in progress and hasn't been observed by work_duration
  custom: true
  description: (Deprecated) How many seconds of work crd_naming_condition_controller
    has done that is in progress and hasn't been observed by work_duration. Large
    values indicate stuck threads. One can deduce the number of stuck threads by observing
    the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_unfinished_work_seconds

crd_naming_condition_controller_work_duration:
  brief: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_work_duration

crd_naming_condition_controller_work_duration_count:
  brief: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_work_duration_count

crd_naming_condition_controller_work_duration_quantile:
  brief: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes
  custom: true
  description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
    takes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: crd_naming_condition_controller_work_duration_quantile

etcd_helper_cache_entry:
  brief: Counter of etcd helper cache entries
  custom: true
  description: Counter of etcd helper cache entries. This can be different from etcd_helper_cache_miss_count
    because two concurrent threads can miss the cache and generate the same entry
    twice.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_entry

etcd_helper_cache_entry_count:
  brief: (Deprecated) Counter of etcd helper cache entries
  custom: true
  description: (Deprecated) Counter of etcd helper cache entries. This can be different
    from etcd_helper_cache_miss_count because two concurrent threads can miss the
    cache and generate the same entry twice.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_entry_count

etcd_helper_cache_hit:
  brief: Counter of etcd helper cache hits
  custom: true
  description: Counter of etcd helper cache hits.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_hit

etcd_helper_cache_hit_count:
  brief: (Deprecated) Counter of etcd helper cache hits
  custom: true
  description: (Deprecated) Counter of etcd helper cache hits.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_hit_count

etcd_helper_cache_miss:
  brief: Counter of etcd helper cache miss
  custom: true
  description: Counter of etcd helper cache miss.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_miss

etcd_helper_cache_miss_count:
  brief: (Deprecated) Counter of etcd helper cache miss
  custom: true
  description: (Deprecated) Counter of etcd helper cache miss.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_helper_cache_miss_count

etcd_object_counts:
  brief: Number of stored objects at the time of last check split by kind
  custom: true
  description: Number of stored objects at the time of last check split by kind.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: etcd_object_counts

etcd_request_cache_add_duration_seconds:
  brief: Latency in seconds of adding an object to etcd cache (sum)
  custom: true
  description: Latency in seconds of adding an object to etcd cache (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_duration_seconds

etcd_request_cache_add_duration_seconds_bucket:
  brief: Latency in seconds of adding an object to etcd cache (bucket)
  custom: true
  description: Latency in seconds of adding an object to etcd cache (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_duration_seconds_bucket

etcd_request_cache_add_duration_seconds_count:
  brief: Latency in seconds of adding an object to etcd cache (count)
  custom: true
  description: Latency in seconds of adding an object to etcd cache (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_duration_seconds_count

etcd_request_cache_add_latencies_summary:
  brief: (Deprecated) Latency in microseconds of adding an object to etcd cache (sum)
  custom: true
  description: (Deprecated) Latency in microseconds of adding an object to etcd cache
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_latencies_summary

etcd_request_cache_add_latencies_summary_count:
  brief: (Deprecated) Latency in microseconds of adding an object to etcd cache (count)
  custom: true
  description: (Deprecated) Latency in microseconds of adding an object to etcd cache
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_latencies_summary_count

etcd_request_cache_add_latencies_summary_quantile:
  brief: (Deprecated) Latency in microseconds of adding an object to etcd cache (quantized)
  custom: true
  description: (Deprecated) Latency in microseconds of adding an object to etcd cache
    (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: etcd_request_cache_add_latencies_summary_quantile

etcd_request_cache_get_duration_seconds:
  brief: Latency in seconds of getting an object from etcd cache (sum)
  custom: true
  description: Latency in seconds of getting an object from etcd cache (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_duration_seconds

etcd_request_cache_get_duration_seconds_bucket:
  brief: Latency in seconds of getting an object from etcd cache (bucket)
  custom: true
  description: Latency in seconds of getting an object from etcd cache (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_duration_seconds_bucket

etcd_request_cache_get_duration_seconds_count:
  brief: Latency in seconds of getting an object from etcd cache (count)
  custom: true
  description: Latency in seconds of getting an object from etcd cache (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_duration_seconds_count

etcd_request_cache_get_latencies_summary:
  brief: (Deprecated) Latency in microseconds of getting an object from etcd cache
    (sum)
  custom: true
  description: (Deprecated) Latency in microseconds of getting an object from etcd
    cache (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_latencies_summary

etcd_request_cache_get_latencies_summary_count:
  brief: (Deprecated) Latency in microseconds of getting an object from etcd cache
    (count)
  custom: true
  description: (Deprecated) Latency in microseconds of getting an object from etcd
    cache (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_latencies_summary_count

etcd_request_cache_get_latencies_summary_quantile:
  brief: (Deprecated) Latency in microseconds of getting an object from etcd cache
    (quantized)
  custom: true
  description: (Deprecated) Latency in microseconds of getting an object from etcd
    cache (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: etcd_request_cache_get_latencies_summary_quantile

get_token_count:
  brief: Counter of total Token() requests to the alternate token source
  custom: true
  description: Counter of total Token() requests to the alternate token source
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: get_token_count

get_token_fail_count:
  brief: Counter of failed Token() requests to the alternate token source
  custom: true
  description: Counter of failed Token() requests to the alternate token source
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: get_token_fail_count

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_quantile:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_gc_duration_seconds_quantile

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_info

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_released_bytes

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: go_threads

grpc_client_handled_total:
  brief: Total number of RPCs completed by the client, regardless of success or failure
  custom: true
  description: Total number of RPCs completed by the client, regardless of success
    or failure.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: grpc_client_handled_total

grpc_client_msg_received_total:
  brief: Total number of RPC stream messages received by the client
  custom: true
  description: Total number of RPC stream messages received by the client.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: grpc_client_msg_received_total

grpc_client_msg_sent_total:
  brief: Total number of gRPC stream messages sent by the client
  custom: true
  description: Total number of gRPC stream messages sent by the client.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: grpc_client_msg_sent_total

grpc_client_started_total:
  brief: Total number of RPCs started on the client
  custom: true
  description: Total number of RPCs started on the client.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: grpc_client_started_total

http_request_duration_microseconds:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_request_duration_microseconds

http_request_duration_microseconds_count:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_request_duration_microseconds_count

http_request_duration_microseconds_quantile:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: http_request_duration_microseconds_quantile

http_request_size_bytes:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_request_size_bytes

http_request_size_bytes_count:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_request_size_bytes_count

http_request_size_bytes_quantile:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: http_request_size_bytes_quantile

http_requests:
  brief: Total number of HTTP requests made
  custom: true
  description: Total number of HTTP requests made.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_requests

http_response_size_bytes:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_response_size_bytes

http_response_size_bytes_count:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: http_response_size_bytes_count

http_response_size_bytes_quantile:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: http_response_size_bytes_quantile

kubernetes_build_info:
  brief: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running
  custom: true
  description: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: kubernetes_build_info

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: process_virtual_memory_max_bytes

rest_client_request_duration_seconds:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_duration_seconds

rest_client_request_duration_seconds_bucket:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_duration_seconds_bucket

rest_client_request_duration_seconds_count:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_duration_seconds_count

rest_client_request_latency_seconds:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_latency_seconds

rest_client_request_latency_seconds_bucket:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_latency_seconds_bucket

rest_client_request_latency_seconds_count:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_request_latency_seconds_count

rest_client_requests_total:
  brief: Number of HTTP requests, partitioned by status code, method, and host
  custom: true
  description: Number of HTTP requests, partitioned by status code, method, and host.
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: rest_client_requests_total

ssh_tunnel_open_count:
  brief: Counter of ssh tunnel total open attempts
  custom: true
  description: Counter of ssh tunnel total open attempts
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: ssh_tunnel_open_count

ssh_tunnel_open_fail_count:
  brief: Counter of ssh tunnel failed open attempts
  custom: true
  description: Counter of ssh tunnel failed open attempts
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: ssh_tunnel_open_fail_count

workqueue_adds_total:
  brief: Total number of adds handled by workqueue
  custom: false
  description: Total number of adds handled by workqueue
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_adds_total

workqueue_depth:
  brief: Current depth of workqueue
  custom: false
  description: Current depth of workqueue
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: workqueue_depth

workqueue_longest_running_processor_seconds:
  brief: How many seconds has the longest running processor for workqueue been running
  custom: true
  description: How many seconds has the longest running processor for workqueue been
    running.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: workqueue_longest_running_processor_seconds

workqueue_queue_duration_seconds:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: true
  description: How long in seconds an item stays in workqueue before being requested.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_queue_duration_seconds

workqueue_queue_duration_seconds_bucket:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: true
  description: How long in seconds an item stays in workqueue before being requested.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_queue_duration_seconds_bucket

workqueue_queue_duration_seconds_count:
  brief: How long in seconds an item stays in workqueue before being requested
  custom: true
  description: How long in seconds an item stays in workqueue before being requested.
    (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_queue_duration_seconds_count

workqueue_retries_total:
  brief: Total number of retries handled by workqueue
  custom: true
  description: Total number of retries handled by workqueue
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_retries_total

workqueue_unfinished_work_seconds:
  brief: How many seconds of work has done that is in progress and hasn't been observed
    by work_duration
  custom: true
  description: How many seconds of work has done that is in progress and hasn't been
    observed by work_duration. Large values indicate stuck threads. One can deduce
    the number of stuck threads by observing the rate at which this increases.
  metric_type: gauge
  monitor: kubernetes-apiserver
  title: workqueue_unfinished_work_seconds

workqueue_work_duration_seconds:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (sum)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_work_duration_seconds

workqueue_work_duration_seconds_bucket:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (bucket)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_work_duration_seconds_bucket

workqueue_work_duration_seconds_count:
  brief: How long in seconds processing an item from workqueue takes
  custom: true
  description: How long in seconds processing an item from workqueue takes. (count)
  metric_type: cumulative
  monitor: kubernetes-apiserver
  title: workqueue_work_duration_seconds_count


kubernetes.container_cpu_limit:
  brief: Maximum CPU limit set for the container
  custom: false
  description: Maximum CPU limit set for the container. This value is derived from
    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_cpu_limit

kubernetes.container_cpu_request:
  brief: CPU requested for the container
  custom: true
  description: CPU requested for the container. This value is derived from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_cpu_request

kubernetes.container_ephemeral_storage_limit:
  brief: Maximum ephemeral storage set for the container
  custom: true
  description: Maximum ephemeral storage set for the container. This value is derived
    from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
    See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#local-ephemeral-storage
    for details.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_ephemeral_storage_limit

kubernetes.container_ephemeral_storage_request:
  brief: Ephemeral storage requested for the container
  custom: true
  description: Ephemeral storage requested for the container. This value is derived
    from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
    See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#local-ephemeral-storage
    for details
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_ephemeral_storage_request

kubernetes.container_memory_limit:
  brief: Maximum memory limit set for the container
  custom: false
  description: Maximum memory limit set for the container. This value is derived from
    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_memory_limit

kubernetes.container_memory_request:
  brief: Memory requested for the container
  custom: true
  description: Memory requested for the container. This value is derived from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_memory_request

kubernetes.container_ready:
  brief: Whether a container has passed its readiness probe (0 for no, 1 for yes)
  custom: false
  description: Whether a container has passed its readiness probe (0 for no, 1 for
    yes)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_ready

kubernetes.container_restart_count:
  brief: How many times the container has restarted in the recent past
  custom: false
  description: How many times the container has restarted in the recent past.  This
    value is pulled directly from [the K8s API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#containerstatus-v1-core)
    and the value can go indefinitely high and be reset to 0 at any time depending
    on how your [kubelet is configured to prune dead containers](https://kubernetes.io/docs/concepts/cluster-administration/kubelet-garbage-collection/).
    It is best to not depend too much on the exact value but rather look at it as
    either `== 0`, in which case you can conclude there were no restarts in the recent
    past, or `> 0`, in which case you can conclude there were restarts in the recent
    past, and not try and analyze the value beyond that.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.container_restart_count

kubernetes.cronjob.active:
  brief: The number of actively running jobs for a cronjob
  custom: true
  description: The number of actively running jobs for a cronjob.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.cronjob.active

kubernetes.daemon_set.current_scheduled:
  brief: The number of nodes that are running at least 1 daemon pod and are supposed
    to run the daemon pod
  custom: false
  description: The number of nodes that are running at least 1 daemon pod and are
    supposed to run the daemon pod
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.daemon_set.current_scheduled

kubernetes.daemon_set.desired_scheduled:
  brief: The total number of nodes that should be running the daemon pod (including
    nodes currently running the daemon pod)
  custom: false
  description: The total number of nodes that should be running the daemon pod (including
    nodes currently running the daemon pod)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.daemon_set.desired_scheduled

kubernetes.daemon_set.misscheduled:
  brief: The number of nodes that are running the daemon pod, but are not supposed
    to run the daemon pod
  custom: false
  description: The number of nodes that are running the daemon pod, but are not supposed
    to run the daemon pod
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.daemon_set.misscheduled

kubernetes.daemon_set.ready:
  brief: The number of nodes that should be running the daemon pod and have one or
    more of the daemon pod running and ready
  custom: false
  description: The number of nodes that should be running the daemon pod and have
    one or more of the daemon pod running and ready
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.daemon_set.ready

kubernetes.daemon_set.updated:
  brief: The total number of nodes that are running updated daemon pod
  custom: true
  description: The total number of nodes that are running updated daemon pod
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.daemon_set.updated

kubernetes.deployment.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this deployment
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this deployment.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.deployment.available

kubernetes.deployment.desired:
  brief: Number of desired pods in this deployment
  custom: false
  description: Number of desired pods in this deployment
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.deployment.desired

kubernetes.deployment.updated:
  brief: Total number of non-terminated pods targeted by this deployment that have
    the desired template spec
  custom: true
  description: Total number of non-terminated pods targeted by this deployment that
    have the desired template spec
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.deployment.updated

kubernetes.hpa.spec.max_replicas:
  brief: The upper limit for the number of replicas to which the autoscaler can scale
    up
  custom: true
  description: The upper limit for the number of replicas to which the autoscaler
    can scale up. It cannot be less that minReplicas.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.spec.max_replicas

kubernetes.hpa.spec.min_replicas:
  brief: The lower limit for the number of replicas to which the autoscaler can scale
    down
  custom: true
  description: The lower limit for the number of replicas to which the autoscaler
    can scale down. It defaults to 1 pod.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.spec.min_replicas

kubernetes.hpa.status.condition.able_to_scale:
  brief: A status value that indicates the autoscaler status in reference to the AbleToScale
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the AbleToScale condition. A value of 1 means that the autoscaler is in the AbleToScale
    condition, a 0 value means that it is not, and -1 means that the status of the
    AbleToScale condition is unknown. AbleToScale indicates a lack of transient issues
    which prevent scaling from occurring, such as being in a backoff window, or being
    unable to access/update the target scale.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.status.condition.able_to_scale

kubernetes.hpa.status.condition.scaling_active:
  brief: A status value that indicates the autoscaler status in reference to the ScalingActive
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the ScalingActive condition. A value of 1 means that the autoscaler is in the
    ScalingActive condition, a 0 value means that it is not, and -1 means that the
    status of the ScalingActive condition is unknown. ScalingActive indicates that
    the HPA controller is able to scale if necessary.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.status.condition.scaling_active

kubernetes.hpa.status.condition.scaling_limited:
  brief: A status value that indicates the autoscaler status in reference to the ScalingLimited
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the ScalingLimited condition. A value of 1 means that the autoscaler is in the
    ScalingLimited condition, a 0 value means that it is not, and -1 means that the
    status of the ScalingLimited condition is unknown. ScalingLimited indicates that
    the calculated scale based on metrics would be above or below the range for the
    HPA, and has thus been capped.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.status.condition.scaling_limited

kubernetes.hpa.status.current_replicas:
  brief: The current number of pod replicas managed by this autoscaler
  custom: true
  description: The current number of pod replicas managed by this autoscaler.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.status.current_replicas

kubernetes.hpa.status.desired_replicas:
  brief: The desired number of pod replicas managed by this autoscaler
  custom: true
  description: The desired number of pod replicas managed by this autoscaler.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.hpa.status.desired_replicas

kubernetes.job.active:
  brief: The number of actively running pods for a job
  custom: true
  description: The number of actively running pods for a job.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.job.active

kubernetes.job.completions:
  brief: The desired number of successfully finished pods the job should be run with
  custom: true
  description: The desired number of successfully finished pods the job should be
    run with.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.job.completions

kubernetes.job.failed:
  brief: The number of pods which reased phase Failed for a job
  custom: true
  description: The number of pods which reased phase Failed for a job.
  metric_type: cumulative
  monitor: kubernetes-cluster
  title: kubernetes.job.failed

kubernetes.job.parallelism:
  brief: The max desired number of pods the job should run at any given time
  custom: true
  description: The max desired number of pods the job should run at any given time.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.job.parallelism

kubernetes.job.succeeded:
  brief: The number of pods which reached phase Succeeded for a job
  custom: true
  description: The number of pods which reached phase Succeeded for a job.
  metric_type: cumulative
  monitor: kubernetes-cluster
  title: kubernetes.job.succeeded

kubernetes.namespace_phase:
  brief: The current phase of namespaces (`1` for _active_ and `0` for _terminating_)
  custom: false
  description: The current phase of namespaces (`1` for _active_ and `0` for _terminating_)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.namespace_phase

kubernetes.node_allocatable_cpu:
  brief: How many CPU cores remaining that the node can allocate to pods
  custom: true
  description: How many CPU cores remaining that the node can allocate to pods
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.node_allocatable_cpu

kubernetes.node_allocatable_ephemeral_storage:
  brief: How many bytes of ephemeral storage remaining that the node can allocate
    to pods
  custom: true
  description: How many bytes of ephemeral storage remaining that the node can allocate
    to pods
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.node_allocatable_ephemeral_storage

kubernetes.node_allocatable_memory:
  brief: How many bytes of RAM memory remaining that the node can allocate to pods
  custom: true
  description: How many bytes of RAM memory remaining that the node can allocate to
    pods
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.node_allocatable_memory

kubernetes.node_allocatable_storage:
  brief: How many bytes of storage remaining that the node can allocate to pods
  custom: true
  description: How many bytes of storage remaining that the node can allocate to pods
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.node_allocatable_storage

kubernetes.node_ready:
  brief: Whether this node is ready (1), not ready (0) or in an unknown state (-1)
  custom: false
  description: Whether this node is ready (1), not ready (0) or in an unknown state
    (-1)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.node_ready

kubernetes.pod_phase:
  brief: Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed,
    5 - Unknown)
  custom: false
  description: Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded,
    4 - Failed, 5 - Unknown)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.pod_phase

kubernetes.replica_set.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this replica set
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this replica set
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.replica_set.available

kubernetes.replica_set.desired:
  brief: Number of desired pods in this replica set
  custom: false
  description: Number of desired pods in this replica set
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.replica_set.desired

kubernetes.replication_controller.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this replication controller
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this replication controller.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.replication_controller.available

kubernetes.replication_controller.desired:
  brief: Number of desired pods (the `spec.replicas` field)
  custom: false
  description: Number of desired pods (the `spec.replicas` field)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.replication_controller.desired

kubernetes.resource_quota_hard:
  brief: The upper limit for a particular resource in a specific namespace
  custom: false
  description: The upper limit for a particular resource in a specific namespace.  Will
    only be sent if a quota is specified. CPU requests/limits will be sent as millicores.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.resource_quota_hard

kubernetes.resource_quota_used:
  brief: The usage for a particular resource in a specific namespace
  custom: false
  description: The usage for a particular resource in a specific namespace.  Will
    only be sent if a quota is specified. CPU requests/limits will be sent as millicores.
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.resource_quota_used

kubernetes.stateful_set.current:
  brief: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by `current_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet'
  custom: true
  description: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by `current_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet.'
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.stateful_set.current

kubernetes.stateful_set.desired:
  brief: Number of desired pods in the stateful set (the `spec.replicas` field)
  custom: true
  description: Number of desired pods in the stateful set (the `spec.replicas` field)
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.stateful_set.desired

kubernetes.stateful_set.ready:
  brief: Number of pods created by the stateful set that have the `Ready` condition
  custom: true
  description: Number of pods created by the stateful set that have the `Ready` condition
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.stateful_set.ready

kubernetes.stateful_set.updated:
  brief: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by the `update_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet'
  custom: true
  description: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by the `update_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet.'
  metric_type: gauge
  monitor: kubernetes-cluster
  title: kubernetes.stateful_set.updated


apiserver_audit_event_total:
  brief: Counter of audit events generated and sent to the audit backend
  custom: true
  description: Counter of audit events generated and sent to the audit backend.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: apiserver_audit_event_total

apiserver_audit_requests_rejected_total:
  brief: Counter of apiserver requests rejected due to an error in audit logging backend
  custom: true
  description: Counter of apiserver requests rejected due to an error in audit logging
    backend.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: apiserver_audit_requests_rejected_total

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_sum:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_gc_duration_seconds_sum

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_info

go_memstats_alloc_bytes:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed. (total)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_released_bytes

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: go_threads

http_request_duration_microseconds:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_duration_microseconds

http_request_duration_microseconds_count:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_duration_microseconds_count

http_request_duration_microseconds_sum:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_duration_microseconds_sum

http_request_size_bytes:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_size_bytes

http_request_size_bytes_count:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_size_bytes_count

http_request_size_bytes_sum:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_request_size_bytes_sum

http_requests_total:
  brief: Total number of HTTP requests made
  custom: true
  description: Total number of HTTP requests made.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_requests_total

http_response_size_bytes:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_response_size_bytes

http_response_size_bytes_count:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_response_size_bytes_count

http_response_size_bytes_sum:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: http_response_size_bytes_sum

kubeproxy_network_programming_duration_seconds_bucket:
  brief: In Cluster Network Programming Latency in seconds (bucket)
  custom: false
  description: In Cluster Network Programming Latency in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_network_programming_duration_seconds_bucket

kubeproxy_network_programming_duration_seconds_count:
  brief: In Cluster Network Programming Latency in seconds (count)
  custom: false
  description: In Cluster Network Programming Latency in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_network_programming_duration_seconds_count

kubeproxy_network_programming_duration_seconds_sum:
  brief: In Cluster Network Programming Latency in seconds (sum)
  custom: true
  description: In Cluster Network Programming Latency in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_network_programming_duration_seconds_sum

kubeproxy_sync_proxy_rules_duration_seconds_bucket:
  brief: SyncProxyRules latency in seconds (bucket)
  custom: false
  description: SyncProxyRules latency in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_duration_seconds_bucket

kubeproxy_sync_proxy_rules_duration_seconds_count:
  brief: SyncProxyRules latency in seconds (count)
  custom: false
  description: SyncProxyRules latency in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_duration_seconds_count

kubeproxy_sync_proxy_rules_duration_seconds_sum:
  brief: SyncProxyRules latency in seconds (sum)
  custom: true
  description: SyncProxyRules latency in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_duration_seconds_sum

kubeproxy_sync_proxy_rules_endpoint_changes_pending:
  brief: Number of pending endpoint changes that have not yet been synced to the proxy
  custom: true
  description: Number of pending endpoint changes that have not yet been synced to
    the proxy
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_endpoint_changes_pending

kubeproxy_sync_proxy_rules_endpoint_changes_total:
  brief: Number of total endpoint changes that have not yet been synced to the proxy
  custom: true
  description: Number of total endpoint changes that have not yet been synced to the
    proxy
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_endpoint_changes_total

kubeproxy_sync_proxy_rules_last_timestamp_seconds:
  brief: ''
  custom: true
  description: ''
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_last_timestamp_seconds

kubeproxy_sync_proxy_rules_latency_microseconds_bucket:
  brief: (Deprecated) SyncProxyRules latency in microseconds (bucket)
  custom: true
  description: (Deprecated) SyncProxyRules latency in microseconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_latency_microseconds_bucket

kubeproxy_sync_proxy_rules_latency_microseconds_count:
  brief: (Deprecated) SyncProxyRules latency in microseconds (count)
  custom: true
  description: (Deprecated) SyncProxyRules latency in microseconds (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_latency_microseconds_count

kubeproxy_sync_proxy_rules_latency_microseconds_sum:
  brief: (Deprecated) SyncProxyRules latency in microseconds (sum)
  custom: true
  description: (Deprecated) SyncProxyRules latency in microseconds (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_latency_microseconds_sum

kubeproxy_sync_proxy_rules_service_changes_pending:
  brief: Number of pending service changes that have not yet been synced to the proxy
  custom: true
  description: Number of pending service changes that have not yet been synced to
    the proxy.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_service_changes_pending

kubeproxy_sync_proxy_rules_service_changes_total:
  brief: Number of total service changes that have not yet been synced to the proxy
  custom: true
  description: Number of total service changes that have not yet been synced to the
    proxy.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubeproxy_sync_proxy_rules_service_changes_total

kubernetes_build_info:
  brief: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running
  custom: true
  description: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: kubernetes_build_info

process_cpu_seconds_total:
  brief: Total user and system CPU time spent, in seconds
  custom: true
  description: Total user and system CPU time spent, in seconds.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes.
  metric_type: gauge
  monitor: kubernetes-proxy
  title: process_virtual_memory_max_bytes

rest_client_request_duration_seconds_bucket:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (bucket)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_request_duration_seconds_bucket

rest_client_request_duration_seconds_sum:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_request_duration_seconds_sum

rest_client_request_latency_seconds_bucket:
  brief: (Deprecated) Request latency in seconds
  custom: false
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_request_latency_seconds_bucket

rest_client_request_latency_seconds_count:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (count)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_request_latency_seconds_count

rest_client_request_latency_seconds_sum:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_request_latency_seconds_sum

rest_client_requests_total:
  brief: Number of HTTP requests, partitioned by status code, method, and host
  custom: false
  description: Number of HTTP requests, partitioned by status code, method, and host.
  metric_type: cumulative
  monitor: kubernetes-proxy
  title: rest_client_requests_total


apiserver_audit_event_total:
  brief: Counter of audit events generated and sent to the audit backend
  custom: true
  description: Counter of audit events generated and sent to the audit backend.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_audit_event_total

apiserver_audit_requests_rejected_total:
  brief: Counter of apiserver requests rejected due to an error in audit logging backend
  custom: true
  description: Counter of apiserver requests rejected due to an error in audit logging
    backend.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_audit_requests_rejected_total

apiserver_client_certificate_expiration_seconds:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_client_certificate_expiration_seconds

apiserver_client_certificate_expiration_seconds_bucket:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_client_certificate_expiration_seconds_bucket

apiserver_client_certificate_expiration_seconds_count:
  brief: Distribution of the remaining lifetime on the certificate used to authenticate
    a request
  custom: true
  description: Distribution of the remaining lifetime on the certificate used to authenticate
    a request. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_client_certificate_expiration_seconds_count

apiserver_storage_data_key_generation_duration_seconds:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_duration_seconds

apiserver_storage_data_key_generation_duration_seconds_bucket:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_duration_seconds_bucket

apiserver_storage_data_key_generation_duration_seconds_count:
  brief: Latencies in seconds of data encryption key(DEK) generation operations
  custom: true
  description: Latencies in seconds of data encryption key(DEK) generation operations.
    (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_duration_seconds_count

apiserver_storage_data_key_generation_failures_total:
  brief: Total number of failed data encryption key(DEK) generation operations
  custom: true
  description: Total number of failed data encryption key(DEK) generation operations.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_failures_total

apiserver_storage_data_key_generation_latencies_microseconds:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_latencies_microseconds

apiserver_storage_data_key_generation_latencies_microseconds_bucket:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_latencies_microseconds_bucket

apiserver_storage_data_key_generation_latencies_microseconds_count:
  brief: (Deprecated) Latencies in microseconds of data encryption key(DEK) generation
    operations
  custom: true
  description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
    generation operations. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_data_key_generation_latencies_microseconds_count

apiserver_storage_envelope_transformation_cache_misses_total:
  brief: Total number of cache misses while accessing key decryption key(KEK)
  custom: true
  description: Total number of cache misses while accessing key decryption key(KEK).
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: apiserver_storage_envelope_transformation_cache_misses_total

go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_gc_duration_seconds

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_gc_duration_seconds_count

go_gc_duration_seconds_quantile:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations. (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_gc_duration_seconds_quantile

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_info

go_memstats_alloc_bytes:
  brief: Number of bytes allocated and still in use
  custom: true
  description: Number of bytes allocated and still in use.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_released_bytes

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: go_threads

http_request_duration_microseconds:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_request_duration_microseconds

http_request_duration_microseconds_count:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_request_duration_microseconds_count

http_request_duration_microseconds_quantile:
  brief: The HTTP request latencies in microseconds
  custom: true
  description: The HTTP request latencies in microseconds. (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: http_request_duration_microseconds_quantile

http_request_size_bytes:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_request_size_bytes

http_request_size_bytes_count:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_request_size_bytes_count

http_request_size_bytes_quantile:
  brief: The HTTP request sizes in bytes
  custom: true
  description: The HTTP request sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: http_request_size_bytes_quantile

http_requests_total:
  brief: Total number of HTTP requests made
  custom: true
  description: Total number of HTTP requests made.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_requests_total

http_response_size_bytes:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_response_size_bytes

http_response_size_bytes_count:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: http_response_size_bytes_count

http_response_size_bytes_quantile:
  brief: The HTTP response sizes in bytes
  custom: true
  description: The HTTP response sizes in bytes. (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: http_response_size_bytes_quantile

kubernetes_build_info:
  brief: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running
  custom: true
  description: A metric with a constant '1' value labeled by major, minor, git version,
    git commit, git tree state, build date, Go version, and compiler from which Kubernetes
    was built, and platform on which it is running.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: kubernetes_build_info

leader_election_master_status:
  brief: Gauge of if the reporting system is master of the relevant lease, 0 indicates
    backup, 1 indicates master
  custom: true
  description: Gauge of if the reporting system is master of the relevant lease, 0
    indicates backup, 1 indicates master. 'name' is the string used to identify the
    lease. Please make sure to group by name.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: leader_election_master_status

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: true
  description: Start time of the process since unix epoch in seconds.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: process_virtual_memory_max_bytes

rest_client_request_duration_seconds:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_duration_seconds

rest_client_request_duration_seconds_bucket:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_duration_seconds_bucket

rest_client_request_duration_seconds_count:
  brief: Request latency in seconds
  custom: true
  description: Request latency in seconds. Broken down by verb and URL. (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_duration_seconds_count

rest_client_request_latency_seconds:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_latency_seconds

rest_client_request_latency_seconds_bucket:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_latency_seconds_bucket

rest_client_request_latency_seconds_count:
  brief: (Deprecated) Request latency in seconds
  custom: true
  description: (Deprecated) Request latency in seconds. Broken down by verb and URL.
    (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_request_latency_seconds_count

rest_client_requests_total:
  brief: Number of HTTP requests, partitioned by status code, method, and host
  custom: false
  description: Number of HTTP requests, partitioned by status code, method, and host.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: rest_client_requests_total

scheduler_binding_duration_seconds:
  brief: Binding latency in seconds (sum)
  custom: false
  description: Binding latency in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_duration_seconds

scheduler_binding_duration_seconds_bucket:
  brief: Binding latency in seconds (bucket)
  custom: true
  description: Binding latency in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_duration_seconds_bucket

scheduler_binding_duration_seconds_count:
  brief: Binding latency in seconds (count)
  custom: true
  description: Binding latency in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_duration_seconds_count

scheduler_binding_latency_microseconds:
  brief: (Deprecated) Binding latency in microseconds (sum)
  custom: false
  description: (Deprecated) Binding latency in microseconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_latency_microseconds

scheduler_binding_latency_microseconds_bucket:
  brief: (Deprecated) Binding latency in microseconds (bucket)
  custom: true
  description: (Deprecated) Binding latency in microseconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_latency_microseconds_bucket

scheduler_binding_latency_microseconds_count:
  brief: (Deprecated) Binding latency in microseconds (count)
  custom: true
  description: (Deprecated) Binding latency in microseconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_binding_latency_microseconds_count

scheduler_e2e_scheduling_duration_seconds:
  brief: E2e scheduling latency in seconds (scheduling algorithm + binding) (sum)
  custom: false
  description: E2e scheduling latency in seconds (scheduling algorithm + binding)
    (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_duration_seconds

scheduler_e2e_scheduling_duration_seconds_bucket:
  brief: E2e scheduling latency in seconds (scheduling algorithm + binding) (bucket)
  custom: true
  description: E2e scheduling latency in seconds (scheduling algorithm + binding)
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_duration_seconds_bucket

scheduler_e2e_scheduling_duration_seconds_count:
  brief: E2e scheduling latency in seconds (scheduling algorithm + binding) (count)
  custom: true
  description: E2e scheduling latency in seconds (scheduling algorithm + binding)
    (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_duration_seconds_count

scheduler_e2e_scheduling_latency_microseconds:
  brief: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (sum)
  custom: false
  description: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_latency_microseconds

scheduler_e2e_scheduling_latency_microseconds_bucket:
  brief: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (bucket)
  custom: true
  description: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_latency_microseconds_bucket

scheduler_e2e_scheduling_latency_microseconds_count:
  brief: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (count)
  custom: true
  description: (Deprecated) E2e scheduling latency in microseconds (scheduling algorithm
    + binding) (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_e2e_scheduling_latency_microseconds_count

scheduler_pending_pods:
  brief: Number of pending pods, by the queue type
  custom: true
  description: Number of pending pods, by the queue type. 'active' means number of
    pods in activeQ; 'backoff' means number of pods in backoffQ; 'unschedulable' means
    number of pods in unschedulableQ.
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: scheduler_pending_pods

scheduler_pod_preemption_victims:
  brief: Number of selected preemption victims
  custom: true
  description: Number of selected preemption victims
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: scheduler_pod_preemption_victims

scheduler_schedule_attempts_total:
  brief: Number of attempts to schedule pods, by the result
  custom: true
  description: Number of attempts to schedule pods, by the result. 'unschedulable'
    means a pod could not be scheduled, while 'error' means an internal scheduler
    problem.
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_schedule_attempts_total

scheduler_scheduling_algorithm_duration_seconds:
  brief: Scheduling algorithm latency in seconds (sum)
  custom: false
  description: Scheduling algorithm latency in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_duration_seconds

scheduler_scheduling_algorithm_duration_seconds_bucket:
  brief: Scheduling algorithm latency in seconds (bucket)
  custom: true
  description: Scheduling algorithm latency in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_duration_seconds_bucket

scheduler_scheduling_algorithm_duration_seconds_count:
  brief: Scheduling algorithm latency in seconds (count)
  custom: true
  description: Scheduling algorithm latency in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_duration_seconds_count

scheduler_scheduling_algorithm_latency_microseconds:
  brief: (Deprecated) Scheduling algorithm latency in microseconds (sum)
  custom: false
  description: (Deprecated) Scheduling algorithm latency in microseconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_latency_microseconds

scheduler_scheduling_algorithm_latency_microseconds_bucket:
  brief: (Deprecated) Scheduling algorithm latency in microseconds (bucket)
  custom: true
  description: (Deprecated) Scheduling algorithm latency in microseconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_latency_microseconds_bucket

scheduler_scheduling_algorithm_latency_microseconds_count:
  brief: (Deprecated) Scheduling algorithm latency in microseconds (count)
  custom: true
  description: (Deprecated) Scheduling algorithm latency in microseconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_latency_microseconds_count

scheduler_scheduling_algorithm_predicate_evaluation:
  brief: (Deprecated) Scheduling algorithm predicate evaluation duration in microseconds
    (sum)
  custom: true
  description: (Deprecated) Scheduling algorithm predicate evaluation duration in
    microseconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation

scheduler_scheduling_algorithm_predicate_evaluation_bucket:
  brief: (Deprecated) Scheduling algorithm predicate evaluation duration in microseconds
    (bucket)
  custom: true
  description: (Deprecated) Scheduling algorithm predicate evaluation duration in
    microseconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation_bucket

scheduler_scheduling_algorithm_predicate_evaluation_count:
  brief: (Deprecated) Scheduling algorithm predicate evaluation duration in microseconds
    (count)
  custom: true
  description: (Deprecated) Scheduling algorithm predicate evaluation duration in
    microseconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation_count

scheduler_scheduling_algorithm_predicate_evaluation_seconds:
  brief: Scheduling algorithm predicate evaluation duration in seconds (sum)
  custom: true
  description: Scheduling algorithm predicate evaluation duration in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation_seconds

scheduler_scheduling_algorithm_predicate_evaluation_seconds_bucket:
  brief: Scheduling algorithm predicate evaluation duration in seconds (bucket)
  custom: true
  description: Scheduling algorithm predicate evaluation duration in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation_seconds_bucket

scheduler_scheduling_algorithm_predicate_evaluation_seconds_count:
  brief: Scheduling algorithm predicate evaluation duration in seconds (count)
  custom: true
  description: Scheduling algorithm predicate evaluation duration in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_predicate_evaluation_seconds_count

scheduler_scheduling_algorithm_preemption_evaluation:
  brief: (Deprecated) Scheduling algorithm preemption evaluation duration in microseconds
    (sum)
  custom: true
  description: (Deprecated) Scheduling algorithm preemption evaluation duration in
    microseconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation

scheduler_scheduling_algorithm_preemption_evaluation_bucket:
  brief: (Deprecated) Scheduling algorithm preemption evaluation duration in microseconds
    (bucket)
  custom: true
  description: (Deprecated) Scheduling algorithm preemption evaluation duration in
    microseconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation_bucket

scheduler_scheduling_algorithm_preemption_evaluation_count:
  brief: (Deprecated) Scheduling algorithm preemption evaluation duration in microseconds
    (count)
  custom: true
  description: (Deprecated) Scheduling algorithm preemption evaluation duration in
    microseconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation_count

scheduler_scheduling_algorithm_preemption_evaluation_seconds:
  brief: Scheduling algorithm preemption evaluation duration in seconds (sum)
  custom: true
  description: Scheduling algorithm preemption evaluation duration in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation_seconds

scheduler_scheduling_algorithm_preemption_evaluation_seconds_bucket:
  brief: Scheduling algorithm preemption evaluation duration in seconds (bucket)
  custom: true
  description: Scheduling algorithm preemption evaluation duration in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation_seconds_bucket

scheduler_scheduling_algorithm_preemption_evaluation_seconds_count:
  brief: Scheduling algorithm preemption evaluation duration in seconds (count)
  custom: true
  description: Scheduling algorithm preemption evaluation duration in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_preemption_evaluation_seconds_count

scheduler_scheduling_algorithm_priority_evaluation:
  brief: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (sum)
  custom: true
  description: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation

scheduler_scheduling_algorithm_priority_evaluation_bucket:
  brief: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (bucket)
  custom: true
  description: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation_bucket

scheduler_scheduling_algorithm_priority_evaluation_count:
  brief: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (count)
  custom: true
  description: (Deprecated) Scheduling algorithm priority evaluation duration in microseconds
    (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation_count

scheduler_scheduling_algorithm_priority_evaluation_seconds:
  brief: Scheduling algorithm priority evaluation duration in seconds (sum)
  custom: true
  description: Scheduling algorithm priority evaluation duration in seconds (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation_seconds

scheduler_scheduling_algorithm_priority_evaluation_seconds_bucket:
  brief: Scheduling algorithm priority evaluation duration in seconds (bucket)
  custom: true
  description: Scheduling algorithm priority evaluation duration in seconds (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation_seconds_bucket

scheduler_scheduling_algorithm_priority_evaluation_seconds_count:
  brief: Scheduling algorithm priority evaluation duration in seconds (count)
  custom: true
  description: Scheduling algorithm priority evaluation duration in seconds (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_algorithm_priority_evaluation_seconds_count

scheduler_scheduling_duration_seconds:
  brief: Scheduling latency in seconds split by sub-parts of the scheduling operation
    (sum)
  custom: true
  description: Scheduling latency in seconds split by sub-parts of the scheduling
    operation (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_duration_seconds

scheduler_scheduling_duration_seconds_count:
  brief: Scheduling latency in seconds split by sub-parts of the scheduling operation
    (count)
  custom: true
  description: Scheduling latency in seconds split by sub-parts of the scheduling
    operation (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_duration_seconds_count

scheduler_scheduling_duration_seconds_quantile:
  brief: Scheduling latency in seconds split by sub-parts of the scheduling operation
    (quantized)
  custom: true
  description: Scheduling latency in seconds split by sub-parts of the scheduling
    operation (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_duration_seconds_quantile

scheduler_scheduling_latency_seconds:
  brief: (Deprecated) Scheduling latency in seconds split by sub-parts of the scheduling
    operation (sum)
  custom: true
  description: (Deprecated) Scheduling latency in seconds split by sub-parts of the
    scheduling operation (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_latency_seconds

scheduler_scheduling_latency_seconds_count:
  brief: (Deprecated) Scheduling latency in seconds split by sub-parts of the scheduling
    operation (count)
  custom: true
  description: (Deprecated) Scheduling latency in seconds split by sub-parts of the
    scheduling operation (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_latency_seconds_count

scheduler_scheduling_latency_seconds_quantile:
  brief: (Deprecated) Scheduling latency in seconds split by sub-parts of the scheduling
    operation (quantized)
  custom: true
  description: (Deprecated) Scheduling latency in seconds split by sub-parts of the
    scheduling operation (quantized)
  metric_type: gauge
  monitor: kubernetes-scheduler
  title: scheduler_scheduling_latency_seconds_quantile

scheduler_total_preemption_attempts:
  brief: Total preemption attempts in the cluster till now
  custom: true
  description: Total preemption attempts in the cluster till now
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_total_preemption_attempts

scheduler_volume_scheduling_duration_seconds:
  brief: Volume scheduling stage latency (sum)
  custom: true
  description: Volume scheduling stage latency (sum)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_volume_scheduling_duration_seconds

scheduler_volume_scheduling_duration_seconds_bucket:
  brief: Volume scheduling stage latency (bucket)
  custom: true
  description: Volume scheduling stage latency (bucket)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_volume_scheduling_duration_seconds_bucket

scheduler_volume_scheduling_duration_seconds_count:
  brief: Volume scheduling stage latency (count)
  custom: true
  description: Volume scheduling stage latency (count)
  metric_type: cumulative
  monitor: kubernetes-scheduler
  title: scheduler_volume_scheduling_duration_seconds_count


kubernetes.volume_available_bytes:
  brief: The number of available bytes in the volume
  custom: false
  description: The number of available bytes in the volume
  metric_type: gauge
  monitor: kubernetes-volumes
  title: kubernetes.volume_available_bytes

kubernetes.volume_capacity_bytes:
  brief: The total capacity in bytes of the volume
  custom: false
  description: The total capacity in bytes of the volume
  metric_type: gauge
  monitor: kubernetes-volumes
  title: kubernetes.volume_capacity_bytes

kubernetes.volume_inodes:
  brief: The total inodes in the filesystem
  custom: true
  description: The total inodes in the filesystem
  metric_type: gauge
  monitor: kubernetes-volumes
  title: kubernetes.volume_inodes

kubernetes.volume_inodes_free:
  brief: The free inodes in the filesystem
  custom: true
  description: The free inodes in the filesystem
  metric_type: gauge
  monitor: kubernetes-volumes
  title: kubernetes.volume_inodes_free

kubernetes.volume_inodes_used:
  brief: The inodes used by the filesystem
  custom: true
  description: The inodes used by the filesystem. This may not equal `inodes - free`
    because filesystem may share inodes with other filesystems.
  metric_type: gauge
  monitor: kubernetes-volumes
  title: kubernetes.volume_inodes_used


load.longterm:
  brief: Average CPU load of the system over the last 15 minutes
  custom: false
  description: Average CPU load of the system over the last 15 minutes.  If the `perCPU`
    config option is `true`, this will be the average load per CPU.
  metric_type: gauge
  monitor: load
  title: load.longterm

load.midterm:
  brief: Average CPU load of the system over the last 5 minutes
  custom: false
  description: Average CPU load of the system over the last 5 minutes.  If the `perCPU`
    config option is `true`, this will be the average load per CPU.
  metric_type: gauge
  monitor: load
  title: load.midterm

load.shortterm:
  brief: Average CPU load of the system over the last minute
  custom: false
  description: Average CPU load of the system over the last minute.  If the `perCPU`
    config option is `true`, this will be the average load per CPU.
  metric_type: gauge
  monitor: load
  title: load.shortterm


memory.available:
  brief: (Windows Only) Bytes of memory available for use
  custom: true
  description: (Windows Only) Bytes of memory available for use.
  metric_type: gauge
  monitor: memory
  title: memory.available

memory.buffered:
  brief: (Linux Only) Bytes of memory used for buffering I/O
  custom: false
  description: (Linux Only) Bytes of memory used for buffering I/O.
  metric_type: gauge
  monitor: memory
  title: memory.buffered

memory.cached:
  brief: (Linux Only) Bytes of memory used for disk caching
  custom: false
  description: (Linux Only) Bytes of memory used for disk caching.
  metric_type: gauge
  monitor: memory
  title: memory.cached

memory.free:
  brief: (Linux Only) Bytes of memory available for use
  custom: false
  description: (Linux Only) Bytes of memory available for use.
  metric_type: gauge
  monitor: memory
  title: memory.free

memory.slab_recl:
  brief: (Linux Only) Bytes of memory, used for SLAB-allocation of kernel objects,
    that can be reclaimed
  custom: false
  description: (Linux Only) Bytes of memory, used for SLAB-allocation of kernel objects,
    that can be reclaimed.
  metric_type: gauge
  monitor: memory
  title: memory.slab_recl

memory.slab_unrecl:
  brief: (Linux Only) Bytes of memory, used for SLAB-allocation of kernel objects,
    that can't be reclaimed
  custom: false
  description: (Linux Only) Bytes of memory, used for SLAB-allocation of kernel objects,
    that can't be reclaimed.
  metric_type: gauge
  monitor: memory
  title: memory.slab_unrecl

memory.swap_free:
  brief: Bytes of swap memory available for use
  custom: true
  description: Bytes of swap memory available for use.
  metric_type: gauge
  monitor: memory
  title: memory.swap_free

memory.swap_total:
  brief: Total bytes of swap memory on the system
  custom: true
  description: Total bytes of swap memory on the system.
  metric_type: gauge
  monitor: memory
  title: memory.swap_total

memory.swap_used:
  brief: Bytes of swap memory in use by the system
  custom: true
  description: Bytes of swap memory in use by the system.
  metric_type: gauge
  monitor: memory
  title: memory.swap_used

memory.total:
  brief: Total bytes of system memory on the system
  custom: false
  description: Total bytes of system memory on the system.
  metric_type: gauge
  monitor: memory
  title: memory.total

memory.used:
  brief: Bytes of memory in use by the system
  custom: false
  description: Bytes of memory in use by the system.
  metric_type: gauge
  monitor: memory
  title: memory.used

memory.utilization:
  brief: Percent of memory in use on this host
  custom: false
  description: Percent of memory in use on this host.  This does NOT include buffer
    or cache memory on Linux.
  metric_type: gauge
  monitor: memory
  title: memory.utilization


nagios.state:
  brief: Nagios status check [state](https://nagios-plugins.org/doc/guidelines.html#AEN78)
  custom: false
  description: Nagios status check [state](https://nagios-plugins.org/doc/guidelines.html#AEN78).
  metric_type: gauge
  monitor: nagios
  title: nagios.state


if_dropped.rx:
  brief: Count of received packets dropped by the interface
  custom: true
  description: Count of received packets dropped by the interface
  metric_type: cumulative
  monitor: net-io
  title: if_dropped.rx

if_dropped.tx:
  brief: Count of transmitted packets dropped by the interface
  custom: true
  description: Count of transmitted packets dropped by the interface
  metric_type: cumulative
  monitor: net-io
  title: if_dropped.tx

if_errors.rx:
  brief: Count of receive errors on the interface
  custom: false
  description: Count of receive errors on the interface
  metric_type: cumulative
  monitor: net-io
  title: if_errors.rx

if_errors.tx:
  brief: Count of transmit errors on the interface
  custom: false
  description: Count of transmit errors on the interface
  metric_type: cumulative
  monitor: net-io
  title: if_errors.tx

if_octets.rx:
  brief: Count of bytes (octets) received on the interface
  custom: false
  description: Count of bytes (octets) received on the interface
  metric_type: cumulative
  monitor: net-io
  title: if_octets.rx

if_octets.tx:
  brief: Count of bytes (octets) transmitted by the interface
  custom: false
  description: Count of bytes (octets) transmitted by the interface
  metric_type: cumulative
  monitor: net-io
  title: if_octets.tx

if_packets.rx:
  brief: Count of packets received on the interface
  custom: true
  description: Count of packets received on the interface
  metric_type: cumulative
  monitor: net-io
  title: if_packets.rx

if_packets.tx:
  brief: Count of packets transmitted by the interface
  custom: true
  description: Count of packets transmitted by the interface
  metric_type: cumulative
  monitor: net-io
  title: if_packets.tx

network.total:
  brief: Total amount of inbound and outbound network traffic on this host, in bytes
  custom: false
  description: Total amount of inbound and outbound network traffic on this host,
    in bytes.
  metric_type: cumulative
  monitor: net-io
  title: network.total


ntp.offset_seconds:
  brief: Time difference between local and NTP server clocks in seconds
  custom: false
  description: Time difference between local and NTP server clocks in seconds.
  metric_type: gauge
  monitor: ntp
  title: ntp.offset_seconds


kubernetes.container_cpu_limit:
  brief: Maximum CPU limit set for the container
  custom: false
  description: Maximum CPU limit set for the container. This value is derived from
    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_cpu_limit

kubernetes.container_cpu_request:
  brief: CPU requested for the container
  custom: true
  description: CPU requested for the container. This value is derived from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_cpu_request

kubernetes.container_ephemeral_storage_limit:
  brief: Maximum ephemeral storage set for the container
  custom: true
  description: Maximum ephemeral storage set for the container. This value is derived
    from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
    See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#local-ephemeral-storage
    for details.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_ephemeral_storage_limit

kubernetes.container_ephemeral_storage_request:
  brief: Ephemeral storage requested for the container
  custom: true
  description: Ephemeral storage requested for the container. This value is derived
    from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
    See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#local-ephemeral-storage
    for details
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_ephemeral_storage_request

kubernetes.container_memory_limit:
  brief: Maximum memory limit set for the container
  custom: false
  description: Maximum memory limit set for the container. This value is derived from
    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_memory_limit

kubernetes.container_memory_request:
  brief: Memory requested for the container
  custom: true
  description: Memory requested for the container. This value is derived from https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#resourcerequirements-v1-core
    which comes from the pod spec and is reported only if a non null value is available.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_memory_request

kubernetes.container_ready:
  brief: Whether a container has passed its readiness probe (0 for no, 1 for yes)
  custom: false
  description: Whether a container has passed its readiness probe (0 for no, 1 for
    yes)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_ready

kubernetes.container_restart_count:
  brief: How many times the container has restarted in the recent past
  custom: false
  description: How many times the container has restarted in the recent past.  This
    value is pulled directly from [the K8s API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#containerstatus-v1-core)
    and the value can go indefinitely high and be reset to 0 at any time depending
    on how your [kubelet is configured to prune dead containers](https://kubernetes.io/docs/concepts/cluster-administration/kubelet-garbage-collection/).
    It is best to not depend too much on the exact value but rather look at it as
    either `== 0`, in which case you can conclude there were no restarts in the recent
    past, or `> 0`, in which case you can conclude there were restarts in the recent
    past, and not try and analyze the value beyond that.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.container_restart_count

kubernetes.cronjob.active:
  brief: The number of actively running jobs for a cronjob
  custom: true
  description: The number of actively running jobs for a cronjob.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.cronjob.active

kubernetes.daemon_set.current_scheduled:
  brief: The number of nodes that are running at least 1 daemon pod and are supposed
    to run the daemon pod
  custom: false
  description: The number of nodes that are running at least 1 daemon pod and are
    supposed to run the daemon pod
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.daemon_set.current_scheduled

kubernetes.daemon_set.desired_scheduled:
  brief: The total number of nodes that should be running the daemon pod (including
    nodes currently running the daemon pod)
  custom: false
  description: The total number of nodes that should be running the daemon pod (including
    nodes currently running the daemon pod)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.daemon_set.desired_scheduled

kubernetes.daemon_set.misscheduled:
  brief: The number of nodes that are running the daemon pod, but are not supposed
    to run the daemon pod
  custom: false
  description: The number of nodes that are running the daemon pod, but are not supposed
    to run the daemon pod
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.daemon_set.misscheduled

kubernetes.daemon_set.ready:
  brief: The number of nodes that should be running the daemon pod and have one or
    more of the daemon pod running and ready
  custom: false
  description: The number of nodes that should be running the daemon pod and have
    one or more of the daemon pod running and ready
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.daemon_set.ready

kubernetes.daemon_set.updated:
  brief: The total number of nodes that are running updated daemon pod
  custom: true
  description: The total number of nodes that are running updated daemon pod
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.daemon_set.updated

kubernetes.deployment.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this deployment
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this deployment.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.deployment.available

kubernetes.deployment.desired:
  brief: Number of desired pods in this deployment
  custom: false
  description: Number of desired pods in this deployment
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.deployment.desired

kubernetes.deployment.updated:
  brief: Total number of non-terminated pods targeted by this deployment that have
    the desired template spec
  custom: true
  description: Total number of non-terminated pods targeted by this deployment that
    have the desired template spec
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.deployment.updated

kubernetes.hpa.spec.max_replicas:
  brief: The upper limit for the number of replicas to which the autoscaler can scale
    up
  custom: true
  description: The upper limit for the number of replicas to which the autoscaler
    can scale up. It cannot be less that minReplicas.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.spec.max_replicas

kubernetes.hpa.spec.min_replicas:
  brief: The lower limit for the number of replicas to which the autoscaler can scale
    down
  custom: true
  description: The lower limit for the number of replicas to which the autoscaler
    can scale down. It defaults to 1 pod.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.spec.min_replicas

kubernetes.hpa.status.condition.able_to_scale:
  brief: A status value that indicates the autoscaler status in reference to the AbleToScale
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the AbleToScale condition. A value of 1 means that the autoscaler is in the AbleToScale
    condition, a 0 value means that it is not, and -1 means that the status of the
    AbleToScale condition is unknown. AbleToScale indicates a lack of transient issues
    which prevent scaling from occurring, such as being in a backoff window, or being
    unable to access/update the target scale.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.status.condition.able_to_scale

kubernetes.hpa.status.condition.scaling_active:
  brief: A status value that indicates the autoscaler status in reference to the ScalingActive
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the ScalingActive condition. A value of 1 means that the autoscaler is in the
    ScalingActive condition, a 0 value means that it is not, and -1 means that the
    status of the ScalingActive condition is unknown. ScalingActive indicates that
    the HPA controller is able to scale if necessary.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.status.condition.scaling_active

kubernetes.hpa.status.condition.scaling_limited:
  brief: A status value that indicates the autoscaler status in reference to the ScalingLimited
    condition
  custom: true
  description: A status value that indicates the autoscaler status in reference to
    the ScalingLimited condition. A value of 1 means that the autoscaler is in the
    ScalingLimited condition, a 0 value means that it is not, and -1 means that the
    status of the ScalingLimited condition is unknown. ScalingLimited indicates that
    the calculated scale based on metrics would be above or below the range for the
    HPA, and has thus been capped.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.status.condition.scaling_limited

kubernetes.hpa.status.current_replicas:
  brief: The current number of pod replicas managed by this autoscaler
  custom: true
  description: The current number of pod replicas managed by this autoscaler.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.status.current_replicas

kubernetes.hpa.status.desired_replicas:
  brief: The desired number of pod replicas managed by this autoscaler
  custom: true
  description: The desired number of pod replicas managed by this autoscaler.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.hpa.status.desired_replicas

kubernetes.job.active:
  brief: The number of actively running pods for a job
  custom: true
  description: The number of actively running pods for a job.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.job.active

kubernetes.job.completions:
  brief: The desired number of successfully finished pods the job should be run with
  custom: true
  description: The desired number of successfully finished pods the job should be
    run with.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.job.completions

kubernetes.job.failed:
  brief: The number of pods which reased phase Failed for a job
  custom: true
  description: The number of pods which reased phase Failed for a job.
  metric_type: cumulative
  monitor: openshift-cluster
  title: kubernetes.job.failed

kubernetes.job.parallelism:
  brief: The max desired number of pods the job should run at any given time
  custom: true
  description: The max desired number of pods the job should run at any given time.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.job.parallelism

kubernetes.job.succeeded:
  brief: The number of pods which reached phase Succeeded for a job
  custom: true
  description: The number of pods which reached phase Succeeded for a job.
  metric_type: cumulative
  monitor: openshift-cluster
  title: kubernetes.job.succeeded

kubernetes.namespace_phase:
  brief: The current phase of namespaces (`1` for _active_ and `0` for _terminating_)
  custom: false
  description: The current phase of namespaces (`1` for _active_ and `0` for _terminating_)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.namespace_phase

kubernetes.node_allocatable_cpu:
  brief: How many CPU cores remaining that the node can allocate to pods
  custom: true
  description: How many CPU cores remaining that the node can allocate to pods
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.node_allocatable_cpu

kubernetes.node_allocatable_ephemeral_storage:
  brief: How many bytes of ephemeral storage remaining that the node can allocate
    to pods
  custom: true
  description: How many bytes of ephemeral storage remaining that the node can allocate
    to pods
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.node_allocatable_ephemeral_storage

kubernetes.node_allocatable_memory:
  brief: How many bytes of RAM memory remaining that the node can allocate to pods
  custom: true
  description: How many bytes of RAM memory remaining that the node can allocate to
    pods
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.node_allocatable_memory

kubernetes.node_allocatable_storage:
  brief: How many bytes of storage remaining that the node can allocate to pods
  custom: true
  description: How many bytes of storage remaining that the node can allocate to pods
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.node_allocatable_storage

kubernetes.node_ready:
  brief: Whether this node is ready (1), not ready (0) or in an unknown state (-1)
  custom: false
  description: Whether this node is ready (1), not ready (0) or in an unknown state
    (-1)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.node_ready

kubernetes.pod_phase:
  brief: Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded, 4 - Failed,
    5 - Unknown)
  custom: false
  description: Current phase of the pod (1 - Pending, 2 - Running, 3 - Succeeded,
    4 - Failed, 5 - Unknown)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.pod_phase

kubernetes.replica_set.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this replica set
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this replica set
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.replica_set.available

kubernetes.replica_set.desired:
  brief: Number of desired pods in this replica set
  custom: false
  description: Number of desired pods in this replica set
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.replica_set.desired

kubernetes.replication_controller.available:
  brief: Total number of available pods (ready for at least minReadySeconds) targeted
    by this replication controller
  custom: false
  description: Total number of available pods (ready for at least minReadySeconds)
    targeted by this replication controller.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.replication_controller.available

kubernetes.replication_controller.desired:
  brief: Number of desired pods (the `spec.replicas` field)
  custom: false
  description: Number of desired pods (the `spec.replicas` field)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.replication_controller.desired

kubernetes.resource_quota_hard:
  brief: The upper limit for a particular resource in a specific namespace
  custom: false
  description: The upper limit for a particular resource in a specific namespace.  Will
    only be sent if a quota is specified. CPU requests/limits will be sent as millicores.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.resource_quota_hard

kubernetes.resource_quota_used:
  brief: The usage for a particular resource in a specific namespace
  custom: false
  description: The usage for a particular resource in a specific namespace.  Will
    only be sent if a quota is specified. CPU requests/limits will be sent as millicores.
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.resource_quota_used

kubernetes.stateful_set.current:
  brief: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by `current_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet'
  custom: true
  description: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by `current_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet.'
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.stateful_set.current

kubernetes.stateful_set.desired:
  brief: Number of desired pods in the stateful set (the `spec.replicas` field)
  custom: true
  description: Number of desired pods in the stateful set (the `spec.replicas` field)
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.stateful_set.desired

kubernetes.stateful_set.ready:
  brief: Number of pods created by the stateful set that have the `Ready` condition
  custom: true
  description: Number of pods created by the stateful set that have the `Ready` condition
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.stateful_set.ready

kubernetes.stateful_set.updated:
  brief: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by the `update_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet'
  custom: true
  description: 'The number of pods created by the StatefulSet controller from the

    StatefulSet version indicated by the `update_revision` property on the

    `kubernetes_uid` dimension for this StatefulSet.'
  metric_type: gauge
  monitor: openshift-cluster
  title: kubernetes.stateful_set.updated

openshift.appliedclusterquota.cpu.hard:
  brief: Hard limit for number of cpu by namespace
  custom: false
  description: Hard limit for number of cpu by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.cpu.hard

openshift.appliedclusterquota.cpu.used:
  brief: Consumed number of cpu by namespace
  custom: false
  description: Consumed number of cpu by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.cpu.used

openshift.appliedclusterquota.memory.hard:
  brief: Hard limit for amount of memory by namespace
  custom: false
  description: Hard limit for amount of memory by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.memory.hard

openshift.appliedclusterquota.memory.used:
  brief: Consumed amount of memory by namespace
  custom: false
  description: Consumed amount of memory by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.memory.used

openshift.appliedclusterquota.persistentvolumeclaims.hard:
  brief: Hard limit for number of persistentvolumeclaims by namespace
  custom: false
  description: Hard limit for number of persistentvolumeclaims by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.persistentvolumeclaims.hard

openshift.appliedclusterquota.persistentvolumeclaims.used:
  brief: Consumed number of persistentvolumeclaims by namespace
  custom: false
  description: Consumed number of persistentvolumeclaims by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.persistentvolumeclaims.used

openshift.appliedclusterquota.pods.hard:
  brief: Hard limit for number of pods by namespace
  custom: false
  description: Hard limit for number of pods by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.pods.hard

openshift.appliedclusterquota.pods.used:
  brief: Consumed number of pods by namespace
  custom: false
  description: Consumed number of pods by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.pods.used

openshift.appliedclusterquota.services.hard:
  brief: Hard limit for number of services by namespace
  custom: false
  description: Hard limit for number of services by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.hard

openshift.appliedclusterquota.services.loadbalancers.hard:
  brief: Hard limit for number of services.loadbalancers by namespace
  custom: false
  description: Hard limit for number of services.loadbalancers by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.loadbalancers.hard

openshift.appliedclusterquota.services.loadbalancers.used:
  brief: Consumed number of services.loadbalancers by namespace
  custom: false
  description: Consumed number of services.loadbalancers by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.loadbalancers.used

openshift.appliedclusterquota.services.nodeports.hard:
  brief: Hard limit for number of services.nodeports by namespace
  custom: false
  description: Hard limit for number of services.nodeports by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.nodeports.hard

openshift.appliedclusterquota.services.nodeports.used:
  brief: Consumed number of services.nodeports by namespace
  custom: false
  description: Consumed number of services.nodeports by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.nodeports.used

openshift.appliedclusterquota.services.used:
  brief: Consumed number of services by namespace
  custom: false
  description: Consumed number of services by namespace
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.appliedclusterquota.services.used

openshift.clusterquota.cpu.hard:
  brief: Hard limit for number of cpu across all namespaces
  custom: false
  description: Hard limit for number of cpu across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.cpu.hard

openshift.clusterquota.cpu.used:
  brief: Consumed number of cpu across all namespaces
  custom: false
  description: Consumed number of cpu across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.cpu.used

openshift.clusterquota.memory.hard:
  brief: Hard limit for amount of memory across all namespaces
  custom: false
  description: Hard limit for amount of memory across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.memory.hard

openshift.clusterquota.memory.used:
  brief: Consumed amount of memory across all namespaces
  custom: false
  description: Consumed amount of memory across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.memory.used

openshift.clusterquota.persistentvolumeclaims.hard:
  brief: Hard limit for number of persistentvolumeclaims across all namespaces
  custom: false
  description: Hard limit for number of persistentvolumeclaims across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.persistentvolumeclaims.hard

openshift.clusterquota.persistentvolumeclaims.used:
  brief: Consumed number of persistentvolumeclaims across all namespaces
  custom: false
  description: Consumed number of persistentvolumeclaims across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.persistentvolumeclaims.used

openshift.clusterquota.pods.hard:
  brief: Hard limit for number of pods across all namespaces
  custom: false
  description: Hard limit for number of pods across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.pods.hard

openshift.clusterquota.pods.used:
  brief: Consumed number of pods across all namespaces
  custom: false
  description: Consumed number of pods across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.pods.used

openshift.clusterquota.services.hard:
  brief: Hard limit for number of services across all namespaces
  custom: false
  description: Hard limit for number of services across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.hard

openshift.clusterquota.services.loadbalancers.hard:
  brief: Hard limit for number of services.loadbalancers across all namespaces
  custom: false
  description: Hard limit for number of services.loadbalancers across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.loadbalancers.hard

openshift.clusterquota.services.loadbalancers.used:
  brief: Consumed number of services.loadbalancers across all namespaces
  custom: false
  description: Consumed number of services.loadbalancers across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.loadbalancers.used

openshift.clusterquota.services.nodeports.hard:
  brief: Hard limit for number of services.nodeports across all namespaces
  custom: false
  description: Hard limit for number of services.nodeports across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.nodeports.hard

openshift.clusterquota.services.nodeports.used:
  brief: Consumed number of services.nodeports across all namespaces
  custom: false
  description: Consumed number of services.nodeports across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.nodeports.used

openshift.clusterquota.services.used:
  brief: Consumed number of services across all namespaces
  custom: false
  description: Consumed number of services across all namespaces
  metric_type: gauge
  monitor: openshift-cluster
  title: openshift.clusterquota.services.used


process.cpu_time_seconds:
  brief: Total CPU usage of the process in seconds
  custom: false
  description: Total CPU usage of the process in seconds.  If you analyze this metric
    as a rate/second, it tells you how many CPU cores the process is using.
  metric_type: cumulative
  monitor: process
  title: process.cpu_time_seconds

process.rss_memory_bytes:
  brief: Current RSS Memory usage of the process, in bytes
  custom: false
  description: Current RSS Memory usage of the process, in bytes
  metric_type: gauge
  monitor: process
  title: process.rss_memory_bytes


go_gc_duration_seconds:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations
  metric_type: cumulative
  monitor: prometheus/go
  title: go_gc_duration_seconds

go_gc_duration_seconds_bucket:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations
  metric_type: cumulative
  monitor: prometheus/go
  title: go_gc_duration_seconds_bucket

go_gc_duration_seconds_count:
  brief: A summary of the GC invocation durations
  custom: true
  description: A summary of the GC invocation durations
  metric_type: cumulative
  monitor: prometheus/go
  title: go_gc_duration_seconds_count

go_goroutines:
  brief: Number of goroutines that currently exist
  custom: true
  description: Number of goroutines that currently exist
  metric_type: gauge
  monitor: prometheus/go
  title: go_goroutines

go_info:
  brief: Information about the Go environment
  custom: true
  description: Information about the Go environment
  metric_type: gauge
  monitor: prometheus/go
  title: go_info

go_memstats_alloc_bytes:
  brief: Number of bytes allocated and still in use
  custom: true
  description: Number of bytes allocated and still in use
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_alloc_bytes

go_memstats_alloc_bytes_total:
  brief: Total number of bytes allocated, even if freed
  custom: true
  description: Total number of bytes allocated, even if freed
  metric_type: cumulative
  monitor: prometheus/go
  title: go_memstats_alloc_bytes_total

go_memstats_buck_hash_sys_bytes:
  brief: Number of bytes used by the profiling bucket hash table
  custom: true
  description: Number of bytes used by the profiling bucket hash table
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_buck_hash_sys_bytes

go_memstats_frees_total:
  brief: Total number of frees
  custom: true
  description: Total number of frees
  metric_type: cumulative
  monitor: prometheus/go
  title: go_memstats_frees_total

go_memstats_gc_cpu_fraction:
  brief: The fraction of this program's available CPU time used by the GC since the
    program started
  custom: true
  description: The fraction of this program's available CPU time used by the GC since
    the program started
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_gc_cpu_fraction

go_memstats_gc_sys_bytes:
  brief: Number of bytes used for garbage collection system metadata
  custom: true
  description: Number of bytes used for garbage collection system metadata
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_gc_sys_bytes

go_memstats_heap_alloc_bytes:
  brief: Number of heap bytes allocated and still in use
  custom: true
  description: Number of heap bytes allocated and still in use
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_alloc_bytes

go_memstats_heap_idle_bytes:
  brief: Number of heap bytes waiting to be used
  custom: true
  description: Number of heap bytes waiting to be used
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_idle_bytes

go_memstats_heap_inuse_bytes:
  brief: Number of heap bytes that are in use
  custom: true
  description: Number of heap bytes that are in use
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_inuse_bytes

go_memstats_heap_objects:
  brief: Number of allocated objects
  custom: true
  description: Number of allocated objects
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_objects

go_memstats_heap_released_bytes:
  brief: Number of heap bytes released to OS
  custom: true
  description: Number of heap bytes released to OS
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_released_bytes

go_memstats_heap_sys_bytes:
  brief: Number of heap bytes obtained from system
  custom: true
  description: Number of heap bytes obtained from system
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_heap_sys_bytes

go_memstats_last_gc_time_seconds:
  brief: Number of seconds since 1970 of last garbage collection
  custom: true
  description: Number of seconds since 1970 of last garbage collection
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_last_gc_time_seconds

go_memstats_lookups_total:
  brief: Total number of pointer lookups
  custom: true
  description: Total number of pointer lookups
  metric_type: cumulative
  monitor: prometheus/go
  title: go_memstats_lookups_total

go_memstats_mallocs_total:
  brief: Total number of mallocs
  custom: true
  description: Total number of mallocs
  metric_type: cumulative
  monitor: prometheus/go
  title: go_memstats_mallocs_total

go_memstats_mcache_inuse_bytes:
  brief: Number of bytes in use by mcache structures
  custom: true
  description: Number of bytes in use by mcache structures
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_mcache_inuse_bytes

go_memstats_mcache_sys_bytes:
  brief: Number of bytes used for mcache structures obtained from system
  custom: true
  description: Number of bytes used for mcache structures obtained from system
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_mcache_sys_bytes

go_memstats_mspan_inuse_bytes:
  brief: Number of bytes in use by mspan structures
  custom: true
  description: Number of bytes in use by mspan structures
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_mspan_inuse_bytes

go_memstats_mspan_sys_bytes:
  brief: Number of bytes used for mspan structures obtained from system
  custom: true
  description: Number of bytes used for mspan structures obtained from system
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_mspan_sys_bytes

go_memstats_next_gc_bytes:
  brief: Number of heap bytes when next garbage collection will take place
  custom: true
  description: Number of heap bytes when next garbage collection will take place
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_next_gc_bytes

go_memstats_other_sys_bytes:
  brief: Number of bytes used for other system allocations
  custom: true
  description: Number of bytes used for other system allocations
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_other_sys_bytes

go_memstats_stack_inuse_bytes:
  brief: Number of bytes in use by the stack allocator
  custom: true
  description: Number of bytes in use by the stack allocator
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_stack_inuse_bytes

go_memstats_stack_sys_bytes:
  brief: Number of bytes obtained from system for stack allocator
  custom: true
  description: Number of bytes obtained from system for stack allocator
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_stack_sys_bytes

go_memstats_sys_bytes:
  brief: Number of bytes obtained from system
  custom: true
  description: Number of bytes obtained from system
  metric_type: gauge
  monitor: prometheus/go
  title: go_memstats_sys_bytes

go_threads:
  brief: Number of OS threads created
  custom: true
  description: Number of OS threads created
  metric_type: gauge
  monitor: prometheus/go
  title: go_threads

process_cpu_seconds_total:
  brief: Total user and system CPU time spent in seconds
  custom: true
  description: Total user and system CPU time spent in seconds
  metric_type: cumulative
  monitor: prometheus/go
  title: process_cpu_seconds_total

process_max_fds:
  brief: Maximum number of open file descriptors
  custom: true
  description: Maximum number of open file descriptors
  metric_type: gauge
  monitor: prometheus/go
  title: process_max_fds

process_open_fds:
  brief: Number of open file descriptors
  custom: true
  description: Number of open file descriptors
  metric_type: gauge
  monitor: prometheus/go
  title: process_open_fds

process_resident_memory_bytes:
  brief: Resident memory size in bytes
  custom: true
  description: Resident memory size in bytes
  metric_type: gauge
  monitor: prometheus/go
  title: process_resident_memory_bytes

process_start_time_seconds:
  brief: Start time of the process since unix epoch in seconds
  custom: false
  description: Start time of the process since unix epoch in seconds
  metric_type: gauge
  monitor: prometheus/go
  title: process_start_time_seconds

process_virtual_memory_bytes:
  brief: Virtual memory size in bytes
  custom: true
  description: Virtual memory size in bytes
  metric_type: gauge
  monitor: prometheus/go
  title: process_virtual_memory_bytes

process_virtual_memory_max_bytes:
  brief: Maximum amount of virtual memory available in bytes
  custom: true
  description: Maximum amount of virtual memory available in bytes
  metric_type: gauge
  monitor: prometheus/go
  title: process_virtual_memory_max_bytes


nginx_ingress_controller_ingress_upstream_latency_seconds:
  brief: Upstream service latency per Ingress
  custom: false
  description: Upstream service latency per Ingress.
  metric_type: cumulative
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_ingress_upstream_latency_seconds

nginx_ingress_controller_nginx_process_connections:
  brief: Current number of client connections with state {reading, writing, waiting}
  custom: true
  description: Current number of client connections with state {reading, writing,
    waiting}.
  metric_type: gauge
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_nginx_process_connections

nginx_ingress_controller_nginx_process_connections_total:
  brief: Total number of connections with state {active, accepted, handled}
  custom: true
  description: Total number of connections with state {active, accepted, handled}.
  metric_type: cumulative
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_nginx_process_connections_total

nginx_ingress_controller_nginx_process_cpu_seconds_total:
  brief: Cpu usage in seconds
  custom: false
  description: Cpu usage in seconds.
  metric_type: cumulative
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_nginx_process_cpu_seconds_total

nginx_ingress_controller_nginx_process_resident_memory_bytes:
  brief: Number of bytes of memory in use for RSS
  custom: false
  description: Number of bytes of memory in use for RSS.
  metric_type: gauge
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_nginx_process_resident_memory_bytes

nginx_ingress_controller_nginx_process_virtual_memory_bytes:
  brief: Number of bytes of memory in use for VSZ
  custom: true
  description: Number of bytes of memory in use for VSZ.
  metric_type: gauge
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_nginx_process_virtual_memory_bytes

nginx_ingress_controller_request_duration_seconds:
  brief: The request processing time in milliseconds
  custom: false
  description: The request processing time in milliseconds.
  metric_type: cumulative
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_request_duration_seconds

nginx_ingress_controller_requests:
  brief: The total number of client requests
  custom: false
  description: The total number of client requests.
  metric_type: cumulative
  monitor: prometheus/nginx-ingress
  title: nginx_ingress_controller_requests


nginx_vts_info:
  brief: Nginx info
  custom: true
  description: Nginx info
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_info

nginx_vts_main_connections:
  brief: connections
  custom: false
  description: connections
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_main_connections

nginx_vts_main_shm_usage_bytes:
  brief: Shared memory [ngx_http_vhost_traffic_status] info
  custom: true
  description: Shared memory [ngx_http_vhost_traffic_status] info
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_main_shm_usage_bytes

nginx_vts_server_bytes_total:
  brief: The request/response bytes
  custom: true
  description: The request/response bytes
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_bytes_total

nginx_vts_server_cache_total:
  brief: The requests cache counter
  custom: true
  description: The requests cache counter
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_cache_total

nginx_vts_server_request_duration_seconds:
  brief: The histogram of request processing time
  custom: true
  description: The histogram of request processing time
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_request_duration_seconds

nginx_vts_server_request_seconds:
  brief: The average of request processing times in seconds
  custom: false
  description: The average of request processing times in seconds
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_request_seconds

nginx_vts_server_request_seconds_total:
  brief: The request processing time in seconds
  custom: true
  description: The request processing time in seconds
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_request_seconds_total

nginx_vts_server_requests_total:
  brief: The requests counter
  custom: false
  description: The requests counter
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_server_requests_total

nginx_vts_start_time_seconds:
  brief: Nginx start time
  custom: true
  description: Nginx start time
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_start_time_seconds

nginx_vts_upstream_bytes_total:
  brief: The request/response bytes
  custom: true
  description: The request/response bytes
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_bytes_total

nginx_vts_upstream_request_duration_seconds:
  brief: The histogram of request processing time including upstream
  custom: true
  description: The histogram of request processing time including upstream
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_request_duration_seconds

nginx_vts_upstream_request_seconds:
  brief: The average of request processing times including upstream in seconds
  custom: false
  description: The average of request processing times including upstream in seconds
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_request_seconds

nginx_vts_upstream_request_seconds_total:
  brief: The request Processing time including upstream in seconds
  custom: true
  description: The request Processing time including upstream in seconds
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_request_seconds_total

nginx_vts_upstream_requests_total:
  brief: The upstream requests counter
  custom: true
  description: The upstream requests counter
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_requests_total

nginx_vts_upstream_response_duration_seconds:
  brief: The histogram of only upstream response processing time
  custom: true
  description: The histogram of only upstream response processing time
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_response_duration_seconds

nginx_vts_upstream_response_seconds:
  brief: The average of only upstream response processing times in seconds
  custom: true
  description: The average of only upstream response processing times in seconds
  metric_type: gauge
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_response_seconds

nginx_vts_upstream_response_seconds_total:
  brief: The only upstream response processing time in seconds
  custom: true
  description: The only upstream response processing time in seconds
  metric_type: cumulative
  monitor: prometheus/nginx-vts
  title: nginx_vts_upstream_response_seconds_total


node_arp_entries:
  brief: ARP entries by device
  custom: true
  description: ARP entries by device
  metric_type: gauge
  monitor: prometheus/node
  title: node_arp_entries

node_boot_time_seconds:
  brief: Node boot time, in unixtime
  custom: true
  description: Node boot time, in unixtime
  metric_type: gauge
  monitor: prometheus/node
  title: node_boot_time_seconds

node_context_switches_total:
  brief: Total number of context switches
  custom: true
  description: Total number of context switches
  metric_type: cumulative
  monitor: prometheus/node
  title: node_context_switches_total

node_cpu_guest_seconds_total:
  brief: Seconds the cpus spent in guests (VMs) for each mode
  custom: true
  description: Seconds the cpus spent in guests (VMs) for each mode
  metric_type: cumulative
  monitor: prometheus/node
  title: node_cpu_guest_seconds_total

node_cpu_seconds_total:
  brief: Seconds the cpus spent in each mode
  custom: true
  description: Seconds the cpus spent in each mode
  metric_type: cumulative
  monitor: prometheus/node
  title: node_cpu_seconds_total

node_disk_io_now:
  brief: The number of I/Os currently in progress
  custom: true
  description: The number of I/Os currently in progress
  metric_type: gauge
  monitor: prometheus/node
  title: node_disk_io_now

node_disk_io_time_seconds_total:
  brief: Total seconds spent doing I/Os
  custom: true
  description: Total seconds spent doing I/Os
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_io_time_seconds_total

node_disk_io_time_weighted_seconds_total:
  brief: The weighted number of seconds spent doing I/Os
  custom: true
  description: The weighted number of seconds spent doing I/Os. See https://www.kernel.org/doc/Documentation/iostats.txt
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_io_time_weighted_seconds_total

node_disk_read_bytes_total:
  brief: The total number of bytes read successfully
  custom: true
  description: The total number of bytes read successfully
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_read_bytes_total

node_disk_read_time_seconds_total:
  brief: The total number of milliseconds spent by all reads
  custom: true
  description: The total number of milliseconds spent by all reads
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_read_time_seconds_total

node_disk_reads_completed_total:
  brief: The total number of reads completed successfully
  custom: true
  description: The total number of reads completed successfully
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_reads_completed_total

node_disk_reads_merged_total:
  brief: The total number of reads merged
  custom: true
  description: The total number of reads merged. See https://www.kernel.org/doc/Documentation/iostats.txt
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_reads_merged_total

node_disk_write_time_seconds_total:
  brief: This is the total number of seconds spent by all writes
  custom: true
  description: This is the total number of seconds spent by all writes
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_write_time_seconds_total

node_disk_writes_completed_total:
  brief: The total number of writes completed successfully
  custom: true
  description: The total number of writes completed successfully
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_writes_completed_total

node_disk_writes_merged_total:
  brief: The number of writes merged
  custom: true
  description: The number of writes merged. See https://www.kernel.org/doc/Documentation/iostats.txt
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_writes_merged_total

node_disk_written_bytes_total:
  brief: The total number of bytes written successfully
  custom: true
  description: The total number of bytes written successfully
  metric_type: cumulative
  monitor: prometheus/node
  title: node_disk_written_bytes_total

node_entropy_available_bits:
  brief: Bits of available entropy
  custom: true
  description: Bits of available entropy
  metric_type: gauge
  monitor: prometheus/node
  title: node_entropy_available_bits

node_exporter_build_info:
  brief: A metric with a constant '1' value labeled by version, revision, branch,
    and goversion from which node_exporter was built
  custom: true
  description: A metric with a constant '1' value labeled by version, revision, branch,
    and goversion from which node_exporter was built
  metric_type: gauge
  monitor: prometheus/node
  title: node_exporter_build_info

node_filefd_allocated:
  brief: 'File descriptor statistics: allocated'
  custom: true
  description: 'File descriptor statistics: allocated'
  metric_type: gauge
  monitor: prometheus/node
  title: node_filefd_allocated

node_filefd_maximum:
  brief: 'File descriptor statistics: maximum'
  custom: true
  description: 'File descriptor statistics: maximum'
  metric_type: gauge
  monitor: prometheus/node
  title: node_filefd_maximum

node_filesystem_avail_bytes:
  brief: Filesystem space available to non-root users in bytes
  custom: true
  description: Filesystem space available to non-root users in bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_avail_bytes

node_filesystem_device_error:
  brief: Whether an error occurred while getting statistics for the given device
  custom: true
  description: Whether an error occurred while getting statistics for the given device
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_device_error

node_filesystem_files:
  brief: Filesystem total file nodes
  custom: true
  description: Filesystem total file nodes
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_files

node_filesystem_files_free:
  brief: Filesystem total free file nodes
  custom: true
  description: Filesystem total free file nodes
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_files_free

node_filesystem_free_bytes:
  brief: Filesystem free space in bytes
  custom: true
  description: Filesystem free space in bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_free_bytes

node_filesystem_readonly:
  brief: Filesystem read-only status
  custom: true
  description: Filesystem read-only status
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_readonly

node_filesystem_size_bytes:
  brief: Filesystem size in bytes
  custom: true
  description: Filesystem size in bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_filesystem_size_bytes

node_forks_total:
  brief: Total number of forks
  custom: true
  description: Total number of forks
  metric_type: cumulative
  monitor: prometheus/node
  title: node_forks_total

node_intr_total:
  brief: Total number of interrupts serviced
  custom: true
  description: Total number of interrupts serviced
  metric_type: cumulative
  monitor: prometheus/node
  title: node_intr_total

node_ipvs_connections_total:
  brief: The total number of connections made
  custom: true
  description: The total number of connections made
  metric_type: cumulative
  monitor: prometheus/node
  title: node_ipvs_connections_total

node_ipvs_incoming_bytes_total:
  brief: The total amount of incoming data
  custom: true
  description: The total amount of incoming data
  metric_type: cumulative
  monitor: prometheus/node
  title: node_ipvs_incoming_bytes_total

node_ipvs_incoming_packets_total:
  brief: The total number of incoming packets
  custom: true
  description: The total number of incoming packets
  metric_type: cumulative
  monitor: prometheus/node
  title: node_ipvs_incoming_packets_total

node_ipvs_outgoing_bytes_total:
  brief: The total amount of outgoing data
  custom: true
  description: The total amount of outgoing data
  metric_type: cumulative
  monitor: prometheus/node
  title: node_ipvs_outgoing_bytes_total

node_ipvs_outgoing_packets_total:
  brief: The total number of outgoing packets
  custom: true
  description: The total number of outgoing packets
  metric_type: cumulative
  monitor: prometheus/node
  title: node_ipvs_outgoing_packets_total

node_load1:
  brief: 1m load average
  custom: true
  description: 1m load average
  metric_type: gauge
  monitor: prometheus/node
  title: node_load1

node_load15:
  brief: 15m load average
  custom: true
  description: 15m load average
  metric_type: gauge
  monitor: prometheus/node
  title: node_load15

node_load5:
  brief: 5m load average
  custom: true
  description: 5m load average
  metric_type: gauge
  monitor: prometheus/node
  title: node_load5

node_memory_Active_anon_bytes:
  brief: Memory information field Active_anon_bytes
  custom: true
  description: Memory information field Active_anon_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Active_anon_bytes

node_memory_Active_bytes:
  brief: Memory information field Active_bytes
  custom: true
  description: Memory information field Active_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Active_bytes

node_memory_Active_file_bytes:
  brief: Memory information field Active_file_bytes
  custom: true
  description: Memory information field Active_file_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Active_file_bytes

node_memory_AnonHugePages_bytes:
  brief: Memory information field AnonHugePages_bytes
  custom: true
  description: Memory information field AnonHugePages_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_AnonHugePages_bytes

node_memory_AnonPages_bytes:
  brief: Memory information field AnonPages_bytes
  custom: true
  description: Memory information field AnonPages_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_AnonPages_bytes

node_memory_Bounce_bytes:
  brief: Memory information field Bounce_bytes
  custom: true
  description: Memory information field Bounce_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Bounce_bytes

node_memory_Buffers_bytes:
  brief: Memory information field Buffers_bytes
  custom: true
  description: Memory information field Buffers_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Buffers_bytes

node_memory_Cached_bytes:
  brief: Memory information field Cached_bytes
  custom: true
  description: Memory information field Cached_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Cached_bytes

node_memory_CommitLimit_bytes:
  brief: Memory information field CommitLimit_bytes
  custom: true
  description: Memory information field CommitLimit_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_CommitLimit_bytes

node_memory_Committed_AS_bytes:
  brief: Memory information field Committed_AS_bytes
  custom: true
  description: Memory information field Committed_AS_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Committed_AS_bytes

node_memory_DirectMap1G_bytes:
  brief: Memory information field DirectMap1G_bytes
  custom: true
  description: Memory information field DirectMap1G_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_DirectMap1G_bytes

node_memory_DirectMap2M_bytes:
  brief: Memory information field DirectMap2M_bytes
  custom: true
  description: Memory information field DirectMap2M_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_DirectMap2M_bytes

node_memory_DirectMap4k_bytes:
  brief: Memory information field DirectMap4k_bytes
  custom: true
  description: Memory information field DirectMap4k_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_DirectMap4k_bytes

node_memory_Dirty_bytes:
  brief: Memory information field Dirty_bytes
  custom: true
  description: Memory information field Dirty_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Dirty_bytes

node_memory_HugePages_Free:
  brief: Memory information field HugePages_Free
  custom: true
  description: Memory information field HugePages_Free
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_HugePages_Free

node_memory_HugePages_Rsvd:
  brief: Memory information field HugePages_Rsvd
  custom: true
  description: Memory information field HugePages_Rsvd
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_HugePages_Rsvd

node_memory_HugePages_Surp:
  brief: Memory information field HugePages_Surp
  custom: true
  description: Memory information field HugePages_Surp
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_HugePages_Surp

node_memory_HugePages_Total:
  brief: Memory information field HugePages_Total
  custom: true
  description: Memory information field HugePages_Total
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_HugePages_Total

node_memory_Hugepagesize_bytes:
  brief: Memory information field Hugepagesize_bytes
  custom: true
  description: Memory information field Hugepagesize_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Hugepagesize_bytes

node_memory_Inactive_anon_bytes:
  brief: Memory information field Inactive_anon_bytes
  custom: true
  description: Memory information field Inactive_anon_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Inactive_anon_bytes

node_memory_Inactive_bytes:
  brief: Memory information field Inactive_bytes
  custom: true
  description: Memory information field Inactive_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Inactive_bytes

node_memory_Inactive_file_bytes:
  brief: Memory information field Inactive_file_bytes
  custom: true
  description: Memory information field Inactive_file_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Inactive_file_bytes

node_memory_KernelStack_bytes:
  brief: Memory information field KernelStack_bytes
  custom: true
  description: Memory information field KernelStack_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_KernelStack_bytes

node_memory_Mapped_bytes:
  brief: Memory information field Mapped_bytes
  custom: true
  description: Memory information field Mapped_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Mapped_bytes

node_memory_MemAvailable_bytes:
  brief: Memory information field MemAvailable_bytes
  custom: true
  description: Memory information field MemAvailable_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_MemAvailable_bytes

node_memory_MemFree_bytes:
  brief: Memory information field MemFree_bytes
  custom: true
  description: Memory information field MemFree_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_MemFree_bytes

node_memory_MemTotal_bytes:
  brief: Memory information field MemTotal_bytes
  custom: true
  description: Memory information field MemTotal_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_MemTotal_bytes

node_memory_Mlocked_bytes:
  brief: Memory information field Mlocked_bytes
  custom: true
  description: Memory information field Mlocked_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Mlocked_bytes

node_memory_NFS_Unstable_bytes:
  brief: Memory information field NFS_Unstable_bytes
  custom: true
  description: Memory information field NFS_Unstable_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_NFS_Unstable_bytes

node_memory_PageTables_bytes:
  brief: Memory information field PageTables_bytes
  custom: true
  description: Memory information field PageTables_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_PageTables_bytes

node_memory_SReclaimable_bytes:
  brief: Memory information field SReclaimable_bytes
  custom: true
  description: Memory information field SReclaimable_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_SReclaimable_bytes

node_memory_SUnreclaim_bytes:
  brief: Memory information field SUnreclaim_bytes
  custom: true
  description: Memory information field SUnreclaim_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_SUnreclaim_bytes

node_memory_ShmemHugePages_bytes:
  brief: Memory information field ShmemHugePages_bytes
  custom: true
  description: Memory information field ShmemHugePages_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_ShmemHugePages_bytes

node_memory_ShmemPmdMapped_bytes:
  brief: Memory information field ShmemPmdMapped_bytes
  custom: true
  description: Memory information field ShmemPmdMapped_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_ShmemPmdMapped_bytes

node_memory_Shmem_bytes:
  brief: Memory information field Shmem_bytes
  custom: true
  description: Memory information field Shmem_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Shmem_bytes

node_memory_Slab_bytes:
  brief: Memory information field Slab_bytes
  custom: true
  description: Memory information field Slab_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Slab_bytes

node_memory_SwapCached_bytes:
  brief: Memory information field SwapCached_bytes
  custom: true
  description: Memory information field SwapCached_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_SwapCached_bytes

node_memory_SwapFree_bytes:
  brief: Memory information field SwapFree_bytes
  custom: true
  description: Memory information field SwapFree_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_SwapFree_bytes

node_memory_SwapTotal_bytes:
  brief: Memory information field SwapTotal_bytes
  custom: true
  description: Memory information field SwapTotal_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_SwapTotal_bytes

node_memory_Unevictable_bytes:
  brief: Memory information field Unevictable_bytes
  custom: true
  description: Memory information field Unevictable_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Unevictable_bytes

node_memory_VmallocChunk_bytes:
  brief: Memory information field VmallocChunk_bytes
  custom: true
  description: Memory information field VmallocChunk_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_VmallocChunk_bytes

node_memory_VmallocTotal_bytes:
  brief: Memory information field VmallocTotal_bytes
  custom: true
  description: Memory information field VmallocTotal_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_VmallocTotal_bytes

node_memory_VmallocUsed_bytes:
  brief: Memory information field VmallocUsed_bytes
  custom: true
  description: Memory information field VmallocUsed_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_VmallocUsed_bytes

node_memory_WritebackTmp_bytes:
  brief: Memory information field WritebackTmp_bytes
  custom: true
  description: Memory information field WritebackTmp_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_WritebackTmp_bytes

node_memory_Writeback_bytes:
  brief: Memory information field Writeback_bytes
  custom: true
  description: Memory information field Writeback_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_memory_Writeback_bytes

node_netstat_Icmp6_InErrors:
  brief: Statistic Icmp6InErrors
  custom: true
  description: Statistic Icmp6InErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp6_InErrors

node_netstat_Icmp6_InMsgs:
  brief: Statistic Icmp6InMsgs
  custom: true
  description: Statistic Icmp6InMsgs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp6_InMsgs

node_netstat_Icmp6_OutMsgs:
  brief: Statistic Icmp6OutMsgs
  custom: true
  description: Statistic Icmp6OutMsgs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp6_OutMsgs

node_netstat_Icmp_InErrors:
  brief: Statistic IcmpInErrors
  custom: true
  description: Statistic IcmpInErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp_InErrors

node_netstat_Icmp_InMsgs:
  brief: Statistic IcmpInMsgs
  custom: true
  description: Statistic IcmpInMsgs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp_InMsgs

node_netstat_Icmp_OutMsgs:
  brief: Statistic IcmpOutMsgs
  custom: true
  description: Statistic IcmpOutMsgs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Icmp_OutMsgs

node_netstat_Ip6_InOctets:
  brief: Statistic Ip6InOctets
  custom: true
  description: Statistic Ip6InOctets
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Ip6_InOctets

node_netstat_Ip6_OutOctets:
  brief: Statistic Ip6OutOctets
  custom: true
  description: Statistic Ip6OutOctets
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Ip6_OutOctets

node_netstat_IpExt_InOctets:
  brief: Statistic IpExtInOctets
  custom: true
  description: Statistic IpExtInOctets
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_IpExt_InOctets

node_netstat_IpExt_OutOctets:
  brief: Statistic IpExtOutOctets
  custom: true
  description: Statistic IpExtOutOctets
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_IpExt_OutOctets

node_netstat_Ip_Forwarding:
  brief: Statistic IpForwarding
  custom: true
  description: Statistic IpForwarding
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Ip_Forwarding

node_netstat_TcpExt_ListenDrops:
  brief: Statistic TcpExtListenDrops
  custom: true
  description: Statistic TcpExtListenDrops
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_TcpExt_ListenDrops

node_netstat_TcpExt_ListenOverflows:
  brief: Statistic TcpExtListenOverflows
  custom: true
  description: Statistic TcpExtListenOverflows
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_TcpExt_ListenOverflows

node_netstat_TcpExt_SyncookiesFailed:
  brief: Statistic TcpExtSyncookiesFailed
  custom: true
  description: Statistic TcpExtSyncookiesFailed
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_TcpExt_SyncookiesFailed

node_netstat_TcpExt_SyncookiesRecv:
  brief: Statistic TcpExtSyncookiesRecv
  custom: true
  description: Statistic TcpExtSyncookiesRecv
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_TcpExt_SyncookiesRecv

node_netstat_TcpExt_SyncookiesSent:
  brief: Statistic TcpExtSyncookiesSent
  custom: true
  description: Statistic TcpExtSyncookiesSent
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_TcpExt_SyncookiesSent

node_netstat_Tcp_ActiveOpens:
  brief: Statistic TcpActiveOpens
  custom: true
  description: Statistic TcpActiveOpens
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Tcp_ActiveOpens

node_netstat_Tcp_CurrEstab:
  brief: Statistic TcpCurrEstab
  custom: true
  description: Statistic TcpCurrEstab
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Tcp_CurrEstab

node_netstat_Tcp_InErrs:
  brief: Statistic TcpInErrs
  custom: true
  description: Statistic TcpInErrs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Tcp_InErrs

node_netstat_Tcp_PassiveOpens:
  brief: Statistic TcpPassiveOpens
  custom: true
  description: Statistic TcpPassiveOpens
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Tcp_PassiveOpens

node_netstat_Tcp_RetransSegs:
  brief: Statistic TcpRetransSegs
  custom: true
  description: Statistic TcpRetransSegs
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Tcp_RetransSegs

node_netstat_Udp6_InDatagrams:
  brief: Statistic Udp6InDatagrams
  custom: true
  description: Statistic Udp6InDatagrams
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp6_InDatagrams

node_netstat_Udp6_InErrors:
  brief: Statistic Udp6InErrors
  custom: true
  description: Statistic Udp6InErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp6_InErrors

node_netstat_Udp6_NoPorts:
  brief: Statistic Udp6NoPorts
  custom: true
  description: Statistic Udp6NoPorts
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp6_NoPorts

node_netstat_Udp6_OutDatagrams:
  brief: Statistic Udp6OutDatagrams
  custom: true
  description: Statistic Udp6OutDatagrams
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp6_OutDatagrams

node_netstat_UdpLite6_InErrors:
  brief: Statistic UdpLite6InErrors
  custom: true
  description: Statistic UdpLite6InErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_UdpLite6_InErrors

node_netstat_UdpLite_InErrors:
  brief: Statistic UdpLiteInErrors
  custom: true
  description: Statistic UdpLiteInErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_UdpLite_InErrors

node_netstat_Udp_InDatagrams:
  brief: Statistic UdpInDatagrams
  custom: true
  description: Statistic UdpInDatagrams
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp_InDatagrams

node_netstat_Udp_InErrors:
  brief: Statistic UdpInErrors
  custom: true
  description: Statistic UdpInErrors
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp_InErrors

node_netstat_Udp_NoPorts:
  brief: Statistic UdpNoPorts
  custom: true
  description: Statistic UdpNoPorts
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp_NoPorts

node_netstat_Udp_OutDatagrams:
  brief: Statistic UdpOutDatagrams
  custom: true
  description: Statistic UdpOutDatagrams
  metric_type: gauge
  monitor: prometheus/node
  title: node_netstat_Udp_OutDatagrams

node_network_receive_bytes_total:
  brief: Network device statistic receive_bytes
  custom: true
  description: Network device statistic receive_bytes
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_bytes_total

node_network_receive_compressed_total:
  brief: Network device statistic receive_compressed
  custom: true
  description: Network device statistic receive_compressed
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_compressed_total

node_network_receive_drop_total:
  brief: Network device statistic receive_drop
  custom: true
  description: Network device statistic receive_drop
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_drop_total

node_network_receive_errs_total:
  brief: Network device statistic receive_errs
  custom: true
  description: Network device statistic receive_errs
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_errs_total

node_network_receive_fifo_total:
  brief: Network device statistic receive_fifo
  custom: true
  description: Network device statistic receive_fifo
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_fifo_total

node_network_receive_frame_total:
  brief: Network device statistic receive_frame
  custom: true
  description: Network device statistic receive_frame
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_frame_total

node_network_receive_multicast_total:
  brief: Network device statistic receive_multicast
  custom: true
  description: Network device statistic receive_multicast
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_multicast_total

node_network_receive_packets_total:
  brief: Network device statistic receive_packets
  custom: true
  description: Network device statistic receive_packets
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_receive_packets_total

node_network_transmit_bytes_total:
  brief: Network device statistic transmit_bytes
  custom: true
  description: Network device statistic transmit_bytes
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_bytes_total

node_network_transmit_carrier_total:
  brief: Network device statistic transmit_carrier
  custom: true
  description: Network device statistic transmit_carrier
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_carrier_total

node_network_transmit_colls_total:
  brief: Network device statistic transmit_colls
  custom: true
  description: Network device statistic transmit_colls
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_colls_total

node_network_transmit_compressed_total:
  brief: Network device statistic transmit_compressed
  custom: true
  description: Network device statistic transmit_compressed
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_compressed_total

node_network_transmit_drop_total:
  brief: Network device statistic transmit_drop
  custom: true
  description: Network device statistic transmit_drop
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_drop_total

node_network_transmit_errs_total:
  brief: Network device statistic transmit_errs
  custom: true
  description: Network device statistic transmit_errs
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_errs_total

node_network_transmit_fifo_total:
  brief: Network device statistic transmit_fifo
  custom: true
  description: Network device statistic transmit_fifo
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_fifo_total

node_network_transmit_packets_total:
  brief: Network device statistic transmit_packets
  custom: true
  description: Network device statistic transmit_packets
  metric_type: cumulative
  monitor: prometheus/node
  title: node_network_transmit_packets_total

node_nf_conntrack_entries:
  brief: Number of currently allocated flow entries for connection tracking
  custom: true
  description: Number of currently allocated flow entries for connection tracking
  metric_type: gauge
  monitor: prometheus/node
  title: node_nf_conntrack_entries

node_nf_conntrack_entries_limit:
  brief: Maximum size of connection tracking table
  custom: true
  description: Maximum size of connection tracking table
  metric_type: gauge
  monitor: prometheus/node
  title: node_nf_conntrack_entries_limit

node_procs_blocked:
  brief: Number of processes blocked waiting for I/O to complete
  custom: true
  description: Number of processes blocked waiting for I/O to complete
  metric_type: gauge
  monitor: prometheus/node
  title: node_procs_blocked

node_procs_running:
  brief: Number of processes in runnable state
  custom: true
  description: Number of processes in runnable state
  metric_type: gauge
  monitor: prometheus/node
  title: node_procs_running

node_scrape_collector_duration_seconds:
  brief: Duration of a collector scrape
  custom: true
  description: Duration of a collector scrape
  metric_type: gauge
  monitor: prometheus/node
  title: node_scrape_collector_duration_seconds

node_scrape_collector_success:
  brief: Whether a collector succeeded
  custom: true
  description: Whether a collector succeeded
  metric_type: gauge
  monitor: prometheus/node
  title: node_scrape_collector_success

node_sockstat_FRAG_inuse:
  brief: Number of FRAG sockets in state inuse
  custom: true
  description: Number of FRAG sockets in state inuse
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_FRAG_inuse

node_sockstat_FRAG_memory:
  brief: Number of FRAG sockets in state memory
  custom: true
  description: Number of FRAG sockets in state memory
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_FRAG_memory

node_sockstat_RAW_inuse:
  brief: Number of RAW sockets in state inuse
  custom: true
  description: Number of RAW sockets in state inuse
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_RAW_inuse

node_sockstat_TCP_alloc:
  brief: Number of TCP sockets in state alloc
  custom: true
  description: Number of TCP sockets in state alloc
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_alloc

node_sockstat_TCP_inuse:
  brief: Number of TCP sockets in state inuse
  custom: true
  description: Number of TCP sockets in state inuse
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_inuse

node_sockstat_TCP_mem:
  brief: Number of TCP sockets in state mem
  custom: true
  description: Number of TCP sockets in state mem
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_mem

node_sockstat_TCP_mem_bytes:
  brief: Number of TCP sockets in state mem_bytes
  custom: true
  description: Number of TCP sockets in state mem_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_mem_bytes

node_sockstat_TCP_orphan:
  brief: Number of TCP sockets in state orphan
  custom: true
  description: Number of TCP sockets in state orphan
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_orphan

node_sockstat_TCP_tw:
  brief: Number of TCP sockets in state tw
  custom: true
  description: Number of TCP sockets in state tw
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_TCP_tw

node_sockstat_UDPLITE_inuse:
  brief: Number of UDPLITE sockets in state inuse
  custom: true
  description: Number of UDPLITE sockets in state inuse
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_UDPLITE_inuse

node_sockstat_UDP_inuse:
  brief: Number of UDP sockets in state inuse
  custom: true
  description: Number of UDP sockets in state inuse
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_UDP_inuse

node_sockstat_UDP_mem:
  brief: Number of UDP sockets in state mem
  custom: true
  description: Number of UDP sockets in state mem
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_UDP_mem

node_sockstat_UDP_mem_bytes:
  brief: Number of UDP sockets in state mem_bytes
  custom: true
  description: Number of UDP sockets in state mem_bytes
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_UDP_mem_bytes

node_sockstat_sockets_used:
  brief: Number of sockets sockets in state used
  custom: true
  description: Number of sockets sockets in state used
  metric_type: gauge
  monitor: prometheus/node
  title: node_sockstat_sockets_used

node_textfile_scrape_error:
  brief: 1 if there was an error opening or reading a file, 0 otherwise
  custom: true
  description: 1 if there was an error opening or reading a file, 0 otherwise
  metric_type: gauge
  monitor: prometheus/node
  title: node_textfile_scrape_error

node_time_seconds:
  brief: System time in seconds since epoch (1970)
  custom: true
  description: System time in seconds since epoch (1970)
  metric_type: gauge
  monitor: prometheus/node
  title: node_time_seconds

node_uname_info:
  brief: Labeled system information as provided by the uname system call
  custom: true
  description: Labeled system information as provided by the uname system call
  metric_type: gauge
  monitor: prometheus/node
  title: node_uname_info

node_vmstat_pgfault:
  brief: /proc/vmstat information field pgfault
  custom: true
  description: /proc/vmstat information field pgfault
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pgfault

node_vmstat_pgmajfault:
  brief: /proc/vmstat information field pgmajfault
  custom: true
  description: /proc/vmstat information field pgmajfault
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pgmajfault

node_vmstat_pgpgin:
  brief: /proc/vmstat information field pgpgin
  custom: true
  description: /proc/vmstat information field pgpgin
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pgpgin

node_vmstat_pgpgout:
  brief: /proc/vmstat information field pgpgout
  custom: true
  description: /proc/vmstat information field pgpgout
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pgpgout

node_vmstat_pswpin:
  brief: /proc/vmstat information field pswpin
  custom: true
  description: /proc/vmstat information field pswpin
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pswpin

node_vmstat_pswpout:
  brief: /proc/vmstat information field pswpout
  custom: true
  description: /proc/vmstat information field pswpout
  metric_type: gauge
  monitor: prometheus/node
  title: node_vmstat_pswpout


pg_exporter_last_scrape_duration_seconds:
  brief: Duration of the last scrape of metrics from PostgresSQL
  custom: true
  description: Duration of the last scrape of metrics from PostgresSQL.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_exporter_last_scrape_duration_seconds

pg_exporter_last_scrape_error:
  brief: Whether the last scrape of metrics from PostgreSQL resulted in an error (1
    for error, 0 for success)
  custom: true
  description: Whether the last scrape of metrics from PostgreSQL resulted in an error
    (1 for error, 0 for success).
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_exporter_last_scrape_error

pg_exporter_scrapes_total:
  brief: Total number of times PostgresSQL was scraped for metrics
  custom: true
  description: Total number of times PostgresSQL was scraped for metrics.
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_exporter_scrapes_total

pg_exporter_user_queries_load_error:
  brief: Whether the user queries file was loaded and parsed successfully (1 for error,
    0 for success)
  custom: true
  description: Whether the user queries file was loaded and parsed successfully (1
    for error, 0 for success).
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_exporter_user_queries_load_error

pg_locks_count:
  brief: Number of locks
  custom: true
  description: Number of locks
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_locks_count

pg_postmaster_start_time_seconds:
  brief: Time at which postmaster started
  custom: true
  description: Time at which postmaster started
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_postmaster_start_time_seconds

pg_replication_is_replica:
  brief: Indicates if this host is a slave
  custom: true
  description: Indicates if this host is a slave
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_replication_is_replica

pg_replication_lag:
  brief: Replication lag behind master in seconds
  custom: true
  description: Replication lag behind master in seconds
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_replication_lag

pg_settings_allow_system_table_mods:
  brief: Allows modifications of the structure of system tables
  custom: true
  description: Allows modifications of the structure of system tables.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_allow_system_table_mods

pg_settings_archive_timeout_seconds:
  brief: Forces a switch to the next xlog file if a new file has not been started
    within N seconds
  custom: true
  description: Forces a switch to the next xlog file if a new file has not been started
    within N seconds. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_archive_timeout_seconds

pg_settings_array_nulls:
  brief: Enable input of NULL elements in arrays
  custom: true
  description: Enable input of NULL elements in arrays.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_array_nulls

pg_settings_authentication_timeout_seconds:
  brief: Sets the maximum allowed time to complete client authentication
  custom: true
  description: Sets the maximum allowed time to complete client authentication. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_authentication_timeout_seconds

pg_settings_autovacuum:
  brief: Starts the autovacuum subprocess
  custom: true
  description: Starts the autovacuum subprocess.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum

pg_settings_autovacuum_analyze_scale_factor:
  brief: Number of tuple inserts, updates, or deletes prior to analyze as a fraction
    of reltuples
  custom: true
  description: Number of tuple inserts, updates, or deletes prior to analyze as a
    fraction of reltuples.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_analyze_scale_factor

pg_settings_autovacuum_analyze_threshold:
  brief: Minimum number of tuple inserts, updates, or deletes prior to analyze
  custom: true
  description: Minimum number of tuple inserts, updates, or deletes prior to analyze.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_analyze_threshold

pg_settings_autovacuum_freeze_max_age:
  brief: Age at which to autovacuum a table to prevent transaction ID wraparound
  custom: true
  description: Age at which to autovacuum a table to prevent transaction ID wraparound.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_freeze_max_age

pg_settings_autovacuum_max_workers:
  brief: Sets the maximum number of simultaneously running autovacuum worker processes
  custom: true
  description: Sets the maximum number of simultaneously running autovacuum worker
    processes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_max_workers

pg_settings_autovacuum_multixact_freeze_max_age:
  brief: Multixact age at which to autovacuum a table to prevent multixact wraparound
  custom: true
  description: Multixact age at which to autovacuum a table to prevent multixact wraparound.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_multixact_freeze_max_age

pg_settings_autovacuum_naptime_seconds:
  brief: Time to sleep between autovacuum runs
  custom: true
  description: Time to sleep between autovacuum runs. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_naptime_seconds

pg_settings_autovacuum_vacuum_cost_delay_seconds:
  brief: Vacuum cost delay in milliseconds, for autovacuum
  custom: true
  description: Vacuum cost delay in milliseconds, for autovacuum. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_vacuum_cost_delay_seconds

pg_settings_autovacuum_vacuum_cost_limit:
  brief: Vacuum cost amount available before napping, for autovacuum
  custom: true
  description: Vacuum cost amount available before napping, for autovacuum.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_vacuum_cost_limit

pg_settings_autovacuum_vacuum_scale_factor:
  brief: Number of tuple updates or deletes prior to vacuum as a fraction of reltuples
  custom: true
  description: Number of tuple updates or deletes prior to vacuum as a fraction of
    reltuples.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_vacuum_scale_factor

pg_settings_autovacuum_vacuum_threshold:
  brief: Minimum number of tuple updates or deletes prior to vacuum
  custom: true
  description: Minimum number of tuple updates or deletes prior to vacuum.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_vacuum_threshold

pg_settings_autovacuum_work_mem_bytes:
  brief: Sets the maximum memory to be used by each autovacuum worker process
  custom: true
  description: Sets the maximum memory to be used by each autovacuum worker process.
    [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_autovacuum_work_mem_bytes

pg_settings_backend_flush_after_bytes:
  brief: Number of pages after which previously performed writes are flushed to disk
  custom: true
  description: Number of pages after which previously performed writes are flushed
    to disk. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_backend_flush_after_bytes

pg_settings_bgwriter_delay_seconds:
  brief: Background writer sleep time between rounds
  custom: true
  description: Background writer sleep time between rounds. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_bgwriter_delay_seconds

pg_settings_bgwriter_flush_after_bytes:
  brief: Number of pages after which previously performed writes are flushed to disk
  custom: true
  description: Number of pages after which previously performed writes are flushed
    to disk. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_bgwriter_flush_after_bytes

pg_settings_bgwriter_lru_maxpages:
  brief: Background writer maximum number of LRU pages to flush per round
  custom: true
  description: Background writer maximum number of LRU pages to flush per round.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_bgwriter_lru_maxpages

pg_settings_bgwriter_lru_multiplier:
  brief: Multiple of the average buffer usage to free per round
  custom: true
  description: Multiple of the average buffer usage to free per round.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_bgwriter_lru_multiplier

pg_settings_block_size:
  brief: Shows the size of a disk block
  custom: true
  description: Shows the size of a disk block.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_block_size

pg_settings_bonjour:
  brief: Enables advertising the server via Bonjour
  custom: true
  description: Enables advertising the server via Bonjour.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_bonjour

pg_settings_check_function_bodies:
  brief: Check function bodies during CREATE FUNCTION
  custom: true
  description: Check function bodies during CREATE FUNCTION.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_check_function_bodies

pg_settings_checkpoint_completion_target:
  brief: Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint
    interval
  custom: true
  description: Time spent flushing dirty buffers during checkpoint, as fraction of
    checkpoint interval.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_checkpoint_completion_target

pg_settings_checkpoint_flush_after_bytes:
  brief: Number of pages after which previously performed writes are flushed to disk
  custom: true
  description: Number of pages after which previously performed writes are flushed
    to disk. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_checkpoint_flush_after_bytes

pg_settings_checkpoint_timeout_seconds:
  brief: Sets the maximum time between automatic WAL checkpoints
  custom: true
  description: Sets the maximum time between automatic WAL checkpoints. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_checkpoint_timeout_seconds

pg_settings_checkpoint_warning_seconds:
  brief: Enables warnings if checkpoint segments are filled more frequently than this
  custom: true
  description: Enables warnings if checkpoint segments are filled more frequently
    than this. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_checkpoint_warning_seconds

pg_settings_commit_delay:
  brief: Sets the delay in microseconds between transaction commit and flushing WAL
    to disk
  custom: true
  description: Sets the delay in microseconds between transaction commit and flushing
    WAL to disk.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_commit_delay

pg_settings_commit_siblings:
  brief: Sets the minimum concurrent open transactions before performing commit_delay
  custom: true
  description: Sets the minimum concurrent open transactions before performing commit_delay.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_commit_siblings

pg_settings_cpu_index_tuple_cost:
  brief: Sets the planner's estimate of the cost of processing each index entry during
    an index scan
  custom: true
  description: Sets the planner's estimate of the cost of processing each index entry
    during an index scan.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_cpu_index_tuple_cost

pg_settings_cpu_operator_cost:
  brief: Sets the planner's estimate of the cost of processing each operator or function
    call
  custom: true
  description: Sets the planner's estimate of the cost of processing each operator
    or function call.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_cpu_operator_cost

pg_settings_cpu_tuple_cost:
  brief: Sets the planner's estimate of the cost of processing each tuple (row)
  custom: true
  description: Sets the planner's estimate of the cost of processing each tuple (row).
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_cpu_tuple_cost

pg_settings_cursor_tuple_fraction:
  brief: Sets the planner's estimate of the fraction of a cursor's rows that will
    be retrieved
  custom: true
  description: Sets the planner's estimate of the fraction of a cursor's rows that
    will be retrieved.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_cursor_tuple_fraction

pg_settings_data_checksums:
  brief: Shows whether data checksums are turned on for this cluster
  custom: true
  description: Shows whether data checksums are turned on for this cluster.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_data_checksums

pg_settings_db_user_namespace:
  brief: Enables per-database user names
  custom: true
  description: Enables per-database user names.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_db_user_namespace

pg_settings_deadlock_timeout_seconds:
  brief: Sets the time to wait on a lock before checking for deadlock
  custom: true
  description: Sets the time to wait on a lock before checking for deadlock. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_deadlock_timeout_seconds

pg_settings_debug_assertions:
  brief: Shows whether the running server has assertion checks enabled
  custom: true
  description: Shows whether the running server has assertion checks enabled.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_debug_assertions

pg_settings_debug_pretty_print:
  brief: Indents parse and plan tree displays
  custom: true
  description: Indents parse and plan tree displays.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_debug_pretty_print

pg_settings_debug_print_parse:
  brief: Logs each query's parse tree
  custom: true
  description: Logs each query's parse tree.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_debug_print_parse

pg_settings_debug_print_plan:
  brief: Logs each query's execution plan
  custom: true
  description: Logs each query's execution plan.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_debug_print_plan

pg_settings_debug_print_rewritten:
  brief: Logs each query's rewritten parse tree
  custom: true
  description: Logs each query's rewritten parse tree.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_debug_print_rewritten

pg_settings_default_statistics_target:
  brief: Sets the default statistics target
  custom: true
  description: Sets the default statistics target.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_default_statistics_target

pg_settings_default_transaction_deferrable:
  brief: Sets the default deferrable status of new transactions
  custom: true
  description: Sets the default deferrable status of new transactions.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_default_transaction_deferrable

pg_settings_default_transaction_read_only:
  brief: Sets the default read-only status of new transactions
  custom: true
  description: Sets the default read-only status of new transactions.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_default_transaction_read_only

pg_settings_default_with_oids:
  brief: Create new tables with OIDs by default
  custom: true
  description: Create new tables with OIDs by default.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_default_with_oids

pg_settings_effective_cache_size_bytes:
  brief: Sets the planner's assumption about the size of the data cache
  custom: true
  description: Sets the planner's assumption about the size of the data cache. [Units
    converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_effective_cache_size_bytes

pg_settings_effective_io_concurrency:
  brief: Number of simultaneous requests that can be handled efficiently by the disk
    subsystem
  custom: true
  description: Number of simultaneous requests that can be handled efficiently by
    the disk subsystem.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_effective_io_concurrency

pg_settings_enable_bitmapscan:
  brief: Enables the planner's use of bitmap-scan plans
  custom: true
  description: Enables the planner's use of bitmap-scan plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_bitmapscan

pg_settings_enable_hashagg:
  brief: Enables the planner's use of hashed aggregation plans
  custom: true
  description: Enables the planner's use of hashed aggregation plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_hashagg

pg_settings_enable_hashjoin:
  brief: Enables the planner's use of hash join plans
  custom: true
  description: Enables the planner's use of hash join plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_hashjoin

pg_settings_enable_indexonlyscan:
  brief: Enables the planner's use of index-only-scan plans
  custom: true
  description: Enables the planner's use of index-only-scan plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_indexonlyscan

pg_settings_enable_indexscan:
  brief: Enables the planner's use of index-scan plans
  custom: true
  description: Enables the planner's use of index-scan plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_indexscan

pg_settings_enable_material:
  brief: Enables the planner's use of materialization
  custom: true
  description: Enables the planner's use of materialization.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_material

pg_settings_enable_mergejoin:
  brief: Enables the planner's use of merge join plans
  custom: true
  description: Enables the planner's use of merge join plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_mergejoin

pg_settings_enable_nestloop:
  brief: Enables the planner's use of nested-loop join plans
  custom: true
  description: Enables the planner's use of nested-loop join plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_nestloop

pg_settings_enable_seqscan:
  brief: Enables the planner's use of sequential-scan plans
  custom: true
  description: Enables the planner's use of sequential-scan plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_seqscan

pg_settings_enable_sort:
  brief: Enables the planner's use of explicit sort steps
  custom: true
  description: Enables the planner's use of explicit sort steps.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_sort

pg_settings_enable_tidscan:
  brief: Enables the planner's use of TID scan plans
  custom: true
  description: Enables the planner's use of TID scan plans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_enable_tidscan

pg_settings_escape_string_warning:
  brief: Warn about backslash escapes in ordinary string literals
  custom: true
  description: Warn about backslash escapes in ordinary string literals.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_escape_string_warning

pg_settings_exit_on_error:
  brief: Terminate session on any error
  custom: true
  description: Terminate session on any error.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_exit_on_error

pg_settings_extra_float_digits:
  brief: Sets the number of digits displayed for floating-point values
  custom: true
  description: Sets the number of digits displayed for floating-point values.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_extra_float_digits

pg_settings_from_collapse_limit:
  brief: Sets the FROM-list size beyond which subqueries are not collapsed
  custom: true
  description: Sets the FROM-list size beyond which subqueries are not collapsed.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_from_collapse_limit

pg_settings_fsync:
  brief: Forces synchronization of updates to disk
  custom: true
  description: Forces synchronization of updates to disk.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_fsync

pg_settings_full_page_writes:
  brief: Writes full pages to WAL when first modified after a checkpoint
  custom: true
  description: Writes full pages to WAL when first modified after a checkpoint.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_full_page_writes

pg_settings_geqo:
  brief: Enables genetic query optimization
  custom: true
  description: Enables genetic query optimization.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo

pg_settings_geqo_effort:
  brief: 'GEQO: effort is used to set the default for other GEQO parameters'
  custom: true
  description: 'GEQO: effort is used to set the default for other GEQO parameters.'
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_effort

pg_settings_geqo_generations:
  brief: 'GEQO: number of iterations of the algorithm'
  custom: true
  description: 'GEQO: number of iterations of the algorithm.'
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_generations

pg_settings_geqo_pool_size:
  brief: 'GEQO: number of individuals in the population'
  custom: true
  description: 'GEQO: number of individuals in the population.'
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_pool_size

pg_settings_geqo_seed:
  brief: 'GEQO: seed for random path selection'
  custom: true
  description: 'GEQO: seed for random path selection.'
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_seed

pg_settings_geqo_selection_bias:
  brief: 'GEQO: selective pressure within the population'
  custom: true
  description: 'GEQO: selective pressure within the population.'
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_selection_bias

pg_settings_geqo_threshold:
  brief: Sets the threshold of FROM items beyond which GEQO is used
  custom: true
  description: Sets the threshold of FROM items beyond which GEQO is used.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_geqo_threshold

pg_settings_gin_fuzzy_search_limit:
  brief: Sets the maximum allowed result for exact search by GIN
  custom: true
  description: Sets the maximum allowed result for exact search by GIN.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_gin_fuzzy_search_limit

pg_settings_gin_pending_list_limit_bytes:
  brief: Sets the maximum size of the pending list for GIN index
  custom: true
  description: Sets the maximum size of the pending list for GIN index. [Units converted
    to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_gin_pending_list_limit_bytes

pg_settings_hot_standby:
  brief: Allows connections and queries during recovery
  custom: true
  description: Allows connections and queries during recovery.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_hot_standby

pg_settings_hot_standby_feedback:
  brief: Allows feedback from a hot standby to the primary that will avoid query conflicts
  custom: true
  description: Allows feedback from a hot standby to the primary that will avoid query
    conflicts.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_hot_standby_feedback

pg_settings_idle_in_transaction_session_timeout_seconds:
  brief: Sets the maximum allowed duration of any idling transaction
  custom: true
  description: Sets the maximum allowed duration of any idling transaction. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_idle_in_transaction_session_timeout_seconds

pg_settings_ignore_checksum_failure:
  brief: Continues processing after a checksum failure
  custom: true
  description: Continues processing after a checksum failure.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_ignore_checksum_failure

pg_settings_ignore_system_indexes:
  brief: Disables reading from system indexes
  custom: true
  description: Disables reading from system indexes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_ignore_system_indexes

pg_settings_integer_datetimes:
  brief: Datetimes are integer based
  custom: true
  description: Datetimes are integer based.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_integer_datetimes

pg_settings_join_collapse_limit:
  brief: Sets the FROM-list size beyond which JOIN constructs are not flattened
  custom: true
  description: Sets the FROM-list size beyond which JOIN constructs are not flattened.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_join_collapse_limit

pg_settings_krb_caseins_users:
  brief: Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive
  custom: true
  description: Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_krb_caseins_users

pg_settings_lo_compat_privileges:
  brief: Enables backward compatibility mode for privilege checks on large objects
  custom: true
  description: Enables backward compatibility mode for privilege checks on large objects.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_lo_compat_privileges

pg_settings_lock_timeout_seconds:
  brief: Sets the maximum allowed duration of any wait for a lock
  custom: true
  description: Sets the maximum allowed duration of any wait for a lock. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_lock_timeout_seconds

pg_settings_log_autovacuum_min_duration_seconds:
  brief: Sets the minimum execution time above which autovacuum actions will be logged
  custom: true
  description: Sets the minimum execution time above which autovacuum actions will
    be logged. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_autovacuum_min_duration_seconds

pg_settings_log_checkpoints:
  brief: Logs each checkpoint
  custom: true
  description: Logs each checkpoint.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_checkpoints

pg_settings_log_connections:
  brief: Logs each successful connection
  custom: true
  description: Logs each successful connection.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_connections

pg_settings_log_disconnections:
  brief: Logs end of a session, including duration
  custom: true
  description: Logs end of a session, including duration.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_disconnections

pg_settings_log_duration:
  brief: Logs the duration of each completed SQL statement
  custom: true
  description: Logs the duration of each completed SQL statement.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_duration

pg_settings_log_executor_stats:
  brief: Writes executor performance statistics to the server log
  custom: true
  description: Writes executor performance statistics to the server log.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_executor_stats

pg_settings_log_file_mode:
  brief: Sets the file permissions for log files
  custom: true
  description: Sets the file permissions for log files.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_file_mode

pg_settings_log_hostname:
  brief: Logs the host name in the connection logs
  custom: true
  description: Logs the host name in the connection logs.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_hostname

pg_settings_log_lock_waits:
  brief: Logs long lock waits
  custom: true
  description: Logs long lock waits.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_lock_waits

pg_settings_log_min_duration_statement_seconds:
  brief: Sets the minimum execution time above which statements will be logged
  custom: true
  description: Sets the minimum execution time above which statements will be logged.
    [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_min_duration_statement_seconds

pg_settings_log_parser_stats:
  brief: Writes parser performance statistics to the server log
  custom: true
  description: Writes parser performance statistics to the server log.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_parser_stats

pg_settings_log_planner_stats:
  brief: Writes planner performance statistics to the server log
  custom: true
  description: Writes planner performance statistics to the server log.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_planner_stats

pg_settings_log_replication_commands:
  brief: Logs each replication command
  custom: true
  description: Logs each replication command.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_replication_commands

pg_settings_log_rotation_age_seconds:
  brief: Automatic log file rotation will occur after N minutes
  custom: true
  description: Automatic log file rotation will occur after N minutes. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_rotation_age_seconds

pg_settings_log_rotation_size_bytes:
  brief: Automatic log file rotation will occur after N kilobytes
  custom: true
  description: Automatic log file rotation will occur after N kilobytes. [Units converted
    to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_rotation_size_bytes

pg_settings_log_statement_stats:
  brief: Writes cumulative performance statistics to the server log
  custom: true
  description: Writes cumulative performance statistics to the server log.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_statement_stats

pg_settings_log_temp_files_bytes:
  brief: Log the use of temporary files larger than this number of kilobytes
  custom: true
  description: Log the use of temporary files larger than this number of kilobytes.
    [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_temp_files_bytes

pg_settings_log_truncate_on_rotation:
  brief: Truncate existing log files of same name during log rotation
  custom: true
  description: Truncate existing log files of same name during log rotation.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_log_truncate_on_rotation

pg_settings_logging_collector:
  brief: Start a subprocess to capture stderr output and/or csvlogs into log files
  custom: true
  description: Start a subprocess to capture stderr output and/or csvlogs into log
    files.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_logging_collector

pg_settings_maintenance_work_mem_bytes:
  brief: Sets the maximum memory to be used for maintenance operations
  custom: true
  description: Sets the maximum memory to be used for maintenance operations. [Units
    converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_maintenance_work_mem_bytes

pg_settings_max_connections:
  brief: Sets the maximum number of concurrent connections
  custom: true
  description: Sets the maximum number of concurrent connections.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_connections

pg_settings_max_files_per_process:
  brief: Sets the maximum number of simultaneously open files for each server process
  custom: true
  description: Sets the maximum number of simultaneously open files for each server
    process.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_files_per_process

pg_settings_max_function_args:
  brief: Shows the maximum number of function arguments
  custom: true
  description: Shows the maximum number of function arguments.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_function_args

pg_settings_max_identifier_length:
  brief: Shows the maximum identifier length
  custom: true
  description: Shows the maximum identifier length.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_identifier_length

pg_settings_max_index_keys:
  brief: Shows the maximum number of index keys
  custom: true
  description: Shows the maximum number of index keys.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_index_keys

pg_settings_max_locks_per_transaction:
  brief: Sets the maximum number of locks per transaction
  custom: true
  description: Sets the maximum number of locks per transaction.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_locks_per_transaction

pg_settings_max_parallel_workers_per_gather:
  brief: Sets the maximum number of parallel processes per executor node
  custom: true
  description: Sets the maximum number of parallel processes per executor node.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_parallel_workers_per_gather

pg_settings_max_pred_locks_per_transaction:
  brief: Sets the maximum number of predicate locks per transaction
  custom: true
  description: Sets the maximum number of predicate locks per transaction.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_pred_locks_per_transaction

pg_settings_max_prepared_transactions:
  brief: Sets the maximum number of simultaneously prepared transactions
  custom: true
  description: Sets the maximum number of simultaneously prepared transactions.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_prepared_transactions

pg_settings_max_replication_slots:
  brief: Sets the maximum number of simultaneously defined replication slots
  custom: true
  description: Sets the maximum number of simultaneously defined replication slots.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_replication_slots

pg_settings_max_stack_depth_bytes:
  brief: Sets the maximum stack depth, in kilobytes
  custom: true
  description: Sets the maximum stack depth, in kilobytes. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_stack_depth_bytes

pg_settings_max_standby_archive_delay_seconds:
  brief: Sets the maximum delay before canceling queries when a hot standby server
    is processing archived WAL data
  custom: true
  description: Sets the maximum delay before canceling queries when a hot standby
    server is processing archived WAL data. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_standby_archive_delay_seconds

pg_settings_max_standby_streaming_delay_seconds:
  brief: Sets the maximum delay before canceling queries when a hot standby server
    is processing streamed WAL data
  custom: true
  description: Sets the maximum delay before canceling queries when a hot standby
    server is processing streamed WAL data. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_standby_streaming_delay_seconds

pg_settings_max_wal_senders:
  brief: Sets the maximum number of simultaneously running WAL sender processes
  custom: true
  description: Sets the maximum number of simultaneously running WAL sender processes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_wal_senders

pg_settings_max_wal_size_bytes:
  brief: Sets the WAL size that triggers a checkpoint
  custom: true
  description: Sets the WAL size that triggers a checkpoint. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_wal_size_bytes

pg_settings_max_worker_processes:
  brief: Maximum number of concurrent worker processes
  custom: true
  description: Maximum number of concurrent worker processes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_max_worker_processes

pg_settings_min_parallel_relation_size_bytes:
  brief: Sets the minimum size of relations to be considered for parallel scan
  custom: true
  description: Sets the minimum size of relations to be considered for parallel scan.
    [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_min_parallel_relation_size_bytes

pg_settings_min_wal_size_bytes:
  brief: Sets the minimum size to shrink the WAL to
  custom: true
  description: Sets the minimum size to shrink the WAL to. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_min_wal_size_bytes

pg_settings_old_snapshot_threshold_seconds:
  brief: Time before a snapshot is too old to read pages changed after the snapshot
    was taken
  custom: true
  description: Time before a snapshot is too old to read pages changed after the snapshot
    was taken. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_old_snapshot_threshold_seconds

pg_settings_operator_precedence_warning:
  brief: Emit a warning for constructs that changed meaning since PostgreSQL 9.4
  custom: true
  description: Emit a warning for constructs that changed meaning since PostgreSQL
    9.4.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_operator_precedence_warning

pg_settings_parallel_setup_cost:
  brief: Sets the planner's estimate of the cost of starting up worker processes for
    parallel query
  custom: true
  description: Sets the planner's estimate of the cost of starting up worker processes
    for parallel query.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_parallel_setup_cost

pg_settings_parallel_tuple_cost:
  brief: Sets the planner's estimate of the cost of passing each tuple (row) from
    worker to master backend
  custom: true
  description: Sets the planner's estimate of the cost of passing each tuple (row)
    from worker to master backend.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_parallel_tuple_cost

pg_settings_password_encryption:
  brief: Encrypt passwords
  custom: true
  description: Encrypt passwords.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_password_encryption

pg_settings_port:
  brief: Sets the TCP port the server listens on
  custom: true
  description: Sets the TCP port the server listens on.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_port

pg_settings_post_auth_delay_seconds:
  brief: Waits N seconds on connection startup after authentication
  custom: true
  description: Waits N seconds on connection startup after authentication. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_post_auth_delay_seconds

pg_settings_pre_auth_delay_seconds:
  brief: Waits N seconds on connection startup before authentication
  custom: true
  description: Waits N seconds on connection startup before authentication. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_pre_auth_delay_seconds

pg_settings_quote_all_identifiers:
  brief: When generating SQL fragments, quote all identifiers
  custom: true
  description: When generating SQL fragments, quote all identifiers.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_quote_all_identifiers

pg_settings_random_page_cost:
  brief: Sets the planner's estimate of the cost of a nonsequentially fetched disk
    page
  custom: true
  description: Sets the planner's estimate of the cost of a nonsequentially fetched
    disk page.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_random_page_cost

pg_settings_replacement_sort_tuples:
  brief: Sets the maximum number of tuples to be sorted using replacement selection
  custom: true
  description: Sets the maximum number of tuples to be sorted using replacement selection.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_replacement_sort_tuples

pg_settings_restart_after_crash:
  brief: Reinitialize server after backend crash
  custom: true
  description: Reinitialize server after backend crash.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_restart_after_crash

pg_settings_row_security:
  brief: Enable row security
  custom: true
  description: Enable row security.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_row_security

pg_settings_segment_size_bytes:
  brief: Shows the number of pages per disk file
  custom: true
  description: Shows the number of pages per disk file. [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_segment_size_bytes

pg_settings_seq_page_cost:
  brief: Sets the planner's estimate of the cost of a sequentially fetched disk page
  custom: true
  description: Sets the planner's estimate of the cost of a sequentially fetched disk
    page.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_seq_page_cost

pg_settings_server_version_num:
  brief: Shows the server version as an integer
  custom: true
  description: Shows the server version as an integer.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_server_version_num

pg_settings_shared_buffers_bytes:
  brief: Sets the number of shared memory buffers used by the server
  custom: true
  description: Sets the number of shared memory buffers used by the server. [Units
    converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_shared_buffers_bytes

pg_settings_sql_inheritance:
  brief: Causes subtables to be included by default in various commands
  custom: true
  description: Causes subtables to be included by default in various commands.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_sql_inheritance

pg_settings_ssl:
  brief: Enables SSL connections
  custom: true
  description: Enables SSL connections.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_ssl

pg_settings_ssl_prefer_server_ciphers:
  brief: Give priority to server ciphersuite order
  custom: true
  description: Give priority to server ciphersuite order.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_ssl_prefer_server_ciphers

pg_settings_standard_conforming_strings:
  brief: Causes '...' strings to treat backslashes literally
  custom: true
  description: Causes '...' strings to treat backslashes literally.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_standard_conforming_strings

pg_settings_statement_timeout_seconds:
  brief: Sets the maximum allowed duration of any statement
  custom: true
  description: Sets the maximum allowed duration of any statement. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_statement_timeout_seconds

pg_settings_superuser_reserved_connections:
  brief: Sets the number of connection slots reserved for superusers
  custom: true
  description: Sets the number of connection slots reserved for superusers.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_superuser_reserved_connections

pg_settings_synchronize_seqscans:
  brief: Enable synchronized sequential scans
  custom: true
  description: Enable synchronized sequential scans.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_synchronize_seqscans

pg_settings_syslog_sequence_numbers:
  brief: Add sequence number to syslog messages to avoid duplicate suppression
  custom: true
  description: Add sequence number to syslog messages to avoid duplicate suppression.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_syslog_sequence_numbers

pg_settings_syslog_split_messages:
  brief: Split messages sent to syslog by lines and to fit into 1024 bytes
  custom: true
  description: Split messages sent to syslog by lines and to fit into 1024 bytes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_syslog_split_messages

pg_settings_tcp_keepalives_count:
  brief: Maximum number of TCP keepalive retransmits
  custom: true
  description: Maximum number of TCP keepalive retransmits.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_tcp_keepalives_count

pg_settings_tcp_keepalives_idle_seconds:
  brief: Time between issuing TCP keepalives
  custom: true
  description: Time between issuing TCP keepalives. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_tcp_keepalives_idle_seconds

pg_settings_tcp_keepalives_interval_seconds:
  brief: Time between TCP keepalive retransmits
  custom: true
  description: Time between TCP keepalive retransmits. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_tcp_keepalives_interval_seconds

pg_settings_temp_buffers_bytes:
  brief: Sets the maximum number of temporary buffers used by each session
  custom: true
  description: Sets the maximum number of temporary buffers used by each session.
    [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_temp_buffers_bytes

pg_settings_temp_file_limit_bytes:
  brief: Limits the total size of all temporary files used by each process
  custom: true
  description: Limits the total size of all temporary files used by each process.
    [Units converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_temp_file_limit_bytes

pg_settings_trace_notify:
  brief: Generates debugging output for LISTEN and NOTIFY
  custom: true
  description: Generates debugging output for LISTEN and NOTIFY.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_trace_notify

pg_settings_trace_sort:
  brief: Emit information about resource usage in sorting
  custom: true
  description: Emit information about resource usage in sorting.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_trace_sort

pg_settings_track_activities:
  brief: Collects information about executing commands
  custom: true
  description: Collects information about executing commands.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_track_activities

pg_settings_track_activity_query_size:
  brief: Sets the size reserved for pg_stat_activity.query, in bytes
  custom: true
  description: Sets the size reserved for pg_stat_activity.query, in bytes.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_track_activity_query_size

pg_settings_track_commit_timestamp:
  brief: Collects transaction commit time
  custom: true
  description: Collects transaction commit time.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_track_commit_timestamp

pg_settings_track_counts:
  brief: Collects statistics on database activity
  custom: true
  description: Collects statistics on database activity.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_track_counts

pg_settings_track_io_timing:
  brief: Collects timing statistics for database I/O activity
  custom: true
  description: Collects timing statistics for database I/O activity.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_track_io_timing

pg_settings_transaction_deferrable:
  brief: Whether to defer a read-only serializable transaction until it can be executed
    with no possible serialization failures
  custom: true
  description: Whether to defer a read-only serializable transaction until it can
    be executed with no possible serialization failures.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_transaction_deferrable

pg_settings_transaction_read_only:
  brief: Sets the current transaction's read-only status
  custom: true
  description: Sets the current transaction's read-only status.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_transaction_read_only

pg_settings_transform_null_equals:
  brief: Treats "expr=NULL" as "expr IS NULL"
  custom: true
  description: Treats "expr=NULL" as "expr IS NULL".
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_transform_null_equals

pg_settings_unix_socket_permissions:
  brief: Sets the access permissions of the Unix-domain socket
  custom: true
  description: Sets the access permissions of the Unix-domain socket.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_unix_socket_permissions

pg_settings_update_process_title:
  brief: Updates the process title to show the active SQL command
  custom: true
  description: Updates the process title to show the active SQL command.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_update_process_title

pg_settings_vacuum_cost_delay_seconds:
  brief: Vacuum cost delay in milliseconds
  custom: true
  description: Vacuum cost delay in milliseconds. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_cost_delay_seconds

pg_settings_vacuum_cost_limit:
  brief: Vacuum cost amount available before napping
  custom: true
  description: Vacuum cost amount available before napping.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_cost_limit

pg_settings_vacuum_cost_page_dirty:
  brief: Vacuum cost for a page dirtied by vacuum
  custom: true
  description: Vacuum cost for a page dirtied by vacuum.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_cost_page_dirty

pg_settings_vacuum_cost_page_hit:
  brief: Vacuum cost for a page found in the buffer cache
  custom: true
  description: Vacuum cost for a page found in the buffer cache.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_cost_page_hit

pg_settings_vacuum_cost_page_miss:
  brief: Vacuum cost for a page not found in the buffer cache
  custom: true
  description: Vacuum cost for a page not found in the buffer cache.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_cost_page_miss

pg_settings_vacuum_defer_cleanup_age:
  brief: Number of transactions by which VACUUM and HOT cleanup should be deferred,
    if any
  custom: true
  description: Number of transactions by which VACUUM and HOT cleanup should be deferred,
    if any.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_defer_cleanup_age

pg_settings_vacuum_freeze_min_age:
  brief: Minimum age at which VACUUM should freeze a table row
  custom: true
  description: Minimum age at which VACUUM should freeze a table row.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_freeze_min_age

pg_settings_vacuum_freeze_table_age:
  brief: Age at which VACUUM should scan whole table to freeze tuples
  custom: true
  description: Age at which VACUUM should scan whole table to freeze tuples.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_freeze_table_age

pg_settings_vacuum_multixact_freeze_min_age:
  brief: Minimum age at which VACUUM should freeze a MultiXactId in a table row
  custom: true
  description: Minimum age at which VACUUM should freeze a MultiXactId in a table
    row.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_multixact_freeze_min_age

pg_settings_vacuum_multixact_freeze_table_age:
  brief: Multixact age at which VACUUM should scan whole table to freeze tuples
  custom: true
  description: Multixact age at which VACUUM should scan whole table to freeze tuples.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_vacuum_multixact_freeze_table_age

pg_settings_wal_block_size:
  brief: Shows the block size in the write ahead log
  custom: true
  description: Shows the block size in the write ahead log.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_block_size

pg_settings_wal_buffers_bytes:
  brief: Sets the number of disk-page buffers in shared memory for WAL
  custom: true
  description: Sets the number of disk-page buffers in shared memory for WAL. [Units
    converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_buffers_bytes

pg_settings_wal_compression:
  brief: Compresses full-page writes written in WAL file
  custom: true
  description: Compresses full-page writes written in WAL file.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_compression

pg_settings_wal_keep_segments:
  brief: Sets the number of WAL files held for standby servers
  custom: true
  description: Sets the number of WAL files held for standby servers.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_keep_segments

pg_settings_wal_log_hints:
  brief: Writes full pages to WAL when first modified after a checkpoint, even for
    a non-critical modifications
  custom: true
  description: Writes full pages to WAL when first modified after a checkpoint, even
    for a non-critical modifications.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_log_hints

pg_settings_wal_receiver_status_interval_seconds:
  brief: Sets the maximum interval between WAL receiver status reports to the primary
  custom: true
  description: Sets the maximum interval between WAL receiver status reports to the
    primary. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_receiver_status_interval_seconds

pg_settings_wal_receiver_timeout_seconds:
  brief: Sets the maximum wait time to receive data from the primary
  custom: true
  description: Sets the maximum wait time to receive data from the primary. [Units
    converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_receiver_timeout_seconds

pg_settings_wal_retrieve_retry_interval_seconds:
  brief: Sets the time to wait before retrying to retrieve WAL after a failed attempt
  custom: true
  description: Sets the time to wait before retrying to retrieve WAL after a failed
    attempt. [Units converted to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_retrieve_retry_interval_seconds

pg_settings_wal_segment_size_bytes:
  brief: Shows the number of pages per write ahead log segment
  custom: true
  description: Shows the number of pages per write ahead log segment. [Units converted
    to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_segment_size_bytes

pg_settings_wal_sender_timeout_seconds:
  brief: Sets the maximum time to wait for WAL replication
  custom: true
  description: Sets the maximum time to wait for WAL replication. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_sender_timeout_seconds

pg_settings_wal_writer_delay_seconds:
  brief: Time between WAL flushes performed in the WAL writer
  custom: true
  description: Time between WAL flushes performed in the WAL writer. [Units converted
    to seconds.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_writer_delay_seconds

pg_settings_wal_writer_flush_after_bytes:
  brief: Amount of WAL written out by WAL writer that triggers a flush
  custom: true
  description: Amount of WAL written out by WAL writer that triggers a flush. [Units
    converted to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_wal_writer_flush_after_bytes

pg_settings_work_mem_bytes:
  brief: Sets the maximum memory to be used for query workspaces
  custom: true
  description: Sets the maximum memory to be used for query workspaces. [Units converted
    to bytes.]
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_work_mem_bytes

pg_settings_zero_damaged_pages:
  brief: Continues processing past damaged page headers
  custom: true
  description: Continues processing past damaged page headers.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_settings_zero_damaged_pages

pg_slow_queries:
  brief: Current number of slow queries
  custom: true
  description: Current number of slow queries
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_slow_queries

pg_stat_activity_count:
  brief: Number of connections in this state
  custom: false
  description: Number of connections in this state
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_stat_activity_count

pg_stat_activity_max_tx_duration:
  brief: Max duration in seconds any active transaction has been running
  custom: false
  description: Max duration in seconds any active transaction has been running
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_stat_activity_max_tx_duration

pg_stat_bgwriter_buffers_alloc:
  brief: Number of buffers allocated
  custom: true
  description: Number of buffers allocated
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_buffers_alloc

pg_stat_bgwriter_buffers_backend:
  brief: Number of buffers written directly by a backend
  custom: true
  description: Number of buffers written directly by a backend
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_buffers_backend

pg_stat_bgwriter_buffers_backend_fsync:
  brief: Number of times a backend had to execute its own fsync call (normally the
    background writer handles those even when the backend does its own write)
  custom: true
  description: Number of times a backend had to execute its own fsync call (normally
    the background writer handles those even when the backend does its own write)
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_buffers_backend_fsync

pg_stat_bgwriter_buffers_checkpoint:
  brief: Number of buffers written during checkpoints
  custom: true
  description: Number of buffers written during checkpoints
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_buffers_checkpoint

pg_stat_bgwriter_buffers_clean:
  brief: Number of buffers written by the background writer
  custom: true
  description: Number of buffers written by the background writer
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_buffers_clean

pg_stat_bgwriter_checkpoint_sync_time:
  brief: Total amount of time that has been spent in the portion of checkpoint processing
    where files are synchronized to disk, in milliseconds
  custom: true
  description: Total amount of time that has been spent in the portion of checkpoint
    processing where files are synchronized to disk, in milliseconds
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_checkpoint_sync_time

pg_stat_bgwriter_checkpoint_write_time:
  brief: Total amount of time that has been spent in the portion of checkpoint processing
    where files are written to disk, in milliseconds
  custom: true
  description: Total amount of time that has been spent in the portion of checkpoint
    processing where files are written to disk, in milliseconds
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_checkpoint_write_time

pg_stat_bgwriter_checkpoints_req:
  brief: Number of requested checkpoints that have been performed
  custom: true
  description: Number of requested checkpoints that have been performed
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_checkpoints_req

pg_stat_bgwriter_checkpoints_timed:
  brief: Number of scheduled checkpoints that have been performed
  custom: true
  description: Number of scheduled checkpoints that have been performed
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_checkpoints_timed

pg_stat_bgwriter_maxwritten_clean:
  brief: Number of times the background writer stopped a cleaning scan because it
    had written too many buffers
  custom: true
  description: Number of times the background writer stopped a cleaning scan because
    it had written too many buffers
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_maxwritten_clean

pg_stat_bgwriter_stats_reset:
  brief: Time at which these statistics were last reset
  custom: true
  description: Time at which these statistics were last reset
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_bgwriter_stats_reset

pg_stat_database_blk_read_time:
  brief: Time spent reading data file blocks by backends in this database, in milliseconds
  custom: false
  description: Time spent reading data file blocks by backends in this database, in
    milliseconds
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_blk_read_time

pg_stat_database_blk_write_time:
  brief: Time spent writing data file blocks by backends in this database, in milliseconds
  custom: false
  description: Time spent writing data file blocks by backends in this database, in
    milliseconds
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_blk_write_time

pg_stat_database_blks_hit:
  brief: Number of times disk blocks were found already in the buffer cache, so that
    a read was not necessary (this only includes hits in the PostgreSQL buffer cache,
    not the operating system's file system cache)
  custom: false
  description: Number of times disk blocks were found already in the buffer cache,
    so that a read was not necessary (this only includes hits in the PostgreSQL buffer
    cache, not the operating system's file system cache)
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_blks_hit

pg_stat_database_blks_read:
  brief: Number of disk blocks read in this database
  custom: false
  description: Number of disk blocks read in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_blks_read

pg_stat_database_conflicts:
  brief: Number of queries canceled due to conflicts with recovery in this database
  custom: true
  description: Number of queries canceled due to conflicts with recovery in this database.
    (Conflicts occur only on standby servers; see pg_stat_database_conflicts for details.)
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts

pg_stat_database_conflicts_confl_bufferpin:
  brief: Number of queries in this database that have been canceled due to pinned
    buffers
  custom: false
  description: Number of queries in this database that have been canceled due to pinned
    buffers
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts_confl_bufferpin

pg_stat_database_conflicts_confl_deadlock:
  brief: Number of queries in this database that have been canceled due to deadlocks
  custom: false
  description: Number of queries in this database that have been canceled due to deadlocks
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts_confl_deadlock

pg_stat_database_conflicts_confl_lock:
  brief: Number of queries in this database that have been canceled due to lock timeouts
  custom: false
  description: Number of queries in this database that have been canceled due to lock
    timeouts
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts_confl_lock

pg_stat_database_conflicts_confl_snapshot:
  brief: Number of queries in this database that have been canceled due to old snapshots
  custom: false
  description: Number of queries in this database that have been canceled due to old
    snapshots
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts_confl_snapshot

pg_stat_database_conflicts_confl_tablespace:
  brief: Number of queries in this database that have been canceled due to dropped
    tablespaces
  custom: false
  description: Number of queries in this database that have been canceled due to dropped
    tablespaces
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_conflicts_confl_tablespace

pg_stat_database_deadlocks:
  brief: Number of deadlocks detected in this database
  custom: true
  description: Number of deadlocks detected in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_deadlocks

pg_stat_database_numbackends:
  brief: Number of backends currently connected to this database
  custom: false
  description: Number of backends currently connected to this database. This is the
    only column in this view that returns a value reflecting current state; all other
    columns return the accumulated values since the last reset.
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_stat_database_numbackends

pg_stat_database_stats_reset:
  brief: Time at which these statistics were last reset
  custom: true
  description: Time at which these statistics were last reset
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_stats_reset

pg_stat_database_temp_bytes:
  brief: Total amount of data written to temporary files by queries in this database
  custom: false
  description: Total amount of data written to temporary files by queries in this
    database. All temporary files are counted, regardless of why the temporary file
    was created, and regardless of the log_temp_files setting.
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_temp_bytes

pg_stat_database_temp_files:
  brief: Number of temporary files created by queries in this database
  custom: false
  description: Number of temporary files created by queries in this database. All
    temporary files are counted, regardless of why the temporary file was created
    (e.g., sorting or hashing), and regardless of the log_temp_files setting.
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_temp_files

pg_stat_database_tup_deleted:
  brief: Number of rows deleted by queries in this database
  custom: false
  description: Number of rows deleted by queries in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_tup_deleted

pg_stat_database_tup_fetched:
  brief: Number of rows fetched by queries in this database
  custom: false
  description: Number of rows fetched by queries in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_tup_fetched

pg_stat_database_tup_inserted:
  brief: Number of rows inserted by queries in this database
  custom: false
  description: Number of rows inserted by queries in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_tup_inserted

pg_stat_database_tup_returned:
  brief: Number of rows returned by queries in this database
  custom: false
  description: Number of rows returned by queries in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_tup_returned

pg_stat_database_tup_updated:
  brief: Number of rows updated by queries in this database
  custom: false
  description: Number of rows updated by queries in this database
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_tup_updated

pg_stat_database_xact_commit:
  brief: Number of transactions in this database that have been committed
  custom: false
  description: Number of transactions in this database that have been committed
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_xact_commit

pg_stat_database_xact_rollback:
  brief: Number of transactions in this database that have been rolled back
  custom: false
  description: Number of transactions in this database that have been rolled back
  metric_type: cumulative
  monitor: prometheus/postgres
  title: pg_stat_database_xact_rollback

pg_static:
  brief: Version string as reported by postgres
  custom: true
  description: Version string as reported by postgres
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_static

pg_stuck_idle_in_transaction_queries:
  brief: Current number of queries that are stuck being idle in transactions
  custom: true
  description: Current number of queries that are stuck being idle in transactions
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_stuck_idle_in_transaction_queries

pg_total_relation_size_bytes:
  brief: Total disk space usage for the specified table and associated indexes
  custom: false
  description: Total disk space usage for the specified table and associated indexes
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_total_relation_size_bytes

pg_up:
  brief: Whether the last scrape of metrics from PostgreSQL was able to connect to
    the server (1 for yes, 0 for no)
  custom: true
  description: Whether the last scrape of metrics from PostgreSQL was able to connect
    to the server (1 for yes, 0 for no).
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_up

pg_vacuum_age_in_seconds:
  brief: The current maximum VACUUM query age in seconds
  custom: true
  description: The current maximum VACUUM query age in seconds
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_vacuum_age_in_seconds

pg_vacuum_analyze_age_in_seconds:
  brief: The current maximum VACUUM ANALYZE query age in seconds
  custom: true
  description: The current maximum VACUUM ANALYZE query age in seconds
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_vacuum_analyze_age_in_seconds

pg_vacuum_analyze_queries:
  brief: The current number of VACUUM ANALYZE queries
  custom: true
  description: The current number of VACUUM ANALYZE queries
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_vacuum_analyze_queries

pg_vacuum_queries:
  brief: The current number of VACUUM queries
  custom: true
  description: The current number of VACUUM queries
  metric_type: gauge
  monitor: prometheus/postgres
  title: pg_vacuum_queries


net_conntrack_dialer_conn_attempted_total:
  brief: Total number of connections attempted by the given dialer a given name
  custom: true
  description: Total number of connections attempted by the given dialer a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_dialer_conn_attempted_total

net_conntrack_dialer_conn_closed_total:
  brief: Total number of connections closed which originated from the dialer of a
    given name
  custom: true
  description: Total number of connections closed which originated from the dialer
    of a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_dialer_conn_closed_total

net_conntrack_dialer_conn_established_total:
  brief: Total number of connections successfully established by the given dialer
    a given name
  custom: true
  description: Total number of connections successfully established by the given dialer
    a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_dialer_conn_established_total

net_conntrack_dialer_conn_failed_total:
  brief: Total number of connections failed to dial by the dialer a given name
  custom: true
  description: Total number of connections failed to dial by the dialer a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_dialer_conn_failed_total

net_conntrack_listener_conn_accepted_total:
  brief: Total number of connections opened to the listener of a given name
  custom: true
  description: Total number of connections opened to the listener of a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_listener_conn_accepted_total

net_conntrack_listener_conn_closed_total:
  brief: Total number of connections closed that were made to the listener of a given
    name
  custom: true
  description: Total number of connections closed that were made to the listener of
    a given name
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: net_conntrack_listener_conn_closed_total

prometheus_api_remote_read_queries:
  brief: The current number of remote read queries being executed or waiting
  custom: true
  description: The current number of remote read queries being executed or waiting
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_api_remote_read_queries

prometheus_build_info:
  brief: A metric with a constant '1' value labeled by version, revision, branch,
    and goversion from which prometheus was built
  custom: true
  description: A metric with a constant '1' value labeled by version, revision, branch,
    and goversion from which prometheus was built
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_build_info

prometheus_config_last_reload_success_timestamp_seconds:
  brief: Timestamp of the last successful configuration reload
  custom: true
  description: Timestamp of the last successful configuration reload
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_config_last_reload_success_timestamp_seconds

prometheus_config_last_reload_successful:
  brief: Whether the last configuration reload attempt was successful
  custom: true
  description: Whether the last configuration reload attempt was successful
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_config_last_reload_successful

prometheus_engine_queries:
  brief: The current number of queries being executed or waiting
  custom: true
  description: The current number of queries being executed or waiting
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_engine_queries

prometheus_engine_queries_concurrent_max:
  brief: The max number of concurrent queries
  custom: true
  description: The max number of concurrent queries
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_engine_queries_concurrent_max

prometheus_engine_query_duration_seconds:
  brief: Query timings
  custom: true
  description: Query timings
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_engine_query_duration_seconds

prometheus_engine_query_duration_seconds_count:
  brief: Query timings (count)
  custom: true
  description: Query timings (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_engine_query_duration_seconds_count

prometheus_http_request_duration_seconds:
  brief: Histogram of latencies for HTTP requests
  custom: true
  description: Histogram of latencies for HTTP requests
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_request_duration_seconds

prometheus_http_request_duration_seconds_bucket:
  brief: Histogram of latencies for HTTP requests in the respective bucket
  custom: true
  description: Histogram of latencies for HTTP requests in the respective bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_request_duration_seconds_bucket

prometheus_http_request_duration_seconds_count:
  brief: Histogram of latencies for HTTP requests (count)
  custom: true
  description: Histogram of latencies for HTTP requests (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_request_duration_seconds_count

prometheus_http_response_size_bytes:
  brief: Histogram of response size for HTTP requests
  custom: true
  description: Histogram of response size for HTTP requests
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_response_size_bytes

prometheus_http_response_size_bytes_bucket:
  brief: Histogram of response size for HTTP requests in the respective bucket
  custom: true
  description: Histogram of response size for HTTP requests in the respective bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_response_size_bytes_bucket

prometheus_http_response_size_bytes_count:
  brief: Histogram of response size for HTTP requests
  custom: true
  description: Histogram of response size for HTTP requests
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_http_response_size_bytes_count

prometheus_notifications_alertmanagers_discovered:
  brief: The number of alertmanagers discovered and active
  custom: true
  description: The number of alertmanagers discovered and active
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_notifications_alertmanagers_discovered

prometheus_notifications_dropped_total:
  brief: Total number of alerts dropped due to errors when sending to Alertmanager
  custom: true
  description: Total number of alerts dropped due to errors when sending to Alertmanager
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_notifications_dropped_total

prometheus_notifications_queue_capacity:
  brief: The capacity of the alert notifications queue
  custom: true
  description: The capacity of the alert notifications queue
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_notifications_queue_capacity

prometheus_notifications_queue_length:
  brief: The number of alert notifications in the queue
  custom: true
  description: The number of alert notifications in the queue
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_notifications_queue_length

prometheus_rule_evaluation_duration_seconds:
  brief: The duration for a rule to execute
  custom: true
  description: The duration for a rule to execute
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_evaluation_duration_seconds

prometheus_rule_evaluation_duration_seconds_count:
  brief: The duration for a rule to execute (count)
  custom: true
  description: The duration for a rule to execute (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_evaluation_duration_seconds_count

prometheus_rule_evaluation_failures_total:
  brief: The total number of rule evaluation failures
  custom: true
  description: The total number of rule evaluation failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_evaluation_failures_total

prometheus_rule_group_duration_seconds:
  brief: The duration of rule group evaluations
  custom: true
  description: The duration of rule group evaluations
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_group_duration_seconds

prometheus_rule_group_duration_seconds_count:
  brief: The duration of rule group evaluations (count)
  custom: true
  description: The duration of rule group evaluations (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_group_duration_seconds_count

prometheus_rule_group_interval_seconds:
  brief: The interval of a rule group
  custom: true
  description: The interval of a rule group
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_rule_group_interval_seconds

prometheus_rule_group_iterations_missed_total:
  brief: The total number of rule group evaluations missed due to slow rule group
    evaluation
  custom: true
  description: The total number of rule group evaluations missed due to slow rule
    group evaluation
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_group_iterations_missed_total

prometheus_rule_group_iterations_total:
  brief: The total number of scheduled rule group evaluations, whether executed or
    missed
  custom: true
  description: The total number of scheduled rule group evaluations, whether executed
    or missed
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_rule_group_iterations_total

prometheus_rule_group_last_duration_seconds:
  brief: The duration of the last rule group evaluation
  custom: true
  description: The duration of the last rule group evaluation
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_rule_group_last_duration_seconds

prometheus_sd_azure_refresh_duration_seconds:
  brief: The duration of a Azure-SD refresh in seconds
  custom: true
  description: The duration of a Azure-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_azure_refresh_duration_seconds

prometheus_sd_azure_refresh_duration_seconds_count:
  brief: The duration of a Azure-SD refresh in seconds (count)
  custom: true
  description: The duration of a Azure-SD refresh in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_azure_refresh_duration_seconds_count

prometheus_sd_azure_refresh_failures_total:
  brief: Number of Azure-SD refresh failures
  custom: true
  description: Number of Azure-SD refresh failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_azure_refresh_failures_total

prometheus_sd_configs_failed_total:
  brief: Total number of service discovery configurations that failed to load
  custom: true
  description: Total number of service discovery configurations that failed to load
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_configs_failed_total

prometheus_sd_consul_rpc_duration_seconds:
  brief: The duration of a Consul RPC call in seconds
  custom: true
  description: The duration of a Consul RPC call in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_consul_rpc_duration_seconds

prometheus_sd_consul_rpc_duration_seconds_count:
  brief: The duration of a Consul RPC call in seconds (count)
  custom: true
  description: The duration of a Consul RPC call in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_consul_rpc_duration_seconds_count

prometheus_sd_consul_rpc_failures_total:
  brief: The number of Consul RPC call failures
  custom: true
  description: The number of Consul RPC call failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_consul_rpc_failures_total

prometheus_sd_discovered_targets:
  brief: Current number of discovered targets
  custom: true
  description: Current number of discovered targets
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_sd_discovered_targets

prometheus_sd_dns_lookup_failures_total:
  brief: The number of DNS-SD lookup failures
  custom: true
  description: The number of DNS-SD lookup failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_dns_lookup_failures_total

prometheus_sd_dns_lookups_total:
  brief: The number of DNS-SD lookups
  custom: true
  description: The number of DNS-SD lookups
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_dns_lookups_total

prometheus_sd_ec2_refresh_duration_seconds:
  brief: The duration of a EC2-SD refresh in seconds
  custom: true
  description: The duration of a EC2-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_ec2_refresh_duration_seconds

prometheus_sd_ec2_refresh_duration_seconds_count:
  brief: The duration of a EC2-SD refresh in seconds (count)
  custom: true
  description: The duration of a EC2-SD refresh in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_ec2_refresh_duration_seconds_count

prometheus_sd_ec2_refresh_failures_total:
  brief: The number of EC2-SD scrape failures
  custom: true
  description: The number of EC2-SD scrape failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_ec2_refresh_failures_total

prometheus_sd_file_read_errors_total:
  brief: The number of File-SD read errors
  custom: true
  description: The number of File-SD read errors
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_file_read_errors_total

prometheus_sd_file_scan_duration_seconds:
  brief: The duration of the File-SD scan in seconds
  custom: true
  description: The duration of the File-SD scan in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_file_scan_duration_seconds

prometheus_sd_file_scan_duration_seconds_count:
  brief: The duration of the File-SD scan in seconds (count)
  custom: true
  description: The duration of the File-SD scan in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_file_scan_duration_seconds_count

prometheus_sd_gce_refresh_duration:
  brief: The duration of a GCE-SD refresh in seconds
  custom: true
  description: The duration of a GCE-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_gce_refresh_duration

prometheus_sd_gce_refresh_duration_count:
  brief: The duration of a GCE-SD refresh in seconds (count)
  custom: true
  description: The duration of a GCE-SD refresh in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_gce_refresh_duration_count

prometheus_sd_gce_refresh_failures_total:
  brief: The number of GCE-SD refresh failures
  custom: true
  description: The number of GCE-SD refresh failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_gce_refresh_failures_total

prometheus_sd_kubernetes_cache_last_resource_version:
  brief: Last resource version from the Kubernetes API
  custom: true
  description: Last resource version from the Kubernetes API
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_last_resource_version

prometheus_sd_kubernetes_cache_list_duration_seconds:
  brief: Duration of a Kubernetes API call in seconds
  custom: true
  description: Duration of a Kubernetes API call in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_list_duration_seconds

prometheus_sd_kubernetes_cache_list_duration_seconds_count:
  brief: Duration of a Kubernetes API call in seconds (count)
  custom: true
  description: Duration of a Kubernetes API call in seconds (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_list_duration_seconds_count

prometheus_sd_kubernetes_cache_list_items:
  brief: Count of items in a list from the Kubernetes API
  custom: true
  description: Count of items in a list from the Kubernetes API
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_list_items

prometheus_sd_kubernetes_cache_list_items_count:
  brief: Count of items in a list from the Kubernetes API (count)
  custom: true
  description: Count of items in a list from the Kubernetes API (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_list_items_count

prometheus_sd_kubernetes_cache_list_total:
  brief: Total number of list operations
  custom: true
  description: Total number of list operations
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_list_total

prometheus_sd_kubernetes_cache_short_watches_total:
  brief: Total number of short watch operations
  custom: true
  description: Total number of short watch operations
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_short_watches_total

prometheus_sd_kubernetes_cache_watch_duration_seconds:
  brief: Duration of watches on the Kubernetes API
  custom: true
  description: Duration of watches on the Kubernetes API
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_watch_duration_seconds

prometheus_sd_kubernetes_cache_watch_duration_seconds_count:
  brief: Duration of watches on the Kubernetes API (count)
  custom: true
  description: Duration of watches on the Kubernetes API (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_watch_duration_seconds_count

prometheus_sd_kubernetes_cache_watch_events:
  brief: Number of items in watches on the Kubernetes API
  custom: true
  description: Number of items in watches on the Kubernetes API
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_watch_events

prometheus_sd_kubernetes_cache_watch_events_count:
  brief: Number of items in watches on the Kubernetes API (count)
  custom: true
  description: Number of items in watches on the Kubernetes API (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_watch_events_count

prometheus_sd_kubernetes_cache_watches_total:
  brief: Total number of watch operations
  custom: true
  description: Total number of watch operations
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_cache_watches_total

prometheus_sd_kubernetes_events_total:
  brief: The number of Kubernetes events handled
  custom: true
  description: The number of Kubernetes events handled
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_kubernetes_events_total

prometheus_sd_marathon_refresh_duration_seconds:
  brief: The duration of a Marathon-SD refresh in seconds
  custom: true
  description: The duration of a Marathon-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_marathon_refresh_duration_seconds

prometheus_sd_marathon_refresh_duration_seconds_count:
  brief: The duration of a Marathon-SD refresh in seconds
  custom: true
  description: The duration of a Marathon-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_marathon_refresh_duration_seconds_count

prometheus_sd_marathon_refresh_failures_total:
  brief: The number of Marathon-SD refresh failures
  custom: true
  description: The number of Marathon-SD refresh failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_marathon_refresh_failures_total

prometheus_sd_openstack_refresh_duration_seconds:
  brief: The duration of an OpenStack-SD refresh in seconds
  custom: true
  description: The duration of an OpenStack-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_openstack_refresh_duration_seconds

prometheus_sd_openstack_refresh_duration_seconds_count:
  brief: The duration of an OpenStack-SD refresh in seconds
  custom: true
  description: The duration of an OpenStack-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_openstack_refresh_duration_seconds_count

prometheus_sd_openstack_refresh_failures_total:
  brief: The number of OpenStack-SD scrape failures
  custom: true
  description: The number of OpenStack-SD scrape failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_openstack_refresh_failures_total

prometheus_sd_received_updates_total:
  brief: Total number of update events received from the SD providers
  custom: true
  description: Total number of update events received from the SD providers
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_received_updates_total

prometheus_sd_triton_refresh_duration_seconds:
  brief: The duration of a Triton-SD refresh in seconds
  custom: true
  description: The duration of a Triton-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_triton_refresh_duration_seconds

prometheus_sd_triton_refresh_duration_seconds_count:
  brief: The duration of a Triton-SD refresh in seconds
  custom: true
  description: The duration of a Triton-SD refresh in seconds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_triton_refresh_duration_seconds_count

prometheus_sd_triton_refresh_failures_total:
  brief: The number of Triton-SD scrape failures
  custom: true
  description: The number of Triton-SD scrape failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_triton_refresh_failures_total

prometheus_sd_updates_delayed_total:
  brief: Total number of update events that couldn't be sent immediately
  custom: true
  description: Total number of update events that couldn't be sent immediately
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_updates_delayed_total

prometheus_sd_updates_total:
  brief: Total number of update events sent to the SD consumers
  custom: true
  description: Total number of update events sent to the SD consumers
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_sd_updates_total

prometheus_target_interval_length_seconds:
  brief: Actual intervals between scrapes
  custom: true
  description: Actual intervals between scrapes
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_interval_length_seconds

prometheus_target_interval_length_seconds_count:
  brief: Actual intervals between scrapes
  custom: true
  description: Actual intervals between scrapes
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_interval_length_seconds_count

prometheus_target_scrape_pool_sync_total:
  brief: Total number of syncs that were executed on a scrape pool
  custom: true
  description: Total number of syncs that were executed on a scrape pool
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_scrape_pool_sync_total

prometheus_target_scrapes_exceeded_sample_limit_total:
  brief: Total number of scrapes that hit the sample limit and were rejected
  custom: true
  description: Total number of scrapes that hit the sample limit and were rejected
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_scrapes_exceeded_sample_limit_total

prometheus_target_scrapes_sample_duplicate_timestamp_total:
  brief: Total number of samples rejected due to duplicate timestamps but different
    values
  custom: true
  description: Total number of samples rejected due to duplicate timestamps but different
    values
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_scrapes_sample_duplicate_timestamp_total

prometheus_target_scrapes_sample_out_of_bounds_total:
  brief: Total number of samples rejected due to timestamp falling outside of the
    time bounds
  custom: true
  description: Total number of samples rejected due to timestamp falling outside of
    the time bounds
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_scrapes_sample_out_of_bounds_total

prometheus_target_scrapes_sample_out_of_order_total:
  brief: Total number of samples rejected due to not being out of the expected order
  custom: true
  description: Total number of samples rejected due to not being out of the expected
    order
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_scrapes_sample_out_of_order_total

prometheus_target_sync_length_seconds:
  brief: Actual interval to sync the scrape pool
  custom: true
  description: Actual interval to sync the scrape pool
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_sync_length_seconds

prometheus_target_sync_length_seconds_count:
  brief: Actual interval to sync the scrape pool
  custom: true
  description: Actual interval to sync the scrape pool
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_target_sync_length_seconds_count

prometheus_treecache_watcher_goroutines:
  brief: The current number of watcher goroutines
  custom: true
  description: The current number of watcher goroutines
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_treecache_watcher_goroutines

prometheus_treecache_zookeeper_failures_total:
  brief: The total number of ZooKeeper failures
  custom: true
  description: The total number of ZooKeeper failures
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_treecache_zookeeper_failures_total

prometheus_tsdb_blocks_loaded:
  brief: Number of currently loaded data blocks
  custom: true
  description: Number of currently loaded data blocks
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_blocks_loaded

prometheus_tsdb_checkpoint_creations_failed_total:
  brief: Total number of checkpoint creations that failed
  custom: true
  description: Total number of checkpoint creations that failed
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_checkpoint_creations_failed_total

prometheus_tsdb_checkpoint_creations_total:
  brief: Total number of checkpoint creations attempted
  custom: true
  description: Total number of checkpoint creations attempted
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_checkpoint_creations_total

prometheus_tsdb_checkpoint_deletions_failed_total:
  brief: Total number of checkpoint deletions that failed
  custom: true
  description: Total number of checkpoint deletions that failed
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_checkpoint_deletions_failed_total

prometheus_tsdb_checkpoint_deletions_total:
  brief: Total number of checkpoint deletions attempted
  custom: true
  description: Total number of checkpoint deletions attempted
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_checkpoint_deletions_total

prometheus_tsdb_compaction_chunk_range_seconds:
  brief: Final time range of chunks on their first compaction
  custom: true
  description: Final time range of chunks on their first compaction
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_range_seconds

prometheus_tsdb_compaction_chunk_range_seconds_bucket:
  brief: Final time range of chunks on their first compaction in the respective bucket
  custom: true
  description: Final time range of chunks on their first compaction in the respective
    bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_range_seconds_bucket

prometheus_tsdb_compaction_chunk_range_seconds_count:
  brief: Final time range of chunks on their first compaction (count)
  custom: true
  description: Final time range of chunks on their first compaction (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_range_seconds_count

prometheus_tsdb_compaction_chunk_samples:
  brief: Final number of samples on their first compaction
  custom: true
  description: Final number of samples on their first compaction
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_samples

prometheus_tsdb_compaction_chunk_samples_bucket:
  brief: Final number of samples on their first compaction in the respective bucket
  custom: true
  description: Final number of samples on their first compaction in the respective
    bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_samples_bucket

prometheus_tsdb_compaction_chunk_samples_count:
  brief: Final number of samples on their first compaction (count)
  custom: true
  description: Final number of samples on their first compaction (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_samples_count

prometheus_tsdb_compaction_chunk_size_bytes:
  brief: Final size of chunks on their first compaction
  custom: true
  description: Final size of chunks on their first compaction
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_size_bytes

prometheus_tsdb_compaction_chunk_size_bytes_bucket:
  brief: Final size of chunks on their first compaction in the respective bucket
  custom: true
  description: Final size of chunks on their first compaction in the respective bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_size_bytes_bucket

prometheus_tsdb_compaction_chunk_size_bytes_count:
  brief: Final size of chunks on their first compaction
  custom: true
  description: Final size of chunks on their first compaction
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_chunk_size_bytes_count

prometheus_tsdb_compaction_duration_seconds:
  brief: Duration of compaction runs
  custom: true
  description: Duration of compaction runs
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_duration_seconds

prometheus_tsdb_compaction_duration_seconds_bucket:
  brief: Duration of compaction runs in the respective bucket
  custom: true
  description: Duration of compaction runs in the respective bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_duration_seconds_bucket

prometheus_tsdb_compaction_duration_seconds_count:
  brief: Duration of compaction runs (count)
  custom: true
  description: Duration of compaction runs (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compaction_duration_seconds_count

prometheus_tsdb_compactions_failed_total:
  brief: Total number of compactions that failed for the partition
  custom: true
  description: Total number of compactions that failed for the partition
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compactions_failed_total

prometheus_tsdb_compactions_total:
  brief: Total number of compactions that were executed for the partition
  custom: true
  description: Total number of compactions that were executed for the partition
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compactions_total

prometheus_tsdb_compactions_triggered_total:
  brief: Total number of triggered compactions for the partition
  custom: true
  description: Total number of triggered compactions for the partition
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_compactions_triggered_total

prometheus_tsdb_head_active_appenders:
  brief: Number of currently active appender transactions
  custom: true
  description: Number of currently active appender transactions
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_active_appenders

prometheus_tsdb_head_chunks:
  brief: Total number of chunks in the head block
  custom: true
  description: Total number of chunks in the head block
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_chunks

prometheus_tsdb_head_chunks_created_total:
  brief: Total number of chunks created in the head
  custom: true
  description: Total number of chunks created in the head
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_chunks_created_total

prometheus_tsdb_head_chunks_removed_total:
  brief: Total number of chunks removed in the head
  custom: true
  description: Total number of chunks removed in the head
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_chunks_removed_total

prometheus_tsdb_head_gc_duration_seconds:
  brief: Runtime of garbage collection in the head block
  custom: true
  description: Runtime of garbage collection in the head block
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_gc_duration_seconds

prometheus_tsdb_head_gc_duration_seconds_count:
  brief: Runtime of garbage collection in the head block (count)
  custom: true
  description: Runtime of garbage collection in the head block (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_gc_duration_seconds_count

prometheus_tsdb_head_max_time:
  brief: Maximum timestamp of the head block
  custom: true
  description: Maximum timestamp of the head block
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_max_time

prometheus_tsdb_head_min_time:
  brief: Minimum time bound of the head block
  custom: true
  description: Minimum time bound of the head block
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_min_time

prometheus_tsdb_head_samples_appended_total:
  brief: Total number of appended samples
  custom: true
  description: Total number of appended samples
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_samples_appended_total

prometheus_tsdb_head_series:
  brief: Total number of series in the head block
  custom: true
  description: Total number of series in the head block
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_series

prometheus_tsdb_head_series_created_total:
  brief: Total number of series created in the head
  custom: true
  description: Total number of series created in the head
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_series_created_total

prometheus_tsdb_head_series_not_found_total:
  brief: Total number of requests for series that were not found
  custom: true
  description: Total number of requests for series that were not found
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_series_not_found_total

prometheus_tsdb_head_series_removed_total:
  brief: Total number of series removed in the head
  custom: true
  description: Total number of series removed in the head
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_series_removed_total

prometheus_tsdb_head_truncations_failed_total:
  brief: Total number of head truncations that failed
  custom: true
  description: Total number of head truncations that failed
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_truncations_failed_total

prometheus_tsdb_head_truncations_total:
  brief: Total number of head truncations attempted
  custom: true
  description: Total number of head truncations attempted
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_head_truncations_total

prometheus_tsdb_lowest_timestamp:
  brief: Lowest timestamp value stored in the database
  custom: true
  description: Lowest timestamp value stored in the database
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_lowest_timestamp

prometheus_tsdb_reloads_failures_total:
  brief: Number of times the database failed to reload block data from disk
  custom: true
  description: Number of times the database failed to reload block data from disk
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_reloads_failures_total

prometheus_tsdb_reloads_total:
  brief: Number of times the database reloaded block data from disk
  custom: true
  description: Number of times the database reloaded block data from disk
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_reloads_total

prometheus_tsdb_retention_cutoffs_failures_total:
  brief: Number of times the database failed to cut off block data from disk
  custom: true
  description: Number of times the database failed to cut off block data from disk
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_retention_cutoffs_failures_total

prometheus_tsdb_retention_cutoffs_total:
  brief: Number of times the database cut off block data from disk
  custom: true
  description: Number of times the database cut off block data from disk
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_retention_cutoffs_total

prometheus_tsdb_symbol_table_size_bytes:
  brief: Size of symbol table on disk (in bytes)
  custom: true
  description: Size of symbol table on disk (in bytes)
  metric_type: gauge
  monitor: prometheus/prometheus
  title: prometheus_tsdb_symbol_table_size_bytes

prometheus_tsdb_tombstone_cleanup_seconds:
  brief: The time taken to recompact blocks to remove tombstones
  custom: true
  description: The time taken to recompact blocks to remove tombstones
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_tombstone_cleanup_seconds

prometheus_tsdb_tombstone_cleanup_seconds_bucket:
  brief: The time taken to recompact blocks to remove tombstones in the respective
    bucket
  custom: true
  description: The time taken to recompact blocks to remove tombstones in the respective
    bucket
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_tombstone_cleanup_seconds_bucket

prometheus_tsdb_tombstone_cleanup_seconds_count:
  brief: The time taken to recompact blocks to remove tombstones (count)
  custom: true
  description: The time taken to recompact blocks to remove tombstones (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_tombstone_cleanup_seconds_count

prometheus_tsdb_wal_completed_pages_total:
  brief: Total number of completed pages
  custom: true
  description: Total number of completed pages
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_completed_pages_total

prometheus_tsdb_wal_fsync_duration_seconds:
  brief: Duration of WAL fsync
  custom: true
  description: Duration of WAL fsync
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_fsync_duration_seconds

prometheus_tsdb_wal_fsync_duration_seconds_count:
  brief: Duration of WAL fsync (count)
  custom: true
  description: Duration of WAL fsync (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_fsync_duration_seconds_count

prometheus_tsdb_wal_page_flushes_total:
  brief: Total number of page flushes
  custom: true
  description: Total number of page flushes
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_page_flushes_total

prometheus_tsdb_wal_truncate_duration_seconds:
  brief: Duration of WAL truncation
  custom: true
  description: Duration of WAL truncation
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_truncate_duration_seconds

prometheus_tsdb_wal_truncate_duration_seconds_count:
  brief: Duration of WAL truncation (count)
  custom: true
  description: Duration of WAL truncation (count)
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_truncate_duration_seconds_count

prometheus_tsdb_wal_truncations_failed_total:
  brief: Total number of WAL truncations that failed
  custom: true
  description: Total number of WAL truncations that failed
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_truncations_failed_total

prometheus_tsdb_wal_truncations_total:
  brief: Total number of WAL truncations attempted
  custom: true
  description: Total number of WAL truncations attempted
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: prometheus_tsdb_wal_truncations_total

promhttp_metric_handler_requests_in_flight:
  brief: Current number of scrapes being served
  custom: true
  description: Current number of scrapes being served
  metric_type: gauge
  monitor: prometheus/prometheus
  title: promhttp_metric_handler_requests_in_flight

promhttp_metric_handler_requests_total:
  brief: Total number of scrapes by HTTP status code
  custom: true
  description: Total number of scrapes by HTTP status code
  metric_type: cumulative
  monitor: prometheus/prometheus
  title: promhttp_metric_handler_requests_total


redis_aof_current_rewrite_duration_sec:
  brief: aof_current_rewrite_duration_sec metric
  custom: true
  description: aof_current_rewrite_duration_sec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_aof_current_rewrite_duration_sec

redis_aof_enabled:
  brief: aof_enabled metric
  custom: true
  description: aof_enabled metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_aof_enabled

redis_aof_last_rewrite_duration_sec:
  brief: aof_last_rewrite_duration_sec metric
  custom: true
  description: aof_last_rewrite_duration_sec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_aof_last_rewrite_duration_sec

redis_aof_rewrite_in_progress:
  brief: aof_rewrite_in_progress metric
  custom: true
  description: aof_rewrite_in_progress metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_aof_rewrite_in_progress

redis_aof_rewrite_scheduled:
  brief: aof_rewrite_scheduled metric
  custom: true
  description: aof_rewrite_scheduled metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_aof_rewrite_scheduled

redis_blocked_clients:
  brief: blocked_clients metric
  custom: true
  description: blocked_clients metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_blocked_clients

redis_client_biggest_input_buf:
  brief: client_biggest_input_buf metric
  custom: true
  description: client_biggest_input_buf metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_client_biggest_input_buf

redis_client_longest_output_list:
  brief: client_longest_output_list metric
  custom: true
  description: client_longest_output_list metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_client_longest_output_list

redis_cluster_enabled:
  brief: cluster_enabled metric
  custom: true
  description: cluster_enabled metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_cluster_enabled

redis_command_call_duration_seconds_count:
  brief: command_call_duration_seconds_count metric
  custom: true
  description: command_call_duration_seconds_count metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_command_call_duration_seconds_count

redis_command_call_duration_seconds_sum:
  brief: Total amount of time in seconds spent per command
  custom: true
  description: Total amount of time in seconds spent per command
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_command_call_duration_seconds_sum

redis_commands_processed_total:
  brief: commands_processed_total metric
  custom: true
  description: commands_processed_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_commands_processed_total

redis_config_maxclients:
  brief: config_maxclients metric
  custom: true
  description: config_maxclients metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_config_maxclients

redis_config_maxmemory:
  brief: config_maxmemory metric
  custom: true
  description: config_maxmemory metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_config_maxmemory

redis_connected_clients:
  brief: connected_clients metric
  custom: true
  description: connected_clients metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_connected_clients

redis_connected_slaves:
  brief: connected_slaves metric
  custom: true
  description: connected_slaves metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_connected_slaves

redis_connections_received_total:
  brief: connections_received_total metric
  custom: true
  description: connections_received_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_connections_received_total

redis_db_avg_ttl_seconds:
  brief: Avg TTL in seconds
  custom: true
  description: Avg TTL in seconds
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_db_avg_ttl_seconds

redis_db_keys:
  brief: Total number of keys by DB
  custom: true
  description: Total number of keys by DB
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_db_keys

redis_db_keys_expiring:
  brief: Total number of expiring keys by DB
  custom: true
  description: Total number of expiring keys by DB
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_db_keys_expiring

redis_evicted_keys_total:
  brief: evicted_keys_total metric
  custom: true
  description: evicted_keys_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_evicted_keys_total

redis_expired_keys_total:
  brief: expired_keys_total metric
  custom: true
  description: expired_keys_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_expired_keys_total

redis_exporter_build_info:
  brief: redis exporter build_info
  custom: true
  description: redis exporter build_info
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_exporter_build_info

redis_exporter_last_scrape_duration_seconds:
  brief: The last scrape duration
  custom: true
  description: The last scrape duration
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_exporter_last_scrape_duration_seconds

redis_exporter_last_scrape_error:
  brief: The last scrape error status
  custom: true
  description: The last scrape error status
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_exporter_last_scrape_error

redis_exporter_scrapes_total:
  brief: Current total redis scrapes
  custom: true
  description: Current total redis scrapes
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_exporter_scrapes_total

redis_instance_info:
  brief: Information about the Redis instance
  custom: true
  description: Information about the Redis instance
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_instance_info

redis_instantaneous_input_kbps:
  brief: instantaneous_input_kbps metric
  custom: true
  description: instantaneous_input_kbps metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_instantaneous_input_kbps

redis_instantaneous_ops_per_sec:
  brief: instantaneous_ops_per_sec metric
  custom: true
  description: instantaneous_ops_per_sec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_instantaneous_ops_per_sec

redis_instantaneous_output_kbps:
  brief: instantaneous_output_kbps metric
  custom: true
  description: instantaneous_output_kbps metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_instantaneous_output_kbps

redis_keyspace_hits_total:
  brief: keyspace_hits_total metric
  custom: true
  description: keyspace_hits_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_keyspace_hits_total

redis_keyspace_misses_total:
  brief: keyspace_misses_total metric
  custom: true
  description: keyspace_misses_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_keyspace_misses_total

redis_latest_fork_usec:
  brief: latest_fork_usec metric
  custom: true
  description: latest_fork_usec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_latest_fork_usec

redis_loading_dump_file:
  brief: loading_dump_file metric
  custom: true
  description: loading_dump_file metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_loading_dump_file

redis_master_repl_offset:
  brief: master_repl_offset metric
  custom: true
  description: master_repl_offset metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_master_repl_offset

redis_memory_fragmentation_ratio:
  brief: memory_fragmentation_ratio metric
  custom: true
  description: memory_fragmentation_ratio metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_fragmentation_ratio

redis_memory_max_bytes:
  brief: memory_max_bytes metric
  custom: true
  description: memory_max_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_max_bytes

redis_memory_used_bytes:
  brief: memory_used_bytes metric
  custom: true
  description: memory_used_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_used_bytes

redis_memory_used_lua_bytes:
  brief: memory_used_lua_bytes metric
  custom: true
  description: memory_used_lua_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_used_lua_bytes

redis_memory_used_peak_bytes:
  brief: memory_used_peak_bytes metric
  custom: true
  description: memory_used_peak_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_used_peak_bytes

redis_memory_used_rss_bytes:
  brief: memory_used_rss_bytes metric
  custom: true
  description: memory_used_rss_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_memory_used_rss_bytes

redis_net_input_bytes_total:
  brief: net_input_bytes_total metric
  custom: true
  description: net_input_bytes_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_net_input_bytes_total

redis_net_output_bytes_total:
  brief: net_output_bytes_total metric
  custom: true
  description: net_output_bytes_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_net_output_bytes_total

redis_process_id:
  brief: process_id metric
  custom: true
  description: process_id metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_process_id

redis_pubsub_channels:
  brief: pubsub_channels metric
  custom: true
  description: pubsub_channels metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_pubsub_channels

redis_pubsub_patterns:
  brief: pubsub_patterns metric
  custom: true
  description: pubsub_patterns metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_pubsub_patterns

redis_rdb_changes_since_last_save:
  brief: rdb_changes_since_last_save metric
  custom: true
  description: rdb_changes_since_last_save metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_rdb_changes_since_last_save

redis_rdb_current_bgsave_duration_sec:
  brief: rdb_current_bgsave_duration_sec metric
  custom: true
  description: rdb_current_bgsave_duration_sec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_rdb_current_bgsave_duration_sec

redis_rdb_last_bgsave_duration_sec:
  brief: rdb_last_bgsave_duration_sec metric
  custom: true
  description: rdb_last_bgsave_duration_sec metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_rdb_last_bgsave_duration_sec

redis_rejected_connections_total:
  brief: rejected_connections_total metric
  custom: true
  description: rejected_connections_total metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_rejected_connections_total

redis_replication_backlog_bytes:
  brief: replication_backlog_bytes metric
  custom: true
  description: replication_backlog_bytes metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_replication_backlog_bytes

redis_slowlog_length:
  brief: Total slowlog
  custom: true
  description: Total slowlog
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_slowlog_length

redis_start_time_seconds:
  brief: Start time of the Redis instance since unix epoch in seconds
  custom: true
  description: Start time of the Redis instance since unix epoch in seconds
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_start_time_seconds

redis_up:
  brief: up metric
  custom: true
  description: up metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_up

redis_uptime_in_seconds:
  brief: uptime_in_seconds metric
  custom: true
  description: uptime_in_seconds metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_uptime_in_seconds

redis_used_cpu_sys:
  brief: used_cpu_sys metric
  custom: true
  description: used_cpu_sys metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_used_cpu_sys

redis_used_cpu_sys_children:
  brief: used_cpu_sys_children metric
  custom: true
  description: used_cpu_sys_children metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_used_cpu_sys_children

redis_used_cpu_user:
  brief: used_cpu_user metric
  custom: true
  description: used_cpu_user metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_used_cpu_user

redis_used_cpu_user_children:
  brief: used_cpu_user_children metric
  custom: true
  description: used_cpu_user_children metric
  metric_type: gauge
  monitor: prometheus/redis
  title: redis_used_cpu_user_children


velero_backup_deletion_failure_total:
  brief: Total number of failed backup deletions
  custom: false
  description: Total number of failed backup deletions.
  metric_type: cumulative
  monitor: prometheus/velero
  title: velero_backup_deletion_failure_total

velero_backup_failure_total:
  brief: Total number of failed backups
  custom: false
  description: Total number of failed backups.
  metric_type: cumulative
  monitor: prometheus/velero
  title: velero_backup_failure_total

velero_backup_partial_failure_total:
  brief: Total number of partially failed backups
  custom: false
  description: Total number of partially failed backups.
  metric_type: cumulative
  monitor: prometheus/velero
  title: velero_backup_partial_failure_total

velero_backup_success_total:
  brief: Total number of successful backups
  custom: false
  description: Total number of successful backups.
  metric_type: cumulative
  monitor: prometheus/velero
  title: velero_backup_success_total

velero_volume_snapshot_failure_total:
  brief: Total number of failed volume snapshots
  custom: false
  description: Total number of failed volume snapshots.
  metric_type: cumulative
  monitor: prometheus/velero
  title: velero_volume_snapshot_failure_total


supervisor.state:
  brief: State code, see [Supervisor process states](http://supervisord.org/subprocess.html#process-states)
  custom: false
  description: State code, see [Supervisor process states](http://supervisord.org/subprocess.html#process-states).
  metric_type: gauge
  monitor: supervisor
  title: supervisor.state


dns.query_time_ms:
  brief: Reponse time of the query in ms
  custom: false
  description: Reponse time of the query in ms.
  metric_type: gauge
  monitor: telegraf/dns
  title: dns.query_time_ms

dns.rcode_value:
  brief: Error code
  custom: false
  description: Error code. See [this tab](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/dns_query#rcode-descriptions)
    for detailled descriptions.
  metric_type: gauge
  monitor: telegraf/dns
  title: dns.rcode_value

dns.result_code:
  brief: Resolution result code (success = 0, timeout = 1, error = 2)
  custom: false
  description: Resolution result code (success = 0, timeout = 1, error = 2).
  metric_type: gauge
  monitor: telegraf/dns
  title: dns.result_code


ntpq.delay:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.delay

ntpq.jitter:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.jitter

ntpq.offset:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.offset

ntpq.poll:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.poll

ntpq.reach:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.reach

ntpq.when:
  brief: ''
  custom: false
  description: ''
  metric_type: gauge
  monitor: telegraf/ntpq
  title: ntpq.when


procstat.cpu_time:
  brief: Amount of cpu time consumed by the process
  custom: true
  description: Amount of cpu time consumed by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.cpu_time

procstat.cpu_usage:
  brief: CPU used by the process
  custom: true
  description: CPU used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.cpu_usage

procstat.involuntary_context_switches:
  brief: Number of involuntary context switches
  custom: true
  description: Number of involuntary context switches.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.involuntary_context_switches

procstat.memory_data:
  brief: VMData memory used by the process
  custom: true
  description: VMData memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_data

procstat.memory_locked:
  brief: VMLocked memory used by the process
  custom: true
  description: VMLocked memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_locked

procstat.memory_rss:
  brief: VMRSS memory used by the process
  custom: true
  description: VMRSS memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_rss

procstat.memory_stack:
  brief: VMStack memory used by the process
  custom: true
  description: VMStack memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_stack

procstat.memory_swap:
  brief: VMSwap memory used by the process
  custom: true
  description: VMSwap memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_swap

procstat.memory_vms:
  brief: VMS memory used by the process
  custom: true
  description: VMS memory used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.memory_vms

procstat.nice_priority:
  brief: Nice priority number of the process
  custom: true
  description: Nice priority number of the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.nice_priority

procstat.num_fds:
  brief: Number of file descriptors
  custom: true
  description: Number of file descriptors.  This may require the agent to be running
    as root.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.num_fds

procstat.num_threads:
  brief: Number of threads used by the process
  custom: true
  description: Number of threads used by the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.num_threads

procstat.read_bytes:
  brief: Number of bytes read by the process
  custom: true
  description: Number of bytes read by the process.  This may require the agent to
    be running as root.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.read_bytes

procstat.read_count:
  brief: Number of read operations by the process
  custom: true
  description: Number of read operations by the process.  This may require the agent
    to be running as root.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.read_count

procstat.realtime_priority:
  brief: Real time priority of the process
  custom: true
  description: Real time priority of the process.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.realtime_priority

procstat.rlimit_cpu_time_hard:
  brief: The hard cpu rlimit
  custom: true
  description: The hard cpu rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_cpu_time_hard

procstat.rlimit_cpu_time_soft:
  brief: The soft cpu rlimit
  custom: true
  description: The soft cpu rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_cpu_time_soft

procstat.rlimit_file_locks_hard:
  brief: The hard file lock rlimit
  custom: true
  description: The hard file lock rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_file_locks_hard

procstat.rlimit_file_locks_soft:
  brief: The soft file lock rlimit
  custom: true
  description: The soft file lock rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_file_locks_soft

procstat.rlimit_memory_data_hard:
  brief: The hard data memory rlimit
  custom: true
  description: The hard data memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_data_hard

procstat.rlimit_memory_data_soft:
  brief: The soft data memory rlimit
  custom: true
  description: The soft data memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_data_soft

procstat.rlimit_memory_locked_hard:
  brief: The hard locked memory rlimit
  custom: true
  description: The hard locked memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_locked_hard

procstat.rlimit_memory_locked_soft:
  brief: The soft locked memory rlimit
  custom: true
  description: The soft locked memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_locked_soft

procstat.rlimit_memory_rss_hard:
  brief: The hard rss memory rlimit
  custom: true
  description: The hard rss memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_rss_hard

procstat.rlimit_memory_rss_soft:
  brief: The soft rss memory rlimit
  custom: true
  description: The soft rss memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_rss_soft

procstat.rlimit_memory_stack_hard:
  brief: The hard stack memory rlimit
  custom: true
  description: The hard stack memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_stack_hard

procstat.rlimit_memory_stack_soft:
  brief: The soft stack memory rlimit
  custom: true
  description: The soft stack memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_stack_soft

procstat.rlimit_memory_vms_hard:
  brief: The hard vms memory rlimit
  custom: true
  description: The hard vms memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_vms_hard

procstat.rlimit_memory_vms_soft:
  brief: The soft vms memory rlimit
  custom: true
  description: The soft vms memory rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_memory_vms_soft

procstat.rlimit_nice_priority_hard:
  brief: The hard nice priority rlimit
  custom: true
  description: The hard nice priority rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_nice_priority_hard

procstat.rlimit_nice_priority_soft:
  brief: The soft nice priority rlimit
  custom: true
  description: The soft nice priority rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_nice_priority_soft

procstat.rlimit_num_fds_hard:
  brief: The hard file descriptor rlimit
  custom: true
  description: The hard file descriptor rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_num_fds_hard

procstat.rlimit_num_fds_soft:
  brief: The soft file descriptor rlimit
  custom: true
  description: The soft file descriptor rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_num_fds_soft

procstat.rlimit_realtime_priority_hard:
  brief: The hard realtime priority rlimit
  custom: true
  description: The hard realtime priority rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_realtime_priority_hard

procstat.rlimit_realtime_priority_soft:
  brief: The soft realtime priority rlimit
  custom: true
  description: The soft realtime priority rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_realtime_priority_soft

procstat.rlimit_signals_pending_hard:
  brief: The hard pending signal rlimit
  custom: true
  description: The hard pending signal rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_signals_pending_hard

procstat.rlimit_signals_pending_soft:
  brief: The soft pendidng signal rlimit
  custom: true
  description: The soft pendidng signal rlimit.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.rlimit_signals_pending_soft

procstat.signals_pending:
  brief: The number of signals pending
  custom: true
  description: The number of signals pending.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.signals_pending

procstat.write_bytes:
  brief: Number of bytes written by the process
  custom: true
  description: Number of bytes written by the process.  This may require the agent
    to be running as root.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.write_bytes

procstat.write_count:
  brief: Number of write operations by the process
  custom: true
  description: Number of write operations by the process.  This may require the agent
    to be running as root.
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat.write_count

procstat_lookup.pid_count:
  brief: The number of pids
  custom: true
  description: The number of pids. This metric emits with the plugin dimension set
    to "procstat_lookup".
  metric_type: gauge
  monitor: telegraf/procstat
  title: procstat_lookup.pid_count


sqlserver_database_io.read_bytes:
  brief: Bytes read by the database
  custom: false
  description: Bytes read by the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.read_bytes

sqlserver_database_io.read_latency_ms:
  brief: Latency in milliseconds reading from the database
  custom: false
  description: Latency in milliseconds reading from the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.read_latency_ms

sqlserver_database_io.reads:
  brief: Number of reads from the database
  custom: false
  description: Number of reads from the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.reads

sqlserver_database_io.write_bytes:
  brief: Bytes written to the database
  custom: false
  description: Bytes written to the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.write_bytes

sqlserver_database_io.write_latency_ms:
  brief: Latency in milliseconds writing to the database
  custom: false
  description: Latency in milliseconds writing to the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.write_latency_ms

sqlserver_database_io.writes:
  brief: Number of writes to the database
  custom: false
  description: Number of writes to the database.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_database_io.writes

sqlserver_memory_clerks.size_kb.bound_trees:
  brief: Size in KB of bound trees memory clerk
  custom: true
  description: Size in KB of bound trees memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.bound_trees

sqlserver_memory_clerks.size_kb.buffer_pool:
  brief: Size in KB of buffer pool memory clerk
  custom: true
  description: Size in KB of buffer pool memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.buffer_pool

sqlserver_memory_clerks.size_kb.connection_pool:
  brief: Size in KB of connection pool memory clerk
  custom: true
  description: Size in KB of connection pool memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.connection_pool

sqlserver_memory_clerks.size_kb.general:
  brief: Size in KB of general memory clerk
  custom: true
  description: Size in KB of general memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.general

sqlserver_memory_clerks.size_kb.in-memory_oltp:
  brief: Size in KB of in in-memoory oltp memory clerk
  custom: true
  description: Size in KB of in in-memoory oltp memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.in-memory_oltp

sqlserver_memory_clerks.size_kb.log_pool:
  brief: Size in KB of log pool memory clerk
  custom: true
  description: Size in KB of log pool memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.log_pool

sqlserver_memory_clerks.size_kb.memoryclerk_sqltrace:
  brief: Size in KB of sql trace memory clerk
  custom: true
  description: Size in KB of sql trace memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.memoryclerk_sqltrace

sqlserver_memory_clerks.size_kb.schema_manager_user_store:
  brief: Size in KB of user store schema manager memory clerk
  custom: true
  description: Size in KB of user store schema manager memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.schema_manager_user_store

sqlserver_memory_clerks.size_kb.sos_node:
  brief: Size in KB of sos node memory clerk
  custom: true
  description: Size in KB of sos node memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.sos_node

sqlserver_memory_clerks.size_kb.sql_optimizer:
  brief: Size in KB of SQL optimizer memory clerk
  custom: true
  description: Size in KB of SQL optimizer memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.sql_optimizer

sqlserver_memory_clerks.size_kb.sql_plans:
  brief: Size in KB of sql plans memory clerk
  custom: true
  description: Size in KB of sql plans memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.sql_plans

sqlserver_memory_clerks.size_kb.sql_reservations:
  brief: Size in KB of sql reservations memory clerk
  custom: true
  description: Size in KB of sql reservations memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.sql_reservations

sqlserver_memory_clerks.size_kb.sql_storage_engine:
  brief: Size in KB of sql storage engine memory clerk
  custom: true
  description: Size in KB of sql storage engine memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.sql_storage_engine

sqlserver_memory_clerks.size_kb.system_rowset_store:
  brief: Size in KB of system rowset store memory clerk
  custom: true
  description: Size in KB of system rowset store memory clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_memory_clerks.size_kb.system_rowset_store

sqlserver_performance.active_memory_grant_amount_kb:
  brief: Amount of active memory in KB granted
  custom: true
  description: Amount of active memory in KB granted.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.active_memory_grant_amount_kb

sqlserver_performance.active_temp_tables:
  brief: Number of active temporary tables
  custom: true
  description: Number of active temporary tables.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.active_temp_tables

sqlserver_performance.background_writer_pages_sec:
  brief: Rate per second of pages written in the background
  custom: true
  description: Rate per second of pages written in the background.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.background_writer_pages_sec

sqlserver_performance.backup_restore_throughput_sec:
  brief: Rate per second of backup/restore throughput
  custom: true
  description: Rate per second of backup/restore throughput.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.backup_restore_throughput_sec

sqlserver_performance.batch_requests_sec:
  brief: Rate per second of batch requests
  custom: false
  description: Rate per second of batch requests.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.batch_requests_sec

sqlserver_performance.blocked_tasks:
  brief: Number of blocked tasks
  custom: true
  description: Number of blocked tasks.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.blocked_tasks

sqlserver_performance.buffer_cache_hit_ratio:
  brief: Buffer cache hit ration
  custom: false
  description: Buffer cache hit ration.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.buffer_cache_hit_ratio

sqlserver_performance.bytes_received_from_replica_sec:
  brief: Rate per second of bytes received from replicas
  custom: true
  description: Rate per second of bytes received from replicas.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.bytes_received_from_replica_sec

sqlserver_performance.bytes_sent_to_replica_sec:
  brief: Rate per second of bytes sent to replicas
  custom: true
  description: Rate per second of bytes sent to replicas.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.bytes_sent_to_replica_sec

sqlserver_performance.bytes_sent_to_transport_sec:
  brief: Rate per second of bytes sent to transports
  custom: true
  description: Rate per second of bytes sent to transports.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.bytes_sent_to_transport_sec

sqlserver_performance.checkpoint_pages_sec:
  brief: Rate per second of checkpoint pages
  custom: true
  description: Rate per second of checkpoint pages.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.checkpoint_pages_sec

sqlserver_performance.cpu_limit_violation_count:
  brief: Number of cpu limit violations
  custom: true
  description: Number of cpu limit violations.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.cpu_limit_violation_count

sqlserver_performance.cpu_usage_pct:
  brief: CPU usage percentage
  custom: true
  description: CPU usage percentage.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.cpu_usage_pct

sqlserver_performance.cpu_usage_time:
  brief: CPU usage time
  custom: true
  description: CPU usage time.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.cpu_usage_time

sqlserver_performance.data_file_size_kb:
  brief: Size in KB of data files
  custom: true
  description: Size in KB of data files.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.data_file_size_kb

sqlserver_performance.disk_read_bytes_sec:
  brief: Rate per second of bytes from disk
  custom: true
  description: Rate per second of bytes from disk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_read_bytes_sec

sqlserver_performance.disk_read_io_sec:
  brief: Rate per second of read operations from disk
  custom: true
  description: Rate per second of read operations from disk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_read_io_sec

sqlserver_performance.disk_read_io_throttled_sec:
  brief: Rate per second of throttled read operations
  custom: false
  description: Rate per second of throttled read operations.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_read_io_throttled_sec

sqlserver_performance.disk_write_bytes_sec:
  brief: Rate per second of bytes written to disk
  custom: true
  description: Rate per second of bytes written to disk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_write_bytes_sec

sqlserver_performance.disk_write_io_sec:
  brief: Rate per second of write operations to disk
  custom: true
  description: Rate per second of write operations to disk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_write_io_sec

sqlserver_performance.disk_write_io_throttled_sec:
  brief: Rate per second of write operations throttled
  custom: false
  description: Rate per second of write operations throttled.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.disk_write_io_throttled_sec

sqlserver_performance.errors_sec:
  brief: Rate of errors per second
  custom: true
  description: Rate of errors per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.errors_sec

sqlserver_performance.flow_control_sec:
  brief: Rate per second of flow control
  custom: true
  description: Rate per second of flow control.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.flow_control_sec

sqlserver_performance.flow_control_time_ms_sec:
  brief: Rate per second of ms of flow control time
  custom: true
  description: Rate per second of ms of flow control time.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.flow_control_time_ms_sec

sqlserver_performance.forwarded_records_sec:
  brief: Rate per second of record forwarding
  custom: true
  description: Rate per second of record forwarding.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.forwarded_records_sec

sqlserver_performance.free_list_stalls_sec:
  brief: Rate per second of stalled free list
  custom: true
  description: Rate per second of stalled free list.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.free_list_stalls_sec

sqlserver_performance.free_space_in_tempdb_kb:
  brief: Free space in KB of tempdb
  custom: true
  description: Free space in KB of tempdb.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.free_space_in_tempdb_kb

sqlserver_performance.full_scans_sec:
  brief: Rate per second of full scans
  custom: true
  description: Rate per second of full scans.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.full_scans_sec

sqlserver_performance.index_searches_sec:
  brief: Rate per second of index searches
  custom: true
  description: Rate per second of index searches.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.index_searches_sec

sqlserver_performance.latch_waits_sec:
  brief: Rate per second of latch waits
  custom: true
  description: Rate per second of latch waits.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.latch_waits_sec

sqlserver_performance.lazy_writes_sec:
  brief: Rate per second of lazy writes
  custom: true
  description: Rate per second of lazy writes.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.lazy_writes_sec

sqlserver_performance.lock_timeouts_sec:
  brief: Rate per second of lock timeouts
  custom: true
  description: Rate per second of lock timeouts.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.lock_timeouts_sec

sqlserver_performance.lock_wait_count:
  brief: Number of lock waits
  custom: false
  description: Number of lock waits.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.lock_wait_count

sqlserver_performance.lock_wait_time:
  brief: Lock wait time
  custom: true
  description: Lock wait time.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.lock_wait_time

sqlserver_performance.lock_waits_sec:
  brief: Rate per second of lock waits
  custom: true
  description: Rate per second of lock waits.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.lock_waits_sec

sqlserver_performance.log_apply_pending_queue:
  brief: Size of the log apply pending queue
  custom: true
  description: Size of the log apply pending queue.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_apply_pending_queue

sqlserver_performance.log_apply_ready_queue:
  brief: Size of log apply ready queue
  custom: true
  description: Size of log apply ready queue.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_apply_ready_queue

sqlserver_performance.log_bytes_flushed_sec:
  brief: Rate per second of log bytes flushed
  custom: true
  description: Rate per second of log bytes flushed.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_bytes_flushed_sec

sqlserver_performance.log_bytes_received_sec:
  brief: Rate per second of log bytes received
  custom: true
  description: Rate per second of log bytes received.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_bytes_received_sec

sqlserver_performance.log_file_size_kb:
  brief: Size in KB of log file
  custom: true
  description: Size in KB of log file.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_file_size_kb

sqlserver_performance.log_file_used_size_kb:
  brief: Size in KB of log file used
  custom: true
  description: Size in KB of log file used.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_file_used_size_kb

sqlserver_performance.log_flush_wait_time:
  brief: Time spent flushing the log
  custom: true
  description: Time spent flushing the log.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_flush_wait_time

sqlserver_performance.log_flushes_sec:
  brief: Rate per second of log flushes
  custom: true
  description: Rate per second of log flushes.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_flushes_sec

sqlserver_performance.log_send_queue:
  brief: Size of the log send queue
  custom: true
  description: Size of the log send queue.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.log_send_queue

sqlserver_performance.logins_sec:
  brief: Rate of logins per second
  custom: true
  description: Rate of logins per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.logins_sec

sqlserver_performance.logouts_sec:
  brief: Rate of logouts per second
  custom: true
  description: Rate of logouts per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.logouts_sec

sqlserver_performance.memory_broker_clerk_size:
  brief: Size of memory broker clerk
  custom: true
  description: Size of memory broker clerk.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.memory_broker_clerk_size

sqlserver_performance.memory_grants_outstanding:
  brief: Number of outstanding memory grants
  custom: true
  description: Number of outstanding memory grants.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.memory_grants_outstanding

sqlserver_performance.memory_grants_pending:
  brief: Number of pending memory grants
  custom: true
  description: Number of pending memory grants.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.memory_grants_pending

sqlserver_performance.number_of_deadlocks_sec:
  brief: Rate of deadlocks per second
  custom: true
  description: Rate of deadlocks per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.number_of_deadlocks_sec

sqlserver_performance.page_life_expectancy:
  brief: Page life expectancy
  custom: true
  description: Page life expectancy.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.page_life_expectancy

sqlserver_performance.page_lookups_sec:
  brief: Rate of page look ups per second
  custom: true
  description: Rate of page look ups per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.page_lookups_sec

sqlserver_performance.page_reads_sec:
  brief: Rate of page reads per second
  custom: true
  description: Rate of page reads per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.page_reads_sec

sqlserver_performance.page_splits_sec:
  brief: Rate of page splits per second
  custom: true
  description: Rate of page splits per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.page_splits_sec

sqlserver_performance.page_writes_sec:
  brief: Rate of page writes per second
  custom: true
  description: Rate of page writes per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.page_writes_sec

sqlserver_performance.pct_log_used:
  brief: Percentage of log used
  custom: true
  description: Percentage of log used.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.pct_log_used

sqlserver_performance.processes_blocked:
  brief: Number of blocked processes
  custom: false
  description: Number of blocked processes.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.processes_blocked

sqlserver_performance.query:
  brief: '[User settable](https://docs.microsoft.com/en-us/sql/relational-databases/performance-monitor/sql-server-user-settable-object?view=sql-server-2017)
    performance counters'
  custom: true
  description: '[User settable](https://docs.microsoft.com/en-us/sql/relational-databases/performance-monitor/sql-server-user-settable-object?view=sql-server-2017)
    performance counters'
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.query

sqlserver_performance.queued_request_count:
  brief: Number of queued requests
  custom: true
  description: Number of queued requests.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.queued_request_count

sqlserver_performance.queued_requests:
  brief: Average number of queued requests
  custom: true
  description: Average number of queued requests.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.queued_requests

sqlserver_performance.readahead_pages_sec:
  brief: Rate per second of read ahead pages
  custom: true
  description: Rate per second of read ahead pages.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.readahead_pages_sec

sqlserver_performance.receives_from_replica_sec:
  brief: Rate receives from replicas per second
  custom: true
  description: Rate receives from replicas per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.receives_from_replica_sec

sqlserver_performance.recovery_queue:
  brief: Size of recovery queue
  custom: true
  description: Size of recovery queue.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.recovery_queue

sqlserver_performance.redone_bytes_sec:
  brief: Rate of redone bytes per second
  custom: true
  description: Rate of redone bytes per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.redone_bytes_sec

sqlserver_performance.reduced_memory_grant_count:
  brief: Number of reduced memory grants
  custom: true
  description: Number of reduced memory grants.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.reduced_memory_grant_count

sqlserver_performance.request_count:
  brief: Number of requests
  custom: true
  description: Number of requests.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.request_count

sqlserver_performance.requests_completed_sec:
  brief: Rate of completed requests per second
  custom: true
  description: Rate of completed requests per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.requests_completed_sec

sqlserver_performance.resent_messages_sec:
  brief: Rate of resent messages per second
  custom: true
  description: Rate of resent messages per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.resent_messages_sec

sqlserver_performance.sends_to_replica_sec:
  brief: Rate of sends to replicas per second
  custom: true
  description: Rate of sends to replicas per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.sends_to_replica_sec

sqlserver_performance.sends_to_transport_sec:
  brief: Rate of sends to transports per second
  custom: true
  description: Rate of sends to transports per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.sends_to_transport_sec

sqlserver_performance.sql_compilations_sec:
  brief: Rate of sql compilations per second
  custom: false
  description: Rate of sql compilations per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.sql_compilations_sec

sqlserver_performance.sql_re-compilations_sec:
  brief: Rate of sql recompilations per sec
  custom: false
  description: Rate of sql recompilations per sec.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.sql_re-compilations_sec

sqlserver_performance.target_server_memory_kb:
  brief: Size of target server memory in KB
  custom: true
  description: Size of target server memory in KB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.target_server_memory_kb

sqlserver_performance.temp_tables_creation_rate:
  brief: Rate of temporary table creations
  custom: true
  description: Rate of temporary table creations.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.temp_tables_creation_rate

sqlserver_performance.temp_tables_for_destruction:
  brief: Number of temporary tables marked for destruction
  custom: true
  description: Number of temporary tables marked for destruction.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.temp_tables_for_destruction

sqlserver_performance.total_server_memory_kb:
  brief: Total server memory in KB
  custom: true
  description: Total server memory in KB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.total_server_memory_kb

sqlserver_performance.transaction_delay:
  brief: Number of delayed transactions
  custom: true
  description: Number of delayed transactions.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.transaction_delay

sqlserver_performance.transactions_sec:
  brief: Rate of transactions per second
  custom: true
  description: Rate of transactions per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.transactions_sec

sqlserver_performance.used_memory_kb:
  brief: Used memory in KB
  custom: true
  description: Used memory in KB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.used_memory_kb

sqlserver_performance.user_connections:
  brief: Number of user connections
  custom: false
  description: Number of user connections.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.user_connections

sqlserver_performance.version_store_size_kb:
  brief: Size of the version store in KB
  custom: true
  description: Size of the version store in KB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.version_store_size_kb

sqlserver_performance.write_transactions_sec:
  brief: Rate of write transactions per second
  custom: true
  description: Rate of write transactions per second.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.write_transactions_sec

sqlserver_performance.xtp_memory_used_kb:
  brief: Size of xtp memory used in KB
  custom: true
  description: Size of xtp memory used in KB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_performance.xtp_memory_used_kb

sqlserver_server_properties.available_storage_mb:
  brief: Available storage in MB
  custom: true
  description: Available storage in MB.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.available_storage_mb

sqlserver_server_properties.cpu_count:
  brief: Number of cpus
  custom: true
  description: Number of cpus.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.cpu_count

sqlserver_server_properties.db_offline:
  brief: Number of offline databases
  custom: false
  description: Number of offline databases.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_offline

sqlserver_server_properties.db_online:
  brief: Number of online databases
  custom: false
  description: Number of online databases.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_online

sqlserver_server_properties.db_recovering:
  brief: Number of databases recovering
  custom: false
  description: Number of databases recovering.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_recovering

sqlserver_server_properties.db_recoverypending:
  brief: Number of databases pending recovery
  custom: false
  description: Number of databases pending recovery.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_recoverypending

sqlserver_server_properties.db_restoring:
  brief: Number of databases restoring
  custom: false
  description: Number of databases restoring.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_restoring

sqlserver_server_properties.db_suspect:
  brief: Number of suspect databases
  custom: false
  description: Number of suspect databases.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.db_suspect

sqlserver_server_properties.engine_edition:
  brief: Sql server engine edition version
  custom: true
  description: Sql server engine edition version.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.engine_edition

sqlserver_server_properties.server_memory:
  brief: Amount of memory on the sql server
  custom: true
  description: Amount of memory on the sql server.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.server_memory

sqlserver_server_properties.total_storage_mb:
  brief: Amount of storage in MB of the sql server
  custom: true
  description: Amount of storage in MB of the sql server.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.total_storage_mb

sqlserver_server_properties.uptime:
  brief: Uptime of the sql server
  custom: true
  description: Uptime of the sql server.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_server_properties.uptime

sqlserver_waitstats.max_wait_time_ms:
  brief: Maximum time in millisecond spent waiting
  custom: true
  description: Maximum time in millisecond spent waiting.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_waitstats.max_wait_time_ms

sqlserver_waitstats.resource_wait_ms:
  brief: Time in milliseconds spent waiting on a resource
  custom: true
  description: Time in milliseconds spent waiting on a resource.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_waitstats.resource_wait_ms

sqlserver_waitstats.signal_wait_time_ms:
  brief: Time in milliseconds waiting on a signal
  custom: true
  description: Time in milliseconds waiting on a signal.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_waitstats.signal_wait_time_ms

sqlserver_waitstats.wait_time_ms:
  brief: Time in milliseconds waiting
  custom: true
  description: Time in milliseconds waiting.
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_waitstats.wait_time_ms

sqlserver_waitstats.waiting_tasks_count:
  brief: Time in milliseconds
  custom: true
  description: Time in milliseconds
  metric_type: gauge
  monitor: telegraf/sqlserver
  title: sqlserver_waitstats.waiting_tasks_count


varnish.backend_busy:
  brief: Maximum number of connections to a given backend
  custom: true
  description: Maximum number of connections to a given backend.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_busy

varnish.backend_conn:
  brief: Successful connections to a given backend
  custom: true
  description: Successful connections to a given backend.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_conn

varnish.backend_fail:
  brief: Failed connections for a given backend
  custom: false
  description: Failed connections for a given backend.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_fail

varnish.backend_recycle:
  brief: Backend connections with keep-alive that are returned to the pool of connections
  custom: true
  description: Backend connections with keep-alive that are returned to the pool of
    connections.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_recycle

varnish.backend_req:
  brief: Number of requests to the backend
  custom: false
  description: Number of requests to the backend.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_req

varnish.backend_reuse:
  brief: Recycled connections that has were reused
  custom: true
  description: Recycled connections that has were reused.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_reuse

varnish.backend_toolate:
  brief: Backend connections closed because they were idle too long
  custom: true
  description: Backend connections closed because they were idle too long.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_toolate

varnish.backend_unhealthy:
  brief: Backend connections not tried because the backend was unhealthy
  custom: false
  description: Backend connections not tried because the backend was unhealthy.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.backend_unhealthy

varnish.cache_hit:
  brief: Requests served from the cache
  custom: false
  description: Requests served from the cache.
  metric_type: cumulative
  monitor: telegraf/varnish
  title: varnish.cache_hit

varnish.cache_hitpass:
  brief: Requests passed to a backend where the decision to pass them found in the
    cache
  custom: true
  description: Requests passed to a backend where the decision to pass them found
    in the cache..
  metric_type: cumulative
  monitor: telegraf/varnish
  title: varnish.cache_hitpass

varnish.cache_miss:
  brief: Requests fetched from a backend server
  custom: false
  description: Requests fetched from a backend server.
  metric_type: cumulative
  monitor: telegraf/varnish
  title: varnish.cache_miss

varnish.client_req:
  brief: Good client requests
  custom: false
  description: Good client requests.
  metric_type: cumulative
  monitor: telegraf/varnish
  title: varnish.client_req

varnish.n_lru_nuked:
  brief: Objects forcefully evicted from the cache because of a lack of space
  custom: true
  description: Objects forcefully evicted from the cache because of a lack of space.
  metric_type: cumulative
  monitor: telegraf/varnish
  title: varnish.n_lru_nuked

varnish.sess_dropped:
  brief: Sessions dropped due to a full queue
  custom: false
  description: Sessions dropped due to a full queue.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.sess_dropped

varnish.sess_queued:
  brief: Client connections queued to wait for a thread
  custom: false
  description: Client connections queued to wait for a thread..
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.sess_queued

varnish.thread_queue_len:
  brief: Length of session queue waiting for threads
  custom: false
  description: Length of session queue waiting for threads.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.thread_queue_len

varnish.threads:
  brief: Number of threads in all pools
  custom: false
  description: Number of threads in all pools.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.threads

varnish.threads_created:
  brief: Number of times a thread has been created
  custom: false
  description: Number of times a thread has been created.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.threads_created

varnish.threads_failed:
  brief: Number of times that Varnish unsuccessfully tried to create a thread
  custom: false
  description: Number of times that Varnish unsuccessfully tried to create a thread.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.threads_failed

varnish.threads_limited:
  brief: Threads that were needed but couldn't be created because of a thread pool
    limit
  custom: false
  description: Threads that were needed but couldn't be created because of a thread
    pool limit.
  metric_type: gauge
  monitor: telegraf/varnish
  title: varnish.threads_limited


win_services.startup_mode:
  brief: The configured start up mode of the window windows service
  custom: true
  description: 'The configured start up mode of the window windows service.  Possible
    values are: `0` (Boot Start), `1` (System Start), `2` (Auto Start), `3` (Demand
    Start), `4` (disabled).'
  metric_type: gauge
  monitor: telegraf/win_services
  title: win_services.startup_mode

win_services.state:
  brief: The state of the windows service
  custom: true
  description: 'The state of the windows service.  Possible values are: `1` (Stopped),
    `2` (Start Pending), `3` (Stop Pending), `4` (Running), `5` (Continue Pending),
    `6` (Pause Pending), and `7` (Paused).'
  metric_type: gauge
  monitor: telegraf/win_services
  title: win_services.state


vmpage.swap.in_per_second:
  brief: (Windows Only)
  custom: true
  description: (Windows Only)
  metric_type: gauge
  monitor: vmem
  title: vmpage.swap.in_per_second

vmpage.swap.out_per_second:
  brief: (Windows Only)
  custom: true
  description: (Windows Only)
  metric_type: gauge
  monitor: vmem
  title: vmpage.swap.out_per_second

vmpage.swap.total.per_second:
  brief: (Windows Only)
  custom: true
  description: (Windows Only)
  metric_type: gauge
  monitor: vmem
  title: vmpage.swap.total.per_second

vmpage_faults.majflt:
  brief: (Linux Only) Number of major page faults on the system
  custom: true
  description: (Linux Only) Number of major page faults on the system
  metric_type: cumulative
  monitor: vmem
  title: vmpage_faults.majflt

vmpage_faults.minflt:
  brief: (Linux Only) Number of minor page faults on the system
  custom: true
  description: (Linux Only) Number of minor page faults on the system
  metric_type: cumulative
  monitor: vmem
  title: vmpage_faults.minflt

vmpage_io.memory.in:
  brief: (Linux Only) Page Ins for Memory
  custom: true
  description: (Linux Only) Page Ins for Memory
  metric_type: cumulative
  monitor: vmem
  title: vmpage_io.memory.in

vmpage_io.memory.out:
  brief: (Linux Only) Page Outs for Memory
  custom: true
  description: (Linux Only) Page Outs for Memory
  metric_type: cumulative
  monitor: vmem
  title: vmpage_io.memory.out

vmpage_io.swap.in:
  brief: (Linux Only) Page Ins for Swap
  custom: false
  description: (Linux Only) Page Ins for Swap
  metric_type: cumulative
  monitor: vmem
  title: vmpage_io.swap.in

vmpage_io.swap.out:
  brief: (Linux Only) Page Outs for Swap
  custom: false
  description: (Linux Only) Page Outs for Swap
  metric_type: cumulative
  monitor: vmem
  title: vmpage_io.swap.out

vmpage_number.free_pages:
  brief: (Linux Only) Number of free memory pages
  custom: true
  description: (Linux Only) Number of free memory pages
  metric_type: gauge
  monitor: vmem
  title: vmpage_number.free_pages

vmpage_number.mapped:
  brief: (Linux Only) Number of mapped pages
  custom: true
  description: (Linux Only) Number of mapped pages
  metric_type: gauge
  monitor: vmem
  title: vmpage_number.mapped

vmpage_number.shmem_pmdmapped:
  brief: (Linux Only) The amount of shared (shmem/tmpfs) memory backed by huge pages
  custom: true
  description: (Linux Only) The amount of shared (shmem/tmpfs) memory backed by huge
    pages
  metric_type: gauge
  monitor: vmem
  title: vmpage_number.shmem_pmdmapped


process.handle_count:
  brief: The total number of handles currently open by this process
  custom: true
  description: The total number of handles currently open by this process. This number
    is equal to the sum of the handles currently open by each thread in this process.
  metric_type: gauge
  monitor: windows-iis
  title: process.handle_count

process.id_process:
  brief: The unique identifier of this process
  custom: true
  description: The unique identifier of this process. ID Process numbers are reused,
    so they only identify a process for the lifetime of that process.
  metric_type: gauge
  monitor: windows-iis
  title: process.id_process

process.pct_processor_time:
  brief: The percentage of elapsed time that all process threads used the processor
    to execution instructions
  custom: true
  description: The percentage of elapsed time that all process threads used the processor
    to execution instructions. Code executed to handle some hardware interrupts and
    trap conditions are included in this count.
  metric_type: gauge
  monitor: windows-iis
  title: process.pct_processor_time

process.private_bytes:
  brief: The current size, in bytes, of memory that this process has allocated that
    cannot be shared with other processes
  custom: true
  description: The current size, in bytes, of memory that this process has allocated
    that cannot be shared with other processes.
  metric_type: gauge
  monitor: windows-iis
  title: process.private_bytes

process.thread_count:
  brief: The number of threads currently active in this process
  custom: true
  description: The number of threads currently active in this process. Every running
    process has at least one thread.
  metric_type: gauge
  monitor: windows-iis
  title: process.thread_count

process.virtual_bytes:
  brief: The current size, in bytes, of the virtual address space the process is using
  custom: true
  description: The current size, in bytes, of the virtual address space the process
    is using. Use of virtual address space does not necessarily imply corresponding
    use of either disk or main memory pages. Virtual space is finite, and the process
    can limit its ability to load libraries.
  metric_type: gauge
  monitor: windows-iis
  title: process.virtual_bytes

process.working_set:
  brief: The current size, in bytes, of the Working Set of this process
  custom: true
  description: The current size, in bytes, of the Working Set of this process. The
    Working Set is the set of memory pages touched recently by the threads in the
    process. If free memory in the computer is above a threshold, pages are left in
    the Working Set of a process even if they are not in use. When free memory falls
    below a threshold, pages are trimmed from Working Sets. If they are needed, they
    will then be soft-faulted back into the Working Set before leaving main memory.
  metric_type: gauge
  monitor: windows-iis
  title: process.working_set

web_service.anonymous_users_sec:
  brief: Rate at which users are making anonymous requests to the web service
  custom: false
  description: Rate at which users are making anonymous requests to the web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.anonymous_users_sec

web_service.bytes_received_sec:
  brief: Rate that data is received by web service
  custom: false
  description: Rate that data is received by web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.bytes_received_sec

web_service.bytes_sent_sec:
  brief: Rate that data is sent by web service
  custom: false
  description: Rate that data is sent by web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.bytes_sent_sec

web_service.connection_attempts_sec:
  brief: Rate that connections to web service are attempted Requests
  custom: false
  description: Rate that connections to web service are attempted Requests
  metric_type: gauge
  monitor: windows-iis
  title: web_service.connection_attempts_sec

web_service.current_connections:
  brief: Number of current connections to the web service
  custom: false
  description: Number of current connections to the web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.current_connections

web_service.files_received_sec:
  brief: Rate at which files are received by web service
  custom: false
  description: Rate at which files are received by web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.files_received_sec

web_service.files_sent_sec:
  brief: Rate at which files are sent by web service
  custom: false
  description: Rate at which files are sent by web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.files_sent_sec

web_service.get_requests_sec:
  brief: Rate of HTTP GET requests
  custom: false
  description: Rate of HTTP GET requests
  metric_type: gauge
  monitor: windows-iis
  title: web_service.get_requests_sec

web_service.isapi_extension_requests_sec:
  brief: Rate of ISAPI extension request processed simultaneously by the web service
  custom: true
  description: Rate of ISAPI extension request processed simultaneously by the web
    service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.isapi_extension_requests_sec

web_service.nonanonymous_users_sec:
  brief: Rate at which users are making nonanonymous requests to the web service
  custom: false
  description: Rate at which users are making nonanonymous requests to the web service
  metric_type: gauge
  monitor: windows-iis
  title: web_service.nonanonymous_users_sec

web_service.not_found_errors_sec:
  brief: Rate of 'Not Found' Errors
  custom: false
  description: Rate of 'Not Found' Errors
  metric_type: gauge
  monitor: windows-iis
  title: web_service.not_found_errors_sec

web_service.post_requests_sec:
  brief: Rate of HTTP POST requests
  custom: false
  description: Rate of HTTP POST requests
  metric_type: gauge
  monitor: windows-iis
  title: web_service.post_requests_sec

web_service.service_uptime:
  brief: Service uptime
  custom: true
  description: Service uptime
  metric_type: gauge
  monitor: windows-iis
  title: web_service.service_uptime

web_service.total_method_requests_sec:
  brief: Rate at which all HTTP requests are received
  custom: false
  description: Rate at which all HTTP requests are received
  metric_type: gauge
  monitor: windows-iis
  title: web_service.total_method_requests_sec


logicaldisk.disk_read_bytes_sec:
  brief: The number of bytes read from disk per second
  custom: true
  description: The number of bytes read from disk per second.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.disk_read_bytes_sec

logicaldisk.disk_reads_sec:
  brief: The number of read operations per second
  custom: false
  description: The number of read operations per second.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.disk_reads_sec

logicaldisk.disk_transfers_sec:
  brief: The number of transfers per second
  custom: true
  description: The number of transfers per second.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.disk_transfers_sec

logicaldisk.disk_write_bytes_sec:
  brief: The number of bytes written to disk per second
  custom: true
  description: The number of bytes written to disk per second.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.disk_write_bytes_sec

logicaldisk.disk_writes_sec:
  brief: The number of write operations per second
  custom: false
  description: The number of write operations per second.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.disk_writes_sec

logicaldisk.free_megabytes:
  brief: The number of available megabytes
  custom: false
  description: The number of available megabytes.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.free_megabytes

logicaldisk.pct_free_space:
  brief: The percentage of free disk space available
  custom: false
  description: The percentage of free disk space available.
  metric_type: gauge
  monitor: windows-legacy
  title: logicaldisk.pct_free_space

memory.available_mbytes:
  brief: Unused physical memory (not page file)
  custom: false
  description: Unused physical memory (not page file).
  metric_type: gauge
  monitor: windows-legacy
  title: memory.available_mbytes

memory.pages_input_sec:
  brief: Reads from hard disk per second to resolve hard pages
  custom: false
  description: Reads from hard disk per second to resolve hard pages.
  metric_type: gauge
  monitor: windows-legacy
  title: memory.pages_input_sec

network_interface.bytes_received_sec:
  brief: Bytes Received/sec is the rate at which bytes are received over each network
    adapter, including framing characters
  custom: false
  description: Bytes Received/sec is the rate at which bytes are received over each
    network adapter, including framing characters.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.bytes_received_sec

network_interface.bytes_sent_sec:
  brief: Bytes Sent/sec is the rate at which bytes are sent over each network adapter,
    including framing characters
  custom: false
  description: Bytes Sent/sec is the rate at which bytes are sent over each network
    adapter, including framing characters.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.bytes_sent_sec

network_interface.bytes_total_sec:
  brief: The number of bytes sent and received over a specific network adapter, including
    framing characters
  custom: false
  description: The number of bytes sent and received over a specific network adapter,
    including framing characters.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.bytes_total_sec

network_interface.current_bandwidth:
  brief: Current Bandwidth is an estimate of the current bandwidth of the network
    interface in bits per second (BPS)
  custom: true
  description: Current Bandwidth is an estimate of the current bandwidth of the network
    interface in bits per second (BPS).
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.current_bandwidth

network_interface.packets_outbound_discarded:
  brief: The number of outbound packets discarded
  custom: true
  description: The number of outbound packets discarded
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_outbound_discarded

network_interface.packets_outbound_errors:
  brief: The number of packets sent that encountered an error
  custom: false
  description: The number of packets sent that encountered an error.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_outbound_errors

network_interface.packets_received_discarded:
  brief: The number of received packets discarded
  custom: true
  description: The number of received packets discarded.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_received_discarded

network_interface.packets_received_errors:
  brief: The number of packets received that encountered an error
  custom: false
  description: The number of packets received that encountered an error.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_received_errors

network_interface.packets_received_sec:
  brief: Tracking the packets received over time can give you a good indication of
    the typical use of the system's network
  custom: true
  description: Tracking the packets received over time can give you a good indication
    of the typical use of the system's network.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_received_sec

network_interface.packets_sent_sec:
  brief: The number of packets sent per second
  custom: true
  description: The number of packets sent per second.
  metric_type: gauge
  monitor: windows-legacy
  title: network_interface.packets_sent_sec

paging_file.pct_usage:
  brief: Amount of Page File in use, which indicates the server is substituting disk
    space for memory
  custom: false
  description: Amount of Page File in use, which indicates the server is substituting
    disk space for memory.
  metric_type: gauge
  monitor: windows-legacy
  title: paging_file.pct_usage

paging_file.pct_usage_peak:
  brief: Highest %Usage metric since the last time the server was restarted
  custom: true
  description: Highest %Usage metric since the last time the server was restarted.
  metric_type: gauge
  monitor: windows-legacy
  title: paging_file.pct_usage_peak

physicaldisk.avg_disk_sec_read:
  brief: The average time, in milliseconds, of each read from disk
  custom: true
  description: The average time, in milliseconds, of each read from disk.
  metric_type: gauge
  monitor: windows-legacy
  title: physicaldisk.avg_disk_sec_read

physicaldisk.avg_disk_sec_transfer:
  brief: The average time in milliseconds spent transfering data on disk
  custom: true
  description: The average time in milliseconds spent transfering data on disk.
  metric_type: gauge
  monitor: windows-legacy
  title: physicaldisk.avg_disk_sec_transfer

physicaldisk.avg_disk_sec_write:
  brief: The average time, in milliseconds, of each write to disk
  custom: true
  description: The average time, in milliseconds, of each write to disk.
  metric_type: gauge
  monitor: windows-legacy
  title: physicaldisk.avg_disk_sec_write

processor.interrupts_sec:
  brief: Rate of processor interrupts per second
  custom: true
  description: Rate of processor interrupts per second.
  metric_type: gauge
  monitor: windows-legacy
  title: processor.interrupts_sec

processor.pct_privileged_time:
  brief: Percentage of elapsed time the processor spends on privileged tasks
  custom: true
  description: Percentage of elapsed time the processor spends on privileged tasks.
  metric_type: gauge
  monitor: windows-legacy
  title: processor.pct_privileged_time

processor.pct_processor_time:
  brief: Percentage of elapsed time the processor spends executing non-idle threads
  custom: false
  description: Percentage of elapsed time the processor spends executing non-idle
    threads.
  metric_type: gauge
  monitor: windows-legacy
  title: processor.pct_processor_time

processor.pct_user_time:
  brief: Percentage of elapsed time the processor spends executing user threads
  custom: true
  description: Percentage of elapsed time the processor spends executing user threads.
  metric_type: gauge
  monitor: windows-legacy
  title: processor.pct_user_time

system.context_switches_sec:
  brief: Number of execution contexts switched in the last second, where >6000 is
    poor, <3000 is good, and <1500 is excellent
  custom: true
  description: Number of execution contexts switched in the last second, where >6000
    is poor, <3000 is good, and <1500 is excellent.
  metric_type: gauge
  monitor: windows-legacy
  title: system.context_switches_sec

system.processor_queue_length:
  brief: Number of threads waiting for CPU cycles, where < 12 per CPU is good/fair,
    < 8 is better, < 4 is best
  custom: true
  description: Number of threads waiting for CPU cycles, where < 12 per CPU is good/fair,
    < 8 is better, < 4 is best
  metric_type: gauge
  monitor: windows-legacy
  title: system.processor_queue_length

system.system_calls_sec:
  brief: The number of system calls being serviced by the CPU per second
  custom: true
  description: The number of system calls being serviced by the CPU per second.
  metric_type: gauge
  monitor: windows-legacy
  title: system.system_calls_sec

