sf.org.apm.numSpansDroppedThrottle:
  brief: The number of spans Splunk APM dropped after you exceeded the allowed ingest volume.
  description: |
    The number of spans Splunk APM dropped after you exceeded the allowed ingest volume.
    Splunk APM drops spans it receives after the ingestion volume limit is reached.

      * Dimension(s): `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedThrottle

sf.org.apm.numSpansDroppedThrottleByToken:
  brief: The number of spans Splunk APM dropped for a specific access token
    after you exceeded the allowed ingest volume.
  description: |
    The number of spans Splunk APM received for a specific access token
    beyond the allowed ingest volume. Splunk APM drops spans it receives after
    the ingestion volume limit is reached.

      * Dimension(s): `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedThrottleByToken

sf.org.apm.grossSpansReceived:
  brief: The number of spans Splunk APM received before filtering and throttling.
  description: |
    The number of spans Splunk APM received before filtering or throttling.

      * Dimension(s): `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossSpansReceived

sf.org.apm.grossSpansReceivedByToken:
  brief: The number of spans Splunk APM received for a specific access token
    before filtering and throttling.
  description: |
    The number of spans Splunk APM received for a specific access token
    before filtering and throttling.

      * Dimension(s): `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossSpansReceivedByToken

sf.org.apm.numSpansReceived:
  brief: The number of spans Splunk APM received after filtering and throttling.
  description: |
    The number of spans Splunk APM received after filtering and throttling.

      * Dimension(s): `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansReceived

sf.org.apm.numSpansReceivedByToken:
  brief: The number of spans Splunk APM received for a specific access token
    after filtering and throttling.
  description: |
    The number of spans Splunk APM accepts for a specific access token
    after filtering and throttling.

      * Dimension(s): `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansReceivedByToken

sf.org.apm.grossSpanBytesReceived:
  brief: The number of bytes Splunk APM received from spans after decompression
    but before filtering and throttling.
  description: |
    The number of bytes Splunk APM receives from spans after
    decompression but before filtering and throttling.
  
      * Dimension(s): `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossSpanBytesReceived

sf.org.apm.grossSpanBytesReceivedByToken:
  brief: The number of bytes Splunk APM received for a specific access token
    from spans after decompression but before filtering and throttling.
  description: |
    The number of bytes Splunk APM receives for a specific access token
    from spans after decompression but before filtering and throttling.
  
      * Dimension(s):  `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossSpanBytesReceivedByToken

sf.org.apm.numSpanBytesReceived:
  brief: The number of bytes Splunk APM accepts for a span after decompression
    after filtering and throttling.
  description: |
    The number of bytes Splunk APM accepts for a span after
    decompression, filtering, and throttling.

      * Dimension(s): `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpanBytesReceived

sf.org.apm.numSpanBytesReceivedByToken:
  brief: The number of bytes Splunk APM accepts for a specific access token
    for a span after decompression after filtering and throttling.
  description: |
    The number of bytes Splunk APM accepts for a specific access token
    for a span after decompression, filtering, and throttling.

      * Dimension(s): `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpanBytesReceivedByToken

sf.org.apm.numAddSpansCalls:
  brief: The number of calls to the `/v2/trace` endpoint.
  description: |
    The number of calls to the `/v2/trace` endpoint.

      * Dimension(s): `orgId`
      * Data resolution:  1 second
  metric_type: counter
  title: sf.org.apm.numAddSpansCalls

sf.org.apm.numAddSpansCallsByToken:
  brief: The number of calls to the `/v2/trace` endpoint for a specific access token.
  description: |
    The number of calls to the `/v2/trace` endpoint for a specific access token.
  
      * Dimension(s):  `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numAddSpansCallsByToken

sf.org.apm.numTracesReceived:
  brief: The number of traces Splunk APM receives and processes.
  description: |
    The number of traces Splunk APM receives and processes.

      * Dimension(s):  `orgId`
      * Data resolution: 1 minute
  metric_type: counter
  title: sf.org.apm.numTracesReceived

sf.org.apm.numTroubleshootingMetricSets10s:
  brief: The cardinality of Troubleshooting MetricSets for each 10-second time window.
  description: |
    The cardinality of Troubleshooting MetricSets for each 10-second time window.

      * Dimension(s):  `orgId`
      * Data resolution: 10 seconds
  metric_type: gauge
  title: sf.org.apm.numTroubleshootingMetricSets10s

sf.org.apm.numTroubleshootingMetricSets:
  brief: The cardinality of Troubleshooting MetricSets for each 1-minute time window.
  description: |
    The cardinality of Troubleshooting MetricSets for each 1-minute time window.

      * Dimension(s):  `orgId`
      * Data resolution: 1 minute
  metric_type: 
  title: sf.org.apm.numTroubleshootingMetricSets

sf.org.apm.numSpansDroppedInvalid:
  brief: The number of invalid spans Splunk APM receives.
  description: |
    The number of invalid spans Splunk APM receives. A span can be invalid
    if there is no start time, trace ID, or service associated with it.
    
        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedInvalid

sf.org.apm.numSpansDroppedInvalidByToken:
  brief: The number of invalid spans Splunk APM receives for a specific access token.
  description: |
    The number of invalid spans Splunk APM receives for a specific access token.
    A span can be invalid if there is no start time, trace ID, or service associated with it.
    
        * Dimension(s):  `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedInvalidByToken

sf.org.apm.numSpansDroppedOversize:
  brief: The number of spans Splunk APM receives that are too large to process.
  description: |
    The number of spans Splunk APM receives that are too large to process.
  
      * Dimension(s):  `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedOversize

sf.org.apm.numSpansDroppedOversizeByToken:
  brief: The number of spans Splunk APM receives that are too large to process
    for a specific access token.
  description: |
    The number of spans Splunk APM receives that are too large to process
    for a specific access token.
  
      * Dimension(s):  `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numSpansDroppedOversizeByToken

sf.org.apm.grossContentBytesReceived:
  brief: The number of bytes Splunk APM receives before filtering
    and throttling.
  description: |
    The number of bytes Splunk APM receives before filtering
    and throttling. The content might be compressed or uncompressed.
  
      * Dimension(s):  `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossContentBytesReceived

sf.org.apm.grossContentBytesReceivedByToken:
  brief: The number of bytes Splunk APM receives for a specific access
    token before filtering and throttling.
  description: |
    The number of bytes Splunk APM receives for a specific
    access token before filtering and throttling. The content might be compressed or uncompressed.
  
      * Dimension(s):  `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.grossContentBytesReceivedByToken

sf.org.apm.numContentBytesReceived:
  brief: The number of bytes Splunk APM accepts after filtering
    and throttling.
  description: |
    The number of bytes Splunk APM accepts after filtering
    and throttling. The content might be compressed or uncompressed.
  
      * Dimension(s):  `orgId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numContentBytesReceived

sf.org.apm.numContentBytesReceivedByToken:
  brief: The number of bytes Splunk APM accepts for a specific access
    token after filtering and throttling.
  description: |
    The number of bytes Splunk APM accepts for a specific
    access token after filtering and throttling. The content might be compressed or uncompressed.
  
      * Dimension(s):  `orgId`, `tokenId`
      * Data resolution: 1 second
  metric_type: counter
  title: sf.org.apm.numContentBytesReceivedByToken

sf.org.abortedDetectors:
  brief: Detailed events for any aborted detectors
  description: |
    Contains the detectorID and reason for abort with the value/limit of MTS,
    or datapoints, whichever caused the detector to stop
  metric_type: cumulative
  title: sf.org.abortedDetectors

sf.org.grossDatapointsReceived:
  brief: Infrastructure Monitoring internal metric
  description: sf.org.grossDatapointsReceived is reserved for Infrastructure Monitoring internal use only.
  metric_type: cumulative
  title: sf.org.grossDatapointsReceived

sf.org.grossDatapointsReceivedByToken:
  brief: Infrastructure Monitoring internal metric
  description: sf.org.grossDatapointsReceivedByToken is reserved for Infrastructure Monitoring internal use only.
  metric_type: cumulative
  title: sf.org.grossDatapointsReceivedByToken

sf.org.num.alertmuting:
  brief: Total number of alert muting rules
  description: |
    Total number of alert muting rules; includes rules currently in effect
    and rules not currently in effect (e.g. scheduled muting rules).

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.alertmuting

sf.org.num.awsServiceCallCount:
  brief: Number of calls made to the Amazon API
  description: |
    Total number of calls made to the Amazon API.

        * Dimension(s):  `orgId`, `namespace` (AWS service, such as `AWS/Cloudwatch`), `method`
          (the API being called, such as `getMetricStatistics`)
        * Data resolution: 5 seconds
  metric_type: gauge
  title: sf.org.num.awsServiceCallCount

sf.org.num.awsServiceCallCountExceptions:
  brief: Number of Amazon API calls that threw exceptions
  description: |
    Number of calls made to the Amazon API that threw exceptions.

        * Dimension(s):  `orgId`, `namespace` (AWS service, such as AWS/Cloudwatch), `method`
          (the API being called, such as `getMetricStatistics`), `location` (where the exception
          occurred, either `client` or `server`)
        * Data resolution: 5 seconds
  metric_type: gauge
  title: sf.org.num.awsServiceCallCountExceptions

sf.org.num.awsServiceCallThrottles:
  brief: Number of Amazon API calls throttled by Amazon
  description: |
    Number of calls made to the Amazon API that are being throttled by
    AWS because you have exceeded your AWS API Call limits.

        * Dimension(s):  `orgId`, `namespace` (AWS service, such as AWS/Cloudwatch), `method`
          (the API being called, such as `getMetricStatistics`)
        * Data resolution: 5 seconds
  metric_type: gauge
  title: sf.org.num.awsServiceCallThrottles

sf.org.num.azureMonitorClientCallCount:
  brief: Number of calls made to the Azure Monitor API
  description: |
    Total number of calls made to the Amazon API.

        * Dimension(s):  `orgId`, `subscription_id`, `type` (`metric_data_sync` for metric
          syncing and `metric_metadata_sync` for property syncing), `method` (the function
          being performed, `getTimeseries` for listing metrics and `getMetricDefinition`
          for listing out metric definitions)
        * Data resolution: 5 seconds
  metric_type: gauge
  title: sf.org.num.azureMonitorClientCallCount

sf.org.num.azureMonitorClientCallCountErrors:
  brief: Number of calls to Azure Monitor API method that threw errors
  description: |
    Number of calls to Azure Monitor API method that threw errors.

        * Dimension(s):  `orgId`, `subscription_id`, `type` (`metric_data_sync` for metric
          syncing and `metric_metadata_sync` for property syncing), `method` (the function
          being performed, `getTimeseries` for listing metrics and `getMetricDefinition`
          for listing out metric definitions)
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.num.azureMonitorClientCallCountErrors

sf.org.num.azureMonitorClientCallCountThrottles:
  brief: Number of calls to Azure Monitor method that were throttled
  description: |
    Number of calls to Azure Monitor method that were throttled.

        * Dimension(s):  `orgId`, `subscription_id`, `type` (`metric_data_sync` for metric
          syncing and `metric_metadata_sync` for property syncing), `method` (the function
          being performed, `getTimeseries` for listing metrics and `getMetricDefinition`
          for listing out metric definitions)
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.num.azureMonitorClientCallCountThrottles

sf.org.num.chart:
  brief: Total number of charts
  description: |
    Total number of charts; includes any charts created using the Infrastructure Monitoring
    API but not associated with a dashboard.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.chart

sf.org.num.credentials:
  brief: Total number of integrations configured with credentials
  description: |
    Total number of integrations that have been configured with credentials
    in Infrastructure Monitoring, for the purpose of retrieving metrics (example: AWS Cloudwatch) or
    sending alerts (example: PagerDuty).

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.credentials

sf.org.num.dashboard:
  brief: Total number of dashboards
  description: |
    Total number of dashboards; includes all user, custom, and built-in
    dashboards

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.dashboard

sf.org.num.detector:
  brief: Total number of detectors
  description: |
    Total number of detectors; includes detectors that are muted.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.detector

sf.org.numDetectorsAborted:
  brief: Number of detectors that were stopped
  description: |
    Number of detector jobs stopped because they reached a resource limit (usually MTS limit).

        * Dimension(s):  `orgId`
        * Data resolution: 5 seconds
  metric_type: counter
  title: sf.org.numDetectorsAborted

sf.org.num.detectortemplate:
  brief: Infrastructure Monitoring internal metric
  description: sf.org.num.detectortemplate is reserved for Infrastructure Monitoring internal use only.
  metric_type: cumulative
  title: sf.org.num.detectortemplate

sf.org.num.dimension:
  brief: Number of unique dimensions across all time series
  description: |
    Number of unique dimensions across all time series.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.dimension

sf.org.num.eventtimeseries:
  brief: Number of event time series (ETS) available to be visualized in charts and
    detectors
  description: |
    Number of event time series (ETS) available to be visualized in charts
    and detectors.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.eventtimeseries

sf.org.num.eventtype:
  brief: Number of unique event types across all ETS
  description: |
    Number of unique event types across all ETS.

        * Dimension(s): `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.eventtype

sf.org.num.gcpStackdriverClientCallCount:
  brief: Number of calls to each Stackdriver client method
  description: |
    Number of calls to each Stackdriver client method.

        * Dimension(s):  `orgId`, `project_id`, `method` (the API being called, such as `getTimeSeries`)
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.num.gcpStackdriverClientCallCount

sf.org.num.gcpStackdriverClientCallCountErrors:
  brief: Number of calls to each Stackdriver client method that threw errors
  description: |
    Number of calls to each Stackdriver client method that threw errors.

        * Dimension(s):  `orgId`, `project_id`, `method` (the API being called, such as `getTimeSeries`)
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.num.gcpStackdriverClientCallCountErrors

sf.org.num.gcpStackdriverClientCallCountThrottles:
  brief: Number of calls to each Stackdriver client method that were throttled
  description: |
    Number of calls to each Stackdriver client method that were throttled.

        * Dimension(s):  `orgId`, `project_id`, `method` (the API being called, such as `getTimeSeries`)
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.num.gcpStackdriverClientCallCountThrottles

sf.org.num.metric:
  brief: Number of unique metrics across all MTS
  description: |
    Number of unique metrics across all MTS.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.metric

sf.org.num.metrictimeseries:
  brief: Number of metric time series available to be visualized in charts and detectors
  description: |
    Number of metric time series (MTS) available to be visualized in charts
    and detectors.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.metrictimeseries

sf.org.num.migrationmarker:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: gauge
  title: sf.org.num.migrationmarker

sf.org.num.namedtoken:
  brief: Number of access tokens
  description: |
    Number of organization access tokens, including disabled tokens.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.namedtoken

sf.org.num.navigator:
  brief: Number of options available in the sidebar in the Infrastructure Navigator
  description: |
    Number of options available in the sidebar in the Infrastructure Navigator.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.navigator

sf.org.num.notifications:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: cumulative
  title: sf.org.num.notifications

sf.org.num.orgpreference:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.num.orgpreference

sf.org.num.orguser:
  brief: Total number of members and admins
  description: |
    Total number of members and admins associated with an organization;
    includes invited users who have not yet logged in.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.orguser

sf.org.num.page:
  brief: Total number of dashboard groups
  description: |
    Total number of dashboard groups; includes user, custom, and built-in
    dashboard groups.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.page

sf.org.num.property:
  brief: Number of properties you have created (not dimensions)
  description: |
    Number of properties; includes only properties you have created, not
    dimensions. For the latter, use ``sf.org.num.dimension``.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.property

sf.org.num.service:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.num.service

sf.org.num.shareablesnapshot:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.num.shareablesnapshot

sf.org.num.source:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.num.source

sf.org.num.tag:
  brief: Number of tags
  description: |
    Number of tags available for use.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.tag

sf.org.num.team:
  brief: Number of teams
  description: |
    Number of teams in the organization.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.team

sf.org.num.teammember:
  brief: Number of users that are members of teams
  description: |
    Number of users that are members of teams; can be greater than the
    total number of users. For example, if team A has 30 members and team B has 20
    members, the value is 50 even if there are only 30 members in the org.

        * Dimension(s):  `orgId`
        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.num.teammember

sf.org.numActiveTimeSeries:
  brief: Number of currently active MTS
  description: |
    Total number of metric time series (MTS) currently active in the organization.
    (Use `sf.org.numInactiveTimeSeries` to see how many MTS are not active.)

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: gauge
  title: sf.org.numActiveTimeSeries

sf.org.numAddDatapointCalls:
  brief: Number of calls to send datapoints to Infrastructure Monitoring
  description: |
    Number of calls to send datapoints to Infrastructure Monitoring.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numAddDatapointCalls

sf.org.numAddDatapointCallsByToken:
  brief: Per token number of calls to send datapoints to Infrastructure Monitoring
  description: |
    One value per token; number of calls to send datapoints to Infrastructure Monitoring.
    The sum of all the values might be less than the value of `sf.org.numAddDatapointCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numAddDatapointCallsByToken

sf.org.numAddEventsCalls:
  brief: Number of calls to send custom events to Infrastructure Monitoring
  description: |
    Number of calls to send custom events to Infrastructure Monitoring.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numAddEventsCalls

sf.org.numAddEventsCallsByToken:
  brief: Per token number of calls to send custom events to Infrastructure Monitoring
  description: |
    One value per token; number of calls to send custom events to Infrastructure Monitoring.
    The sum of all the values might be less than the value of `sf.org.numAddEventsCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numAddEventsCallsByToken

sf.org.numBackfillCalls:
  brief: Number of of times a backfill API call was used to send metrics to Infrastructure Monitoring
  description: |
    One value per metric type, each representing the number of times a
    backfill API call was used to send metrics to Infrastructure Monitoring. 
    You can have up to three MTS for this metric;
    each MTS is sent with a dimension named `category` with a value of "counter",
    "cumulative_counter", or "gauge".
    To learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).

        * Dimension(s):  `category, orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numBackfillCalls

sf.org.numBackfillCallsByToken:
  brief: Per token number of times a backfill API call was used to send metrics to
    Infrastructure Monitoring
  description: |
    One value per metric type per token, each representing the number
    of times a backfill API call was used to send metrics to Infrastructure Monitoring. 
    You can have up to three MTS associated with each token; each MTS is sent with a dimension named `category`
    with a value of "counter","cumulative_counter", or "gauge". To learn more,
    see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of all the values might be less than the value of `sf.org.numBackfillCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s): `category`, `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numBackfillCallsByToken

sf.org.numCustomMetrics:
  brief: Number of custom metrics monitored
  description: |
    Number of custom metrics monitored by Infrastructure Monitoring.

        * Dimension(s):  `orgId`
        * Data resolution: 10 minutes
  metric_type: counter
  title: sf.org.numCustomMetrics

sf.org.numCustomMetricsByToken:
  brief: Per token number of custom metrics monitored
  description: |
    One value per token; number of custom metrics monitored by Infrastructure Monitoring.
    The sum of all the values might be less than the value of `sf.org.numCustomMetrics`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 10 minutes

  metric_type: counter
  title: sf.org.numCustomMetricsByToken

sf.org.numDatapointsBackfilled:
  brief: Number of datapoints that were sent using a backfill API
  description: |
    One value per metric type, each representing the number of datapoints
    that were sent using a backfill API.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).

        * Dimension(s):  `category, orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsBackfilled

sf.org.numDatapointsBackfilledByToken:
  brief: Per token number of datapoints that were sent using a backfill API
  description: |
    One value per metric type per token, each representing the number
    of datapoints that were sent using a backfill API.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of all the values might be less than the value of `sf.org.numDatapointsBackfilled`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `category, orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsBackfilledByToken

sf.org.numDatapointsDroppedExceededQuota:
  brief: Number of new datapoints not processed by Infrastructure Monitoring; exceeded subscription
    limit
  description: |
    Total number of new datapoints you sent to Infrastructure Monitoring but that Infrastructure Monitoring
    didn't accept, because your organization exceeded its subscription limit.
    To learn more about the process Infrastructure Monitoring uses for incoming data when you exceed subscription
    limits, see [this FAQ](https://docs.signalfx.com/en/latest/_sidebars-and-includes/dpm-faq.html).

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsDroppedExceededQuota

sf.org.numDatapointsDroppedExceededQuotaByToken:
  brief: Number of new datapoints not processed by Infrastructure Monitoring; exceeded subscription
    limit
  description: |
    One value per token; number of new datapoints you sent to Infrastructure Monitoring
    but that Infrastructure Monitoring didn't accept, because your organization exceeded its subscription
    limit.
    To learn more about the process Infrastructure Monitoring uses for incoming data when you exceed subscription
    limits, see [DPM Limits - FAQ](https://docs.signalfx.com/en/latest/_sidebars-and-includes/dpm-faq.html).
    The sum of all the values might be less than the value of `sf.org.numDatapointsDroppedExceededQuota`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsDroppedExceededQuotaByToken

sf.org.numDatapointsDroppedInTimeout:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numDatapointsDroppedInTimeout

sf.org.numDatapointsDroppedInTimeoutByToken:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numDatapointsDroppedInTimeoutByToken

sf.org.numDatapointsDroppedThrottle:
  brief: Number of datapoints not processed by Infrastructure Monitoring; exceeded DPM limit
  description: |
    Total number of datapoints you sent to Infrastructure Monitoring that Infrastructure Monitoring
    didn't accept because your organization significantly exceeded its DPM limit.
    Unlike `sf.org.numDatapointsDroppedExceededQuota`, this metric represents
    datapoints for both existing and new MTS. If Infrastructure Monitoring is throttling your organization,
    it isn't keeping any of your data. Contact [support](https://support.signalfx.com/hc/en-us/requests/new)
    for help with this issue.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsDroppedThrottle

sf.org.numDatapointsDroppedThrottleByToken:
  brief: Per token number of datapoints not processed by Infrastructure Monitoring; exceeded DPM limit
  description: |
    One value per token; number of datapoints you sent to Infrastructure Monitoring but
    that Infrastructure Monitoring didn't accept because your organization significantly exceeded
    its DPM limit.
    Unlike `sf.org.numDatapointsDroppedExceededQuota`, this metric represents
    datapoints for both existing and new MTS. If Infrastructure Monitoring is throttling your organization,
    it isn't keeping any of your data. Contact [support](https://support.signalfx.com/hc/en-us/requests/new)
    for help with this issue.
    The sum of all the values might be less than the value of `sf.org.numDatapointsDroppedThrottle`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsDroppedThrottleByToken

sf.org.numDatapointsReceived:
  brief: Number of datapoints Infrastructure Monitoring received
  description: |
    One value per metric type, each representing the number of datapoints that
    Infrastructure Monitoring received and processed.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of the values represents the total number of datapoints you sent to Infrastructure Monitoring minus any
    datapoints that weren't accepted because you exceeded a limit.

        * Dimension(s):  `category, orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsReceived

sf.org.numDatapointsReceivedByToken:
  brief: Per token number of datapoints Infrastructure Monitoring received
  description: |
    One value per metric type per token, each representing the number
    of datapoints Infrastructure Monitoring received and processed. The sum of values for a
    token is the total number of datapoints you sent to Infrastructure Monitoring minus the number of
    datapoints that Infrastructure Monitoring didn't accept because you exceeded a limit.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of all the values might be less than the value of `sf.org.numDatapointsReceived`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `category`, `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numDatapointsReceivedByToken

sf.org.numEventTimeSeriesCreated:
  brief: Number of event time series created
  description: |
    Total number of event time series (ETS) created. For MTS values, see `sf.org.numMetricTimeSeriesCreated`.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventTimeSeriesCreated

sf.org.numEventTimeSeriesCreatedByToken:
  brief: Per token number of event time series created
  description: |
    One value per token; number of event time series (ETS) created. For
    MTS values, see `sf.org.numMetricTimeSeriesCreatedByToken`.
    The sum of all the values might be less than the value of `sf.org.numEventTimeSeriesCreated`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventTimeSeriesCreatedByToken

sf.org.numEventsDroppedThrottle:
  brief: Number of events over per-minute limit
  description: |
    Number of custom events you sent to Infrastructure Monitoring but that Infrastructure Monitoring didn't
    accept, because your organization exceeded its per-minute limit.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventsDroppedThrottle

sf.org.numEventsDroppedThrottleByToken:
  brief: Per token number of events over per-minute limit
  description: |
    For each token, this is the number of custom events you sent to Infrastructure Monitoring
    but that Infrastructure Monitoring didn't accept, because your organization significantly exceeded
    its per-minute limit.
    The sum of all the values might be less than the value of `sf.org.numEventsDroppedThrottle`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventsDroppedThrottleByToken

sf.org.numEventsIngested:
  brief: Number of custom events received via the /event POST API
  description: |
    Number of custom events received by Infrastructure Monitoring through the /event POST
    API.

        * Dimension(s):  `orgId, category`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventsIngested

sf.org.numEventsIngestedByToken:
  brief: |
    For each token, this is the number of custom events sent by the *POST* `/event` operation.
  description: |
    For each token, this is the number of custom events sent by the *POST* `/event` operation.
    The sum of all the values might be less than the value of `sf.org.numEventsIngested`. To learn more,
    see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).

        * Dimension(s):  `orgId`, `tokenId`, `category`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numEventsIngestedByToken

sf.org.numEventsReceived:
  brief: Infrastructure Monitoring internal metric
  description: |
    Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numEventsReceived

sf.org.numEventsReceivedByToken:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numEventsReceivedByToken

sf.org.numHighResolutionMetrics:
  brief: Number of high resolution metrics monitored
  description: |
    Number of high resolution metrics monitored by Infrastructure Monitoring

        * Dimension(s):  `orgId`
        * Data resolution: 10 minutes
  metric_type: counter
  title: sf.org.numHighResolutionMetrics

sf.org.numHighResolutionMetricsByToken:
  brief: Per token number of high resolution metrics monitored
  description: |
    For each token, this is the number of high resolution metrics monitored by
    Infrastructure Monitoring.
    The sum of all the values might be less than the value of `sf.org.numHighResolutionMetrics`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 10 minutes
  metric_type: counter
  title: sf.org.numHighResolutionMetricsByToken

sf.org.numInactiveTimeSeries:
  brief: Number of inactive MTS
  description: |
    Total number of previously active metric time series (MTS) that are
    no longer active. Use `sf.org.numActiveTimeSeries` to see how many MTS are active.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: gauge
  title: sf.org.numInactiveTimeSeries

sf.org.numLimitedEventTimeSeriesCreateCalls:
  brief: Number of event time series over maximum ETS allowed
  description: |
    Number of event time series (ETS) that Infrastructure Monitoring was unable to create because
    you exceeded the maximum number of ETS allowed.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numLimitedEventTimeSeriesCreateCalls

sf.org.numLimitedEventTimeSeriesCreateCallsByToken:
  brief: Per token number of event time series over maximum ETS allowed
  description: |
    One value per token, each representing the number of event time series
    (ETS) Infrastructure Monitoring was unable to create because you exceeded the maximum number
    of ETS allowed.
    The sum of all the values might be less than the value of
    `sf.org.numLimitedEventTimeSeriesCreateCalls`. To learn more, [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `category`, `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numLimitedEventTimeSeriesCreateCallsByToken

sf.org.numLimitedMetricTimeSeriesCreateCalls:
  brief: Number of MTS not sent; over maximum allowed
  description: |
    One value per metric type, each representing the number of metric
    time series (MTS) not sent to Infrastructure Monitoring because you've reached your maximum active
    MTS allowed.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).

        * Dimension(s):  `category`, `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numLimitedMetricTimeSeriesCreateCalls

sf.org.numLimitedMetricTimeSeriesCreateCallsByToken:
  brief: Per token of MTS not sent; over maximum allowed
  description: |
    One value per metric type per token, each representing the number
    of metric time series (MTS) not sent to Infrastructure Monitoring because you've reached your
    maximum active MTS allowed.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of all the values might be less than the value of `sf.org.numLimitedMetricTimeSeriesCreateCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `category, orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numLimitedMetricTimeSeriesCreateCallsByToken

sf.org.numMappingsAdded:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMappingsAdded

sf.org.numMappingsAddedByToken:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMappingsAddedByToken

sf.org.numMetadataWrites:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMetadataWrites

sf.org.numMetadataWritesByToken:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMetadataWritesByToken

sf.org.numMetadataWritesThrottled:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMetadataWritesThrottled

sf.org.numMetadataWrttesThrottledByToken:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.numMetadataWrttesThrottledByToken

sf.org.numMetricTimeSeriesCreated:
  brief: Number of MTS created
  description: |
    One value per metric type, each representing the number of metric time series (MTS)
    created that have that type. You can have up to three MTS for this metric; each MTS
    is sent with a dimension named `category` with a value of "counter", "cumulative_counter", or
    "gauge". To learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
      
        * Dimension(s):  `category`, `orgId`
        * Data resolution: 5 seconds
  metric_type: counter
  title: sf.org.numMetricTimeSeriesCreated

sf.org.numMetricTimeSeriesCreatedByToken:
  brief: Per token number of MTS created
  description: |
    One value per metric type per token, each representing the number of metric time series (MTS)
    created that have that type.
    You can have up to three MTS for this metric; each MTS is sent with a dimension
    named `category` with a value of "counter", "cumulative_counter", or "gauge". To
    learn more, see [Metrics with values for each metric type](#metrics-with-values-for-each-metric-type).
    The sum of all the values might be less than the value of `sf.org.numMetricTimeSeriesCreated`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s): `category`, `orgId`, `tokenId`
        * Data resolution: 5 seconds
  metric_type: counter
  title: sf.org.numMetricTimeSeriesCreatedByToken

sf.org.numNewDimensions:
  brief: Number of new dimensions that were created
  description: |
    The number of new dimensions (key:value pairs) created.

      * Data resolution: 5 minutes
  metric_type: counter
  title: sf.org.numNewDimensions

sf.org.numNewDimensionsByName:
  brief: Number of new dimensions for each unique dimension name
  description: |
    The number of new dimensions created for each unique dimension name
    (key from key:value pair). Only the top 100 dimension names (by number of dimensions
    created) are included, in addition to dimension name `sf_metric`, which is always
    included.

        * Data resolution: 5 minutes
  metric_type: counter
  title: sf.org.numNewDimensionsByName

sf.org.numPropertyLimitedMetricTimeSeriesCreateCalls:
  brief: Number of MTS that Infrastructure Monitoring was not able to create because you exceeded the dimension name limit
  description: |
    Number of metric time series (MTS) Infrastructure Monitoring was unable to create because
    you reached your maximum number of unique dimension names.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numPropertyLimitedMetricTimeSeriesCreateCalls

sf.org.numPropertyLimitedMetricTimeSeriesCreateCallsByToken:
  brief: Per token number of MTS that Infrastructure Monitoring was not able to create because you exceeded the dimension name limit

  description: |
    One value per token; number of metric time series (MTS) Infrastructure Monitoring was
    unable to create because you reached your maximum number of unique dimension names.
    The sum of all the values might be less than the value of `sf.org.numPropertyLimitedMetricTimeSeriesCreateCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numPropertyLimitedMetricTimeSeriesCreateCallsByToken

sf.org.numResourcesMonitored:
  brief: Number of host-based resources monitored
  description: |
    Number of hosts or containers that Infrastructure Monitoring is currently monitoring.
    The `resourceType` dimension indicates whether the value represents hosts or containers.

        * Dimension(s):  `orgId`, `resourceType`
        * Data resolution: 10 minutes
  metric_type: counter
  title: sf.org.numResourcesMonitored

sf.org.numResourcesMonitoredByToken:
  brief: Per-token number of host-based resources monitored
  description: |
    One value per token; number of hosts or containers that Infrastructure Monitoring is monitoring.
    This metric isn't created until a host or container starts sending a host or container metric.
    The `resourceType` dimension indicates whether the value represents hosts or containers.
    The sum of all the values might be less than the value of `sf.org.numResourcesMonitored`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId`, `resourceType`, tokenId`
        * Data resolution: 10 minutes
  metric_type: counter
  title: sf.org.numResourcesMonitoredByToken

sf.org.numRestCalls:
  brief: Number of REST calls made to the Infrastructure Monitoring API
  description: |
    Number of REST calls made to the Infrastructure Monitoring API.
    
        * Dimension(s):  `orgId`
        * Data resolution: 1 second"
  metric_type: counter
  title: sf.org.numRestCalls

sf.org.numRestCallsByToken:
  brief: Per token number of REST calls made to the Infrastructure Monitoring API
  description: |
    For each token, the number of REST calls made to the Infrastructure Monitoring API.
    The sum of all the values might be less than the value of `sf.org.numRestCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId`, `tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numRestCallsByToken

sf.org.numRestCallsThrottled:
  brief: Number of REST calls not accepted by Infrastructure Monitoring; exceeded per-minute limit
  description: |
    Number of REST calls you made to the Infrastructure Monitoring API that were not accepted
    by Infrastructure Monitoring, because your organization significantly exceeded its per-minute limit.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numRestCallsThrottled

sf.org.numRestCallsThrottledByToken:
  brief: Per-token number of REST calls not accepted by Infrastructure Monitoring; exceeded per-minute
    limit
  description: |
    For each token, the number of REST calls you made to the Infrastructure Monitoring
    API that were not accepted by Infrastructure Monitoring because your organization significantly
    exceeded its per-minute limit.
    The sum of all the values might be less than the value of `sf.org.numRestCallsThrottled`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numRestCallsThrottledByToken

sf.org.numThrottledEventTimeSeriesCreateCalls:
  brief: Number of events not processed by Infrastructure Monitoring; exceeded per-minute event creation
    limit
  description: |
    Total number of event time series (ETS) that Infrastructure Monitoring was unable to create,
    because you significantly exceeded your per-minute event creation limit.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numThrottledEventTimeSeriesCreateCalls

sf.org.numThrottledEventTimeSeriesCreateCallsByToken:
  brief: Per token number of events not processed by Infrastructure Monitoring; exceeded per-minute
    event creation limit
  description: |
    For each token, the number of event time series (ETS) that Infrastructure Monitoring was
    unable to create because you significantly exceeded your per-minute event creation
    limit.
    The sum of all the values might be less than the value of `sf.org.numThrottledEventTimeSeriesCreateCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numThrottledEventTimeSeriesCreateCallsByToken

sf.org.numThrottledMetricTimeSeriesCreateCalls:
  brief: Number of metric time series not processed by Infrastructure Monitoring; exceeded per-minute
    or per-hour MTS creation limit
  description: |
    Number of metric time series (MTS) that Infrastructure Monitoring was unable to create because
    you significantly exceeded your per-minute or per-hour MTS creation limit.

        * Dimension(s):  `orgId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numThrottledMetricTimeSeriesCreateCalls

sf.org.numThrottledMetricTimeSeriesCreateCallsByToken:
  brief: Per token number of MTS not processed by Infrastructure Monitoring; exceeded per-minute or
    per-hour MTS creation limit
  description: |
    For each token, the number of metric time series (MTS) Infrastructure Monitoring was unable to
    create because your organization significantly exceeded its per-minute or per-hour
    MTS creation limit.
    The sum of all the values might be less than the value of `sf.org.numThrottledMetricTimeSeriesCreateCalls`.
    To learn more, see [Metric pairs that provide total and ByToken values](#metric-pairs-that-provide-total-and-bytoken-values).

        * Dimension(s):  `orgId, tokenId`
        * Data resolution: 1 second
  metric_type: counter
  title: sf.org.numThrottledMetricTimeSeriesCreateCallsByToken

sf.org.numUniqueNamesInNewDimensions:
  brief: Number of unique dimension names that were created
  description: |
    The number of unique dimension names (keys) created in all new dimensions
        * Data resolution: 5 minutes
  metric_type: counter
  title: sf.org.numUniqueNamesInNewDimensions

sf.org.subscription.activeTimeSeries:
  brief: Maximum number of active MTS
  description: |
    Maximum number of active metric time series (MTS).

        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.subscription.activeTimeSeries

sf.org.subscription.datapointsPerMinute:
  brief: Maximum number of datapoints per minute (DPM)
  description: |
    Maximum number of datapoints per minute (DPM) that Infrastructure Monitoring will process
    and store.

        * Data resolution: 15 minutes
  metric_type: gauge
  title: sf.org.suscription.datapointsPerMinute

sf.org.ui.num.pagevisits:
  brief: Infrastructure Monitoring internal metric
  description: Reserved for Infrastructure Monitoring internal use only.
  metric_type: null
  title: sf.org.ui.num.pagevisits

sf.org.limit.activeTimeSeries:
  brief: Number of active MTS allowed for your organization
  description: |
    Maximum number of active MTS your organization can have in a 25 hour time window. If you exceed this limit,
    Infrastructure Monitoring stops accepting data points of new MTS but continues to accept datapoints for existing
    MTS. To monitor your usage against the limit, use the metric `sf.org.numActiveTimeSeries`.
  metric_type: gauge
  title: sf.org.limit.activeTimeSeries

sf.org.limit.metricTimeSeriesCreatedPerMinute:
  brief: Number of MTS you can create per minute
  description: |
    Maximum number of new MTS per minute that you can create in your organization.
    If you exceed this rate, Infrastructure Monitoring stops accepting data points of new MTS but continues to accept
    data points for existing MTS.
  metric_type: gauge
  title: sf.org.limit.metricTimeSeriesCreatedPerMinute

sf.org.limit.hosts:
  brief: Maximum number of hosts that can send data to your organization
  description: |
    Maximum number of hosts for your organization that can send data to Infrastructure Monitoring.
    If you exceed this limit, Infrastructure Monitoring drops data points from newly-added hosts but continues to
    accept data points from existing hosts. To monitor your usage against the limit,
    use the metric `sf.org.numResourcesMonitored` and filter for the dimension `resourceId:hosts`.
  metric_type: gauge
  title: sf.org.limit.hosts

sf.org.limit.containers:
  brief: Maximum number of Docker containers that can send data to your organization
  description: |
    Maximum number of Docker containers for your organization that can send data to Infrastructure Monitoring.
    If you exceed this limit, Infrastructure Monitoring drops data points from newly-added containers but continues to
    accept data points from existing containers. To monitor your usage against the limit,
    use the metric `sf.org.numResourcesMonitored` and filter for the dimension `resourceId:containers`.
  metric_type: gauge
  title: sf.org.limit.containers

sf.org.limit.customMetricTimeSeries:
  brief: Maximum number of custom MTS you can create in your organization within a 1 hour time window
  description: |
    Maximum number of custom MTS you can create in your organization in a 1 hour time window.
    If you exceed this limit, Infrastructure Monitoring stops accepting datapoints for new custom MTS,
    but keeps accepting datapoints for existing custom MTS. To see the overall number of custom metrics
    you've define, use the metric `sf.org.numCustomMetrics`.
    Custom MTS use a metric defined by you, rather than a metric defined by an integration. To learn more about custom
    MTS, see the user documentation section
    (About custom, bundled, and high-resolution metrics)[https://docs.signalfx.com/en/latest/admin-guide/usage.html#about-custom-bundled-and-high-resolution-metrics].
  metric_type: gauge
  title: sf.org.limit.customMetricTimeSeries
